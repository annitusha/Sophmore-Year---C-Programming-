Script started on 2021-08-26 14:59:01-04:00 [TERM="xterm" TTY="/dev/pts/4" COLUMNS="93" LINES="24"]
    Script started, file is lab0.LOGakozina2@remote00:~/tmp/lab0$     Script started, file is lab0.LOG[Kakozina2@remote00:~/tmp/lab0$     Script started, file is lab0.LOG[K[Aakozina2@remote00:~/tmp/lab0$     Script started, file is lab0.LOG[Kakozina2@remote00:~/tmp/lab0$     Script started, file is lab0.LOG[Kakozina2@remote00:~/tmp/lab0$     Script started, file is lab0.LOG
bash: Script: command not found
akozina2@remote00:~/tmp/lab0$ ls ~/.ssh
authorized_keys  id_rsa  id_rsa.pub  known_hosts
akozina2@remote00:~/tmp/lab0$  git log -5
fatal: not a git repository (or any parent up to mount point /import)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
akozina2@remote00:~/tmp/lab0$ ssh://user@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git
bash: ssh://user@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git: No such file or directory
akozina2@remote00:~/tmp/lab0$ 
akozina2@remote00:~/tmp/lab0$ mkdir -p ~/projects
akozina2@remote00:~/tmp/lab0$ cd ~/projects
akozina2@remote00:~/projects$ git clone ssh://user@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr@remote.cs.binghamton.edu/~umrigar/git-repos/[1Pcs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cr@remote.cs.binghamton.edu/~umrigar/git-repos/c[1Ps220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C@remote.cs.binghamton.edu/~umrigar/git-repos/cs[1P220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C@remote.cs.binghamton.edu/~umrigar/git-repos/cs2[C[1P0.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca@remote.cs.binghamton.edu/~umrigar/git-repos/cs[C20.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ck@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cz@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ci@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cn@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ca@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
Cloning into 'cs220'...
The authenticity of host 'remote.cs.binghamton.edu (128.226.114.200)' can't be established.
ECDSA key fingerprint is SHA256:UEIh1TASIC96TC1hhxVbkVS0DrddNKHk7Q2nzgDCt+Y.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'remote.cs.binghamton.edu,128.226.114.200' (ECDSA) to the list of known hosts.
remote: Enumerating objects: 305, done.[K
remote: Counting objects:   0% (1/305)[Kremote: Counting objects:   1% (4/305)[Kremote: Counting objects:   2% (7/305)[Kremote: Counting objects:   3% (10/305)[Kremote: Counting objects:   4% (13/305)[Kremote: Counting objects:   5% (16/305)[Kremote: Counting objects:   6% (19/305)[Kremote: Counting objects:   7% (22/305)[Kremote: Counting objects:   8% (25/305)[Kremote: Counting objects:   9% (28/305)[Kremote: Counting objects:  10% (31/305)[Kremote: Counting objects:  11% (34/305)[Kremote: Counting objects:  12% (37/305)[Kremote: Counting objects:  13% (40/305)[Kremote: Counting objects:  14% (43/305)[Kremote: Counting objects:  15% (46/305)[Kremote: Counting objects:  16% (49/305)[Kremote: Counting objects:  17% (52/305)[Kremote: Counting objects:  18% (55/305)[Kremote: Counting objects:  19% (58/305)[Kremote: Counting objects:  20% (61/305)[Kremote: Counting objects:  21% (65/305)[Kremote: Counting objects:  22% (68/305)[Kremote: Counting objects:  23% (71/305)[Kremote: Counting objects:  24% (74/305)[Kremote: Counting objects:  25% (77/305)[Kremote: Counting objects:  26% (80/305)[Kremote: Counting objects:  27% (83/305)[Kremote: Counting objects:  28% (86/305)[Kremote: Counting objects:  29% (89/305)[Kremote: Counting objects:  30% (92/305)[Kremote: Counting objects:  31% (95/305)[Kremote: Counting objects:  32% (98/305)[Kremote: Counting objects:  33% (101/305)[Kremote: Counting objects:  34% (104/305)[Kremote: Counting objects:  35% (107/305)[Kremote: Counting objects:  36% (110/305)[Kremote: Counting objects:  37% (113/305)[Kremote: Counting objects:  38% (116/305)[Kremote: Counting objects:  39% (119/305)[Kremote: Counting objects:  40% (122/305)[Kremote: Counting objects:  41% (126/305)[Kremote: Counting objects:  42% (129/305)[Kremote: Counting objects:  43% (132/305)[Kremote: Counting objects:  44% (135/305)[Kremote: Counting objects:  45% (138/305)[Kremote: Counting objects:  46% (141/305)[Kremote: Counting objects:  47% (144/305)[Kremote: Counting objects:  48% (147/305)[Kremote: Counting objects:  49% (150/305)[Kremote: Counting objects:  50% (153/305)[Kremote: Counting objects:  51% (156/305)[Kremote: Counting objects:  52% (159/305)[Kremote: Counting objects:  53% (162/305)[Kremote: Counting objects:  54% (165/305)[Kremote: Counting objects:  55% (168/305)[Kremote: Counting objects:  56% (171/305)[Kremote: Counting objects:  57% (174/305)[Kremote: Counting objects:  58% (177/305)[Kremote: Counting objects:  59% (180/305)[Kremote: Counting objects:  60% (183/305)[Kremote: Counting objects:  61% (187/305)[Kremote: Counting objects:  62% (190/305)[Kremote: Counting objects:  63% (193/305)[Kremote: Counting objects:  64% (196/305)[Kremote: Counting objects:  65% (199/305)[Kremote: Counting objects:  66% (202/305)[Kremote: Counting objects:  67% (205/305)[Kremote: Counting objects:  68% (208/305)[Kremote: Counting objects:  69% (211/305)[Kremote: Counting objects:  70% (214/305)[Kremote: Counting objects:  71% (217/305)[Kremote: Counting objects:  72% (220/305)[Kremote: Counting objects:  73% (223/305)[Kremote: Counting objects:  74% (226/305)[Kremote: Counting objects:  75% (229/305)[Kremote: Counting objects:  76% (232/305)[Kremote: Counting objects:  77% (235/305)[Kremote: Counting objects:  78% (238/305)[Kremote: Counting objects:  79% (241/305)[Kremote: Counting objects:  80% (244/305)[Kremote: Counting objects:  81% (248/305)[Kremote: Counting objects:  82% (251/305)[Kremote: Counting objects:  83% (254/305)[Kremote: Counting objects:  84% (257/305)[Kremote: Counting objects:  85% (260/305)[Kremote: Counting objects:  86% (263/305)[Kremote: Counting objects:  87% (266/305)[Kremote: Counting objects:  88% (269/305)[Kremote: Counting objects:  89% (272/305)[Kremote: Counting objects:  90% (275/305)[Kremote: Counting objects:  91% (278/305)[Kremote: Counting objects:  92% (281/305)[Kremote: Counting objects:  93% (284/305)[Kremote: Counting objects:  94% (287/305)[Kremote: Counting objects:  95% (290/305)[Kremote: Counting objects:  96% (293/305)[Kremote: Counting objects:  97% (296/305)[Kremote: Counting objects:  98% (299/305)[Kremote: Counting objects:  99% (302/305)[Kremote: Counting objects: 100% (305/305)[Kremote: Counting objects: 100% (305/305), done.[K
remote: Compressing objects:   0% (1/292)[Kremote: Compressing objects:   1% (3/292)[Kremote: Compressing objects:   2% (6/292)[Kremote: Compressing objects:   3% (9/292)[Kremote: Compressing objects:   4% (12/292)[Kremote: Compressing objects:   5% (15/292)[Kremote: Compressing objects:   6% (18/292)[Kremote: Compressing objects:   7% (21/292)[Kremote: Compressing objects:   8% (24/292)[Kremote: Compressing objects:   9% (27/292)[Kremote: Compressing objects:  10% (30/292)[Kremote: Compressing objects:  11% (33/292)[Kremote: Compressing objects:  12% (36/292)[Kremote: Compressing objects:  13% (38/292)[Kremote: Compressing objects:  14% (41/292)[Kremote: Compressing objects:  15% (44/292)[Kremote: Compressing objects:  16% (47/292)[Kremote: Compressing objects:  17% (50/292)[Kremote: Compressing objects:  18% (53/292)[Kremote: Compressing objects:  19% (56/292)[Kremote: Compressing objects:  20% (59/292)[Kremote: Compressing objects:  21% (62/292)[Kremote: Compressing objects:  22% (65/292)[Kremote: Compressing objects:  23% (68/292)[Kremote: Compressing objects:  24% (71/292)[Kremote: Compressing objects:  25% (73/292)[Kremote: Compressing objects:  26% (76/292)[Kremote: Compressing objects:  27% (79/292)[Kremote: Compressing objects:  28% (82/292)[Kremote: Compressing objects:  29% (85/292)[Kremote: Compressing objects:  30% (88/292)[Kremote: Compressing objects:  31% (91/292)[Kremote: Compressing objects:  32% (94/292)[Kremote: Compressing objects:  33% (97/292)[Kremote: Compressing objects:  34% (100/292)[Kremote: Compressing objects:  35% (103/292)[Kremote: Compressing objects:  36% (106/292)[Kremote: Compressing objects:  37% (109/292)[Kremote: Compressing objects:  38% (111/292)[Kremote: Compressing objects:  39% (114/292)[Kremote: Compressing objects:  40% (117/292)[Kremote: Compressing objects:  41% (120/292)[Kremote: Compressing objects:  42% (123/292)[Kremote: Compressing objects:  43% (126/292)[Kremote: Compressing objects:  44% (129/292)[Kremote: Compressing objects:  45% (132/292)[Kremote: Compressing objects:  46% (135/292)[Kremote: Compressing objects:  47% (138/292)[Kremote: Compressing objects:  48% (141/292)[Kremote: Compressing objects:  49% (144/292)[Kremote: Compressing objects:  50% (146/292)[Kremote: Compressing objects:  51% (149/292)[Kremote: Compressing objects:  52% (152/292)[Kremote: Compressing objects:  53% (155/292)[Kremote: Compressing objects:  54% (158/292)[Kremote: Compressing objects:  55% (161/292)[Kremote: Compressing objects:  56% (164/292)[Kremote: Compressing objects:  57% (167/292)[Kremote: Compressing objects:  58% (170/292)[Kremote: Compressing objects:  59% (173/292)[Kremote: Compressing objects:  60% (176/292)[Kremote: Compressing objects:  61% (179/292)[Kremote: Compressing objects:  62% (182/292)[Kremote: Compressing objects:  63% (184/292)[Kremote: Compressing objects:  64% (187/292)[Kremote: Compressing objects:  65% (190/292)[Kremote: Compressing objects:  66% (193/292)[Kremote: Compressing objects:  67% (196/292)[Kremote: Compressing objects:  68% (199/292)[Kremote: Compressing objects:  69% (202/292)[Kremote: Compressing objects:  70% (205/292)[Kremote: Compressing objects:  71% (208/292)[Kremote: Compressing objects:  72% (211/292)[Kremote: Compressing objects:  73% (214/292)[Kremote: Compressing objects:  74% (217/292)[Kremote: Compressing objects:  75% (219/292)[Kremote: Compressing objects:  76% (222/292)[Kremote: Compressing objects:  77% (225/292)[Kremote: Compressing objects:  78% (228/292)[Kremote: Compressing objects:  79% (231/292)[Kremote: Compressing objects:  80% (234/292)[Kremote: Compressing objects:  81% (237/292)[Kremote: Compressing objects:  82% (240/292)[Kremote: Compressing objects:  83% (243/292)[Kremote: Compressing objects:  84% (246/292)[Kremote: Compressing objects:  85% (249/292)[Kremote: Compressing objects:  86% (252/292)[Kremote: Compressing objects:  87% (255/292)[Kremote: Compressing objects:  88% (257/292)[Kremote: Compressing objects:  89% (260/292)[Kremote: Compressing objects:  90% (263/292)[Kremote: Compressing objects:  91% (266/292)[Kremote: Compressing objects:  92% (269/292)[Kremote: Compressing objects:  93% (272/292)[Kremote: Compressing objects:  94% (275/292)[Kremote: Compressing objects:  95% (278/292)[Kremote: Compressing objects:  96% (281/292)[Kremote: Compressing objects:  97% (284/292)[Kremote: Compressing objects:  98% (287/292)[Kremote: Compressing objects:  99% (290/292)[Kremote: Compressing objects: 100% (292/292)[Kremote: Compressing objects: 100% (292/292), done.[K
Receiving objects:   0% (1/305)Receiving objects:   1% (4/305)Receiving objects:   2% (7/305)Receiving objects:   3% (10/305)Receiving objects:   4% (13/305)Receiving objects:   5% (16/305)Receiving objects:   6% (19/305)Receiving objects:   7% (22/305)Receiving objects:   8% (25/305)Receiving objects:   9% (28/305)Receiving objects:  10% (31/305)Receiving objects:  11% (34/305)Receiving objects:  12% (37/305)Receiving objects:  13% (40/305)Receiving objects:  14% (43/305)Receiving objects:  15% (46/305)Receiving objects:  16% (49/305)Receiving objects:  17% (52/305)Receiving objects:  18% (55/305)Receiving objects:  19% (58/305)Receiving objects:  20% (61/305)Receiving objects:  21% (65/305)Receiving objects:  22% (68/305)Receiving objects:  23% (71/305)Receiving objects:  24% (74/305)Receiving objects:  25% (77/305)Receiving objects:  26% (80/305)Receiving objects:  27% (83/305)Receiving objects:  28% (86/305)Receiving objects:  29% (89/305)Receiving objects:  30% (92/305)Receiving objects:  31% (95/305)Receiving objects:  32% (98/305)Receiving objects:  33% (101/305)Receiving objects:  34% (104/305)Receiving objects:  35% (107/305)Receiving objects:  36% (110/305)Receiving objects:  37% (113/305)Receiving objects:  38% (116/305)Receiving objects:  39% (119/305)Receiving objects:  40% (122/305)Receiving objects:  41% (126/305)Receiving objects:  42% (129/305)Receiving objects:  43% (132/305)Receiving objects:  44% (135/305)Receiving objects:  45% (138/305)Receiving objects:  46% (141/305)Receiving objects:  47% (144/305)Receiving objects:  48% (147/305)Receiving objects:  49% (150/305)Receiving objects:  50% (153/305)Receiving objects:  51% (156/305)Receiving objects:  52% (159/305)Receiving objects:  53% (162/305)Receiving objects:  54% (165/305)Receiving objects:  55% (168/305)Receiving objects:  56% (171/305)Receiving objects:  57% (174/305)Receiving objects:  58% (177/305)Receiving objects:  59% (180/305)Receiving objects:  60% (183/305)Receiving objects:  61% (187/305)Receiving objects:  62% (190/305)Receiving objects:  63% (193/305)Receiving objects:  64% (196/305)Receiving objects:  65% (199/305)Receiving objects:  66% (202/305)Receiving objects:  67% (205/305)Receiving objects:  68% (208/305)Receiving objects:  69% (211/305)Receiving objects:  70% (214/305)Receiving objects:  71% (217/305)Receiving objects:  72% (220/305)Receiving objects:  73% (223/305)Receiving objects:  74% (226/305)Receiving objects:  75% (229/305)Receiving objects:  76% (232/305)Receiving objects:  77% (235/305)Receiving objects:  78% (238/305)Receiving objects:  79% (241/305)Receiving objects:  80% (244/305)Receiving objects:  81% (248/305)Receiving objects:  82% (251/305)Receiving objects:  83% (254/305)Receiving objects:  84% (257/305)Receiving objects:  85% (260/305)Receiving objects:  86% (263/305)Receiving objects:  87% (266/305)Receiving objects:  88% (269/305)Receiving objects:  89% (272/305)Receiving objects:  90% (275/305)Receiving objects:  91% (278/305)Receiving objects:  92% (281/305)Receiving objects:  93% (284/305)Receiving objects:  94% (287/305)Receiving objects:  95% (290/305)Receiving objects:  96% (293/305)remote: Total 305 (delta 85), reused 0 (delta 0), pack-reused 0
Receiving objects:  97% (296/305)Receiving objects:  98% (299/305)Receiving objects:  99% (302/305)Receiving objects: 100% (305/305)Receiving objects: 100% (305/305), 1.68 MiB | 8.89 MiB/s, done.
Resolving deltas:   0% (0/85)Resolving deltas:   1% (1/85)Resolving deltas:   3% (3/85)Resolving deltas:   4% (4/85)Resolving deltas:   5% (5/85)Resolving deltas:   7% (6/85)Resolving deltas:   8% (7/85)Resolving deltas:   9% (8/85)Resolving deltas:  10% (9/85)Resolving deltas:  11% (10/85)Resolving deltas:  12% (11/85)Resolving deltas:  14% (12/85)Resolving deltas:  15% (13/85)Resolving deltas:  16% (14/85)Resolving deltas:  17% (15/85)Resolving deltas:  18% (16/85)Resolving deltas:  20% (17/85)Resolving deltas:  21% (18/85)Resolving deltas:  22% (19/85)Resolving deltas:  23% (20/85)Resolving deltas:  24% (21/85)Resolving deltas:  25% (22/85)Resolving deltas:  27% (23/85)Resolving deltas:  28% (24/85)Resolving deltas:  29% (25/85)Resolving deltas:  30% (26/85)Resolving deltas:  31% (27/85)Resolving deltas:  32% (28/85)Resolving deltas:  34% (29/85)Resolving deltas:  35% (30/85)Resolving deltas:  36% (31/85)Resolving deltas:  37% (32/85)Resolving deltas:  38% (33/85)Resolving deltas:  40% (34/85)Resolving deltas:  41% (35/85)Resolving deltas:  42% (36/85)Resolving deltas:  43% (37/85)Resolving deltas:  44% (38/85)Resolving deltas:  45% (39/85)Resolving deltas:  47% (40/85)Resolving deltas:  48% (41/85)Resolving deltas:  49% (42/85)Resolving deltas:  50% (43/85)Resolving deltas:  51% (44/85)Resolving deltas:  52% (45/85)Resolving deltas:  54% (46/85)Resolving deltas:  55% (47/85)Resolving deltas:  56% (48/85)Resolving deltas:  57% (49/85)Resolving deltas:  58% (50/85)Resolving deltas:  60% (51/85)Resolving deltas:  61% (52/85)Resolving deltas:  62% (53/85)Resolving deltas:  63% (54/85)Resolving deltas:  64% (55/85)Resolving deltas:  65% (56/85)Resolving deltas:  67% (57/85)Resolving deltas:  68% (58/85)Resolving deltas:  69% (59/85)Resolving deltas:  70% (60/85)Resolving deltas:  71% (61/85)Resolving deltas:  72% (62/85)Resolving deltas:  74% (63/85)Resolving deltas:  75% (64/85)Resolving deltas:  76% (65/85)Resolving deltas:  77% (66/85)Resolving deltas:  78% (67/85)Resolving deltas:  80% (68/85)Resolving deltas:  81% (69/85)Resolving deltas:  82% (70/85)Resolving deltas:  83% (71/85)Resolving deltas:  84% (72/85)Resolving deltas:  85% (73/85)Resolving deltas:  87% (74/85)Resolving deltas:  88% (75/85)Resolving deltas:  89% (76/85)Resolving deltas:  90% (77/85)Resolving deltas:  91% (78/85)Resolving deltas:  92% (79/85)Resolving deltas:  94% (80/85)Resolving deltas:  95% (81/85)Resolving deltas:  96% (82/85)Resolving deltas:  97% (83/85)Resolving deltas:  98% (84/85)Resolving deltas: 100% (85/85)Resolving deltas: 100% (85/85), done.
akozina2@remote00:~/projects$ [Kakozina2@remote00:~/projects$ [Kakozina2@remote00:~/projects$ [Kakozina2@remote00:~/projects$ cd [K[K[Kcd ~
akozina2@remote00:~$ ln -s projects/cs220
akozina2@remote00:~$ ls
 ann		 binarymult.txt   lab13.zip	       output.txt~   test.c
'#anna.c#'	 cs220		  lastname.txt	       printhex.c    test.c~
 anna.c		'#fahren.c#'	 '#multi.c#'	       projects     '#test.s#'
 anna.c~	 fahren.c	  multi.c	       sort3.c	     test.s
 anna_cs	 fahren.c~	  multi.c~	       sort3.c~      test.s~
 annaexec	 firstname.txt	  multTable2.s	      '#sort.c#'     tinyProc.s
 annasort	 hello		  multTable2.s~        sort.c	     tinyProc.s~
'#ann.c#'	 hello.c	  multTable.c	       sort.c~	     tmp
 ann.c		 hello.c~	 '#multTable.s#'      '#test#'	    '#total.c#'
 ann.c~		 homework9.s	  multTable.s	      '#test2.c#'    tp3assembler
 annitusha.c	 homework9.s~	  multTable.s~	       test2.c	     tp3assembler.c
 average.c	 hw9QtSpim.c	 '#nameAsemmblyL.s#'   test2.s	     uppercase.c
 average.c~	 input.txt	  nameAssemblyL.s      test2.s~      uppercase.c~
 binarymult.c	 input.txt~	  nameAssemblyL.s~     test3.c	     xyz
 binarymult.c~	 lab13		  output.txt	       test3.c~      zipcode.txt
akozina2@remote00:~$ cd ~/projects/cs220
akozina2@remote00:~/projects/cs220$ git pull
[33mhint: Pulling without specifying how to reconcile divergent branches is[m
[33mhint: discouraged. You can squelch this message by running one of the following[m
[33mhint: commands sometime before your next pull:[m
[33mhint: [m
[33mhint:   git config pull.rebase false  # merge (the default strategy)[m
[33mhint:   git config pull.rebase true   # rebase[m
[33mhint:   git config pull.ff only       # fast-forward only[m
[33mhint: [m
[33mhint: You can replace "git config" with "git config --global" to set a default[m
[33mhint: preference for all repositories. You can also pass --rebase, --no-rebase,[m
[33mhint: or --ff-only on the command line to override the configured default per[m
[33mhint: invocation.[m
Already up to date.
akozina2@remote00:~/projects/cs220$ git log -5
[?1h=[33mcommit 0305b86713046c529f54718435c6af9c8c6cd675[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 22:07:50 2021 -0400[m
[m
    lab0 tweaks[m
[m
[33mcommit 9a6567527398cc3238ab38629a58873a55e7f3e7[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 16:19:48 2021 -0400[m
[m
    fix problems seen in class[m
[m
[33mcommit 34009f8097c9b3d4a61ec3376464a298c8db62a6[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 12:56:10 2021 -0400[m
[m
    grade assignment[m
[m
[33mcommit f471d336c1f9a89740b916f65e950fb51e8ce34e[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 02:44:39 2021 -0400[m
[m
    added more stuff[m
[m
[33mcommit 09716377740775b1c716fdd58955c1c86675fbbf[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 01:23:36 2021 -0400[m
[m
    tweaks[m
[K[?1l>akozina2@remote00:~/projects/cs220$ git log -3 labs/lab0.umt
fatal: ambiguous argument 'labs/lab0.umt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ cd ~/projects/cs220
akozina2@remote00:~/projects/cs220$ git log -3 labs/lab0.umt
fatal: ambiguous argument 'labs/lab0.umt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ git log -5
[?1h=[33mcommit 0305b86713046c529f54718435c6af9c8c6cd675[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 22:07:50 2021 -0400[m
[m
    lab0 tweaks[m
[m
[33mcommit 9a6567527398cc3238ab38629a58873a55e7f3e7[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 16:19:48 2021 -0400[m
[m
    fix problems seen in class[m
[m
[33mcommit 34009f8097c9b3d4a61ec3376464a298c8db62a6[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 12:56:10 2021 -0400[m
[m
    grade assignment[m
[m
[33mcommit f471d336c1f9a89740b916f65e950fb51e8ce34e[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 02:44:39 2021 -0400[m
[m
    added more stuff[m
[m
[33mcommit 09716377740775b1c716fdd58955c1c86675fbbf[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 01:23:36 2021 -0400[m
[m
    tweaks[m
[K[?1l>akozina2@remote00:~/projects/cs220$ git log labs
[?1h=[33mcommit 0305b86713046c529f54718435c6af9c8c6cd675[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 22:07:50 2021 -0400[m
[m
    lab0 tweaks[m
[m
[33mcommit 9a6567527398cc3238ab38629a58873a55e7f3e7[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 16:19:48 2021 -0400[m
[m
    fix problems seen in class[m
[m
[33mcommit 09716377740775b1c716fdd58955c1c86675fbbf[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 01:23:36 2021 -0400[m
[m
    tweaks[m
[m
[33mcommit f22a4765fcc13cdc57545980747240b4be588418[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Tue Aug 24 23:13:55 2021 -0400[m
[m
    added course material[m
[m
[33mcommit 00256c228c7583040f078dc7247e0deba39da754[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Tue Aug 24 18:54:31 2021 -0400[m
[m
    added material[m
[K[?1l>akozina2@remote00:~/projects/cs220$ git log -3 labs/lab0.umt
fatal: ambiguous argument 'labs/lab0.umt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ touch .profile
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ git log -3 labs/lab0.umt
fatal: ambiguous argument 'labs/lab0.umt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ git log -3 labs/lab0/lab0.umt
[?1h=[33mcommit 0305b86713046c529f54718435c6af9c8c6cd675[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 22:07:50 2021 -0400[m
[m
    lab0 tweaks[m
[m
[33mcommit 09716377740775b1c716fdd58955c1c86675fbbf[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Wed Aug 25 01:23:36 2021 -0400[m
[m
    tweaks[m
[m
[33mcommit f22a4765fcc13cdc57545980747240b4be588418[m[m
Author: zerksis umrigar <umrigar@binghamton.edu>[m
Date:   Tue Aug 24 23:13:55 2021 -0400[m
[m
    added course material[m
[K[?1l>akozina2@remote00:~/projects/cs220$ git diff -r XXXXX labs/lab0.umt
fatal: ambiguous argument 'XXXXX': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ git diff -r XXXXX labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umtf labs/lab0.umt2 labs/lab0.umt2 labs/lab0.umta labs/lab0.umt4 labs/lab0.umt
fatal: ambiguous argument 'labs/lab0.umt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ git diff -r XXXXX labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt- labs/lab0.umt0 labs/lab0.umt4 labs/lab0.umt0 labs/lab0.umt0 labs/lab0.umt
fatal: ambiguous argument 'labs/lab0.umt': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ git diff -r XXXXX labs/lab0.umt[K[K[K[K/lab0.umt[C[C[1P labs/lab0/lab0.umt[1P labs/lab0/lab0.umt[1P labs/lab0/lab0.umt[1P labs/lab0/lab0.umt[1P labs/lab0/lab0.umt1 labs/lab0/lab0.umt. labs/lab0/lab0.umt3 labs/lab0/lab0.umt. labs/lab0/lab0.umt2 labs/lab0/lab0.umt
fatal: ambiguous argument '1.3.2': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ git diff -r XXXXX labs/lab0.umt2w[K[C[C[C[C[C[C[C[C[C[C[C[K[C[C[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt[1P labs/lab0.umt8 labs/lab0.umt8 labs/lab0.umt4 labs/lab0.umt1 labs/lab0.umt8 labs/lab0.umt
fatal: ambiguous argument '88418': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
akozina2@remote00:~/projects/cs220$ touch .profile
akozina2@remote00:~/projects/cs220$ emcas[K[K[Kacs
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
Welcome to GNU Emacs, one component of the GNU/Linux operating system.[K
[K
Get help           C-h  (Hold down CTRL and press h)[K
[4m[36mEmacs manual[0m[39;49m       C-h r        [4m[36mBrowse manuals[0m[39;49m     C-h i[K
[4m[36mEmacs tutorial[0m[39;49m     C-h t        Undo changes       C-x u[K
[4m[36mBuy manuals[0m[39;49m        C-h RET      Exit Emacs         C-x C-c[K
[4m[36mActivate menubar[0m[39;49m   M-`[K
(‘C-’ means use the CTRL key.  ‘M-’ means use the Meta (or Alt) key.[K
If you have no Meta key, you may instead type ESC followed by the character.)[K
Useful tasks:[K
[4m[36mVisit New File[0m[39;49m                  [4m[36mOpen Home Directory[0m[39;49m[K
[4m[36mCustomize Startup[0m[39;49m               [4m[36mOpen *scratch* buffer[0m[39;49m[K
[K
GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.5, cairo version 1.16.0)[K
 of 2021-02-09, modified by Debian[K
Copyright (C) 2020 Free Software Foundation, Inc.[K
[K
GNU Emacs comes with ABSOLUTELY NO WARRANTY; type C-h C-w for [4m[36mfull details[0m[39;49m.[K
Emacs is Free Software--Free as in Freedom--so you can redistribute copies[K
of Emacs and modify it; type C-h C-c to see [4m[36mthe conditions[0m[39;49m.[K
Type C-h C-o for information on [4m[36mgetting the latest version[0m[39;49m.[K
[K
If an Emacs session crashed recently, type M-x recover-session RET[K
to recover the files you were editing.[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:%%--F1  [0m[39;49m[27m[7m[1m*GNU Emacs* [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lBeginning of buffer[K[H
[?12l[?25h[?12;25h[45d[K[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m3[0m[39;49m[27m[4;1H[?12l[?25h[?12;25h[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m1[0m[39;49m[27m[H
[?12l[?25h[?12;25h[45d[?25lBeginning of buffer[H
[?12l[?25h[?12;25h[45d[K[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m1[0m[39;49m[27m[H
[?12l[?25h[?12;25h[C[45;1H[?25lC-x[2;2H[?12l[?25h[?12;25h[45;4H[?25l-[2;2H[?12l[?25h[?12;25h[45;4H[?25l C-x[2;2H[?12l[?25h[?12;25h[45;1H[?25lNo mark set in this buffer[2;2H[?12l[?25h[?12;25h[45;1H[K[2;2H[45;1H[?25lNo mark set in this buffer[2;2H[?12l[?25h[?12;25h[45;1H[K[2;2H[45;1H[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ ~/.profile.~umrigar/cs220/bin/student.profile
bash: /home/akozina2/.profile.~umrigar/cs220/bin/student.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ git diff -r XXXXX labs/lab0.umt^C
akozina2@remote00:~/projects/cs220$ ^C
akozina2@remote00:~/projects/cs220$ git diff -r f22a4765fcc13cdc57545980747240b4be588418
[?1h=[1mdiff --git a/assets/umt/slides-template.html b/assets/umt/slides-template.html[m[m
[1mindex a0298c5..8de0dab 100644[m[m
[1m--- a/assets/umt/slides-template.html[m[m
[1m+++ b/assets/umt/slides-template.html[m[m
[36m@@ -12,7 +12,7 @@[m [m$HEAD[m[m
        <li><a href="$HOME/index.html" class="material-icons">house</a></li>[m[m
        <li><a href="$HOME/docs/index.html">Docs</a></li>[m[m
        <li><a href="$HOME/exercises/index.html">Exercises</a></li>[m[m
[31m-       <li><a href="$HOME/hws/index.html">Homeworks</a></li>[m[m
[32m+[m       [32m<li><a href="$HOME/hw/index.html">Homework</a></li>[m[m
        <li><a href="$HOME/misc/index.html">Misc</a></li>[m[m
        <li><a href="$HOME/projects/index.html">Projects</a></li>[m[m
        <li><a href="$HOME/slides/index.html">Slides</a></li>[m[m
[1mdiff --git a/exercises/config.json b/exercises/config.json[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..0beb347[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/config.json[m[m
[36m@@ -0,0 +1,4 @@[m[m
[32m+[m[32m{[m[m
[32m+[m[32m  "course": "cs220",[m[m
[32m+[m[32m  "questions": "./questions"[m[m
[32m+[m[32m}[m[m
[1mdiff --git a/exercises/exercises.html b/exercises/exercises.html[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..33081cd[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/exercises.html[m[m
[36m@@ -0,0 +1,28 @@[m[m
[32m+[m[32m<!DOCTYPE html>[m[m
[32m+[m[32m<html lang="en-US">[m[m
[32m+[m[32m  <head>[m[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">[m[m
[32m+[m[32m    <link href="../assets/styles/article.css" rel="stylesheet" type="text/css" />[m[41m [m[m
[32m+[m[32m    <title>CS 220: exercises.umt</title>[m[m
[32m+[m[41m    [m[m
[32m+[m[32m  </head>[m[m
[32m+[m[32m  <body>[m[m
[32m+[m[32m    <nav>[m[m
[32m+[m[32m      <ul>[m[m
[32m+[m       [32m<li><a href="../index.html" class="material-icons">house</a></li>[m[m
[32m+[m       [32m<li><a href="../docs/index.html">Docs</a></li>[m[m
[32m+[m       [32m<li><a href="../exercises/index.html">Exercises</a></li>[m[m
[32m+[m       [32m<li><a href="../hw/index.html">Homework</a></li>[m[m
:[K[K[32m+[m       [32m<li><a href="../labs/index.html">Labs</a></li>[m[m
:[K[K[32m+[m       [32m<li><a href="../misc/index.html">Misc</a></li>[m[m
:[K[K[HM[1mindex a0298c5..8de0dab 100644[m[m
[HM[1mdiff --git a/assets/umt/slides-template.html b/assets/umt/slides-template.html[m[m
[45;1H[K:[K[K:[K[K[7mNo next tag  (press RETURN)[27m[45;1H[K[K:[K[K[32m+[m       [32m<li><a href="../labs/index.html">Labs</a></li>[m[m
[32m+[m       [32m<li><a href="../misc/index.html">Misc</a></li>[m[m
[32m+[m       [32m<li><a href="../projects/index.html">Projects</a></li>[m[m
[32m+[m       [32m<li><a href="../slides/index.html">Slides</a></li>[m[m
[32m+[m       [32m<li><a id="loginAction"></a></li>[m[m
[32m+[m[32m      </ul>[m[m
[32m+[m[32m    </nav>[m[m
[32m+[m[32m    <div class="content">[m[m
[32m+[m[41m      [m[m
[32m+[m[32m    </div> <!-- #content -->[m[m
[32m+[m[32m    <script src="../assets/scripts/loginAction.js"></script>[m[m
[32m+[m[32m  </body>[m[m
[32m+[m[32m</html>[m[m
[1mdiff --git a/exercises/exercises.umt b/exercises/exercises.umt[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..e69de29[m[m
[1mdiff --git a/exercises/index.html b/exercises/index.html[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..89aa75b[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/index.html[m[m
[36m@@ -0,0 +1,30 @@[m[m
[32m+[m[32m<!DOCTYPE html>[m[m
:[K[K:[K[K[32m+[m[32m<html lang="en-US">[m[m
[32m+[m[32m  <head>[m[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">[m[m
[32m+[m[32m    <link href="../assets/styles/article.css" rel="stylesheet" type="text/css" />[m[41m [m[m
[32m+[m[32m    <title>CS 220: Exercises</title>[m[m
[32m+[m[41m    [m[m
[32m+[m[32m  </head>[m[m
[32m+[m[32m  <body>[m[m
[32m+[m[32m    <nav>[m[m
[32m+[m[32m      <ul>[m[m
[32m+[m       [32m<li><a href="../index.html" class="material-icons">house</a></li>[m[m
[32m+[m       [32m<li><a href="../docs/index.html">Docs</a></li>[m[m
[32m+[m       [32m<li><a href="../exercises/index.html">Exercises</a></li>[m[m
[32m+[m       [32m<li><a href="../hw/index.html">Homework</a></li>[m[m
[32m+[m       [32m<li><a href="../labs/index.html">Labs</a></li>[m[m
[32m+[m       [32m<li><a href="../misc/index.html">Misc</a></li>[m[m
[32m+[m       [32m<li><a href="../projects/index.html">Projects</a></li>[m[m
[32m+[m       [32m<li><a href="../slides/index.html">Slides</a></li>[m[m
[32m+[m       [32m<li><a id="loginAction"></a></li>[m[m
[32m+[m[32m      </ul>[m[m
[32m+[m[32m    </nav>[m[m
[32m+[m[32m    <div class="content">[m[m
[32m+[m[32m      <section data-coord="index.umt:1:0"><h1 data-coord="index.umt:1:0">Exercises</h1><p da[m [32m[m[32mta-coord="index.umt:3:0">This server does not support dynamic content.  Please use[m[m
[32m+[m[32mthe main <a href="http://zdu.binghamton.edu/cs220/exercises" data-coord="index.umt:4:15">sit[m [32m[m[32me.</a>[m[m
[32m+[m[32m</p></section>[m[m
[32m+[m[32m    </div> <!-- #content -->[m[m
[32m+[m[32m    <script src="../assets/scripts/loginAction.js"></script>[m[m
[32m+[m[32m  </body>[m[m
[32m+[m[32m</html>[m[m
[1mdiff --git a/exercises/index.umt b/exercises/index.umt[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..8487b1f[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/index.umt[m[m
[36m@@ -0,0 +1,4 @@[m[m
[32m+[m[32m                    E x e r c i s e s[m[m
[32m+[m[m
[32m+[m[32mThis server does not support dynamic content.  Please use[m[m
[32m+[m[32mthe main .<http://zdu.binghamton.edu/cs220/exercises> site.[m[m
[1mdiff --git a/exercises/questions/.gitignore b/exercises/questions/.gitignore[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..3c3629e[m[m
:[K[K[1m--- /dev/null[m[m
[1m+++ b/exercises/questions/.gitignore[m[m
[36m@@ -0,0 +1 @@[m[m
[32m+[m[32mnode_modules[m[m
[1mdiff --git a/exercises/questions/index.js b/exercises/questions/index.js[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..1e41ce5[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/questions/index.js[m[m
[36m@@ -0,0 +1,3 @@[m[m
[32m+[m[32m'use strict';[m[m
[32m+[m[m
[32m+[m[32mmodule.exports = require('./src/meta');[m[m
[1mdiff --git a/exercises/questions/package-lock.json b/exercises/questions/package-lock.json[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..3bec725[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/questions/package-lock.json[m[m
[36m@@ -0,0 +1,13 @@[m[m
[32m+[m[32m{[m[m
[32m+[m[32m  "name": "questions",[m[m
[32m+[m[32m  "version": "1.0.0",[m[m
[32m+[m[32m  "lockfileVersion": 1,[m[m
[32m+[m[32m  "requires": true,[m[m
[32m+[m[32m  "dependencies": {[m[m
[32m+[m[32m    "gen-q-and-a": {[m[m
[32m+[m[32m      "version": "git+ssh://git@github.com/umrigar/gen-q-and-a.git#dc7d1aca7691e7b2ed69327fd[m [32m[m[32m18aa3511ac253f3",[m[m
[32m+[m[32m      "from": "git+ssh://git@github.com/umrigar/gen-q-and-a.git",[m[m
[32m+[m[32m      "dev": true[m[m
[32m+[m[32m    }[m[m
[32m+[m[32m  }[m[m
[32m+[m[32m}[m[m
[1mdiff --git a/exercises/questions/package.json b/exercises/questions/package.json[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..90f9db4[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/questions/package.json[m[m
[36m@@ -0,0 +1,18 @@[m[m
[32m+[m[32m{[m[m
[32m+[m[32m  "name": "questions",[m[m
[32m+[m[32m  "version": "1.0.0",[m[m
[32m+[m[32m  "description": "",[m[m
[32m+[m[32m  "main": "index.js",[m[m
:[K[K[32m+[m[32m  "scripts": {[m[m
[32m+[m[32m    "test": "echo \"Error: no test specified\" && exit 1"[m[m
[32m+[m[32m  },[m[m
[32m+[m[32m  "keywords": [],[m[m
[32m+[m[32m  "author": "",[m[m
[32m+[m[32m  "license": "ISC",[m[m
[32m+[m[32m  "devDependencies": {[m[m
[32m+[m[32m    "gen-q-and-a": "git@github.com:umrigar/gen-q-and-a.git"[m[m
[32m+[m[32m  },[m[m
[32m+[m[32m  "peerDependencies": {[m[m
[32m+[m[32m    "gen-q-and-a": "git@github.com:umrigar/gen-q-and-a.git"[m[m
[32m+[m[32m  }[m[m
[32m+[m[32m}[m[m
[1mdiff --git a/exercises/questions/src/arch/cache-size.js b/exercises/questions/src/arch/cache-[m [1msize.js[m[m
[1mnew file mode 100644[m[m
[1mindex 0000000..af205ef[m[m
[1m--- /dev/null[m[m
[1m+++ b/exercises/questions/src/arch/cache-size.js[m[m
[36m@@ -0,0 +1,87 @@[m[m
[32m+[m[32m'use strict';[m[m
[32m+[m[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-25 12:56:36 umrigar>';[m[m
[32m+[m[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m[m
[32m+[m[32m  require('gen-q-and-a');[m[m
[32m+[m[m
[32m+[m[32mclass CacheSize extends ChoiceQuestion {[m[m
[32m+[m[m
[32m+[m[32m  constructor(params) {[m[m
[32m+[m[32m    super(params);[m[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m[m
[32m+[m[32m    this.addQuestion(QUESTION);[m[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m[m
[32m+[m[32m      const c = i;[m[m
[32m+[m[32m      this.choice(({choices}) => `.$2^{${choices[c]}}$ bytes.`);[m[m
[32m+[m[32m    }[m[m
[32m+[m[32m    this.freeze();[m[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m[m
[32m+[m[32m    this.makeContent();[m[m
[32m+[m[32m  }[m[m
[32m+[m[41m    [m[m
[32m+[m[32m}[m[m
[32m+[m[m
:[K[K-[K[7mDisplay control characters directly  (press RETURN)[27m[45;1H[K[H[2J[H[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "test": "echo \"Error: no test specified\" && exit 1"[m
[32m+[m[32m  },[m
[32m+[m[32m  "keywords": [],[m
[32m+[m[32m  "author": "",[m
[32m+[m[32m  "license": "ISC",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "gen-q-and-a": "git@github.com:umrigar/gen-q-and-a.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "peerDependencies": {[m
[32m+[m[32m    "gen-q-and-a": "git@github.com:umrigar/gen-q-and-a.git"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/arch/cache-size.js b/exercises/questions/src/arch/cache-size.js[m
[1mnew file mode 100644[m
[1mindex 0000000..af205ef[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/cache-size.js[m
[36m@@ -0,0 +1,87 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-25 12:56:36 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass CacheSize extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const c = i;[m
[32m+[m[32m      this.choice(({choices}) => `.$2^{${choices[c]}}$ bytes.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = CacheSize;[m
:[K[K[32m+[m[32mObject.assign(CacheSize, {[m
[32m+[m[32m  id: 'cacheSize',[m
[32m+[m[32m  title: 'Cache Size',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assume that a \`#{m}\`-bit byte-addressed computer has a #{type}[m
[32m+[m[32m  cache and that #{setBitsPhrase} \`#{b}\`-bits of a memory address[m
[32m+[m[32m  are used to specify the offset within a cache line.  What will be[m
[32m+[m[32m  the size of the cache?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { m: () => Rand.choice([24, 32, 64]),[m
[32m+[m[32m    e: () => Rand.choice([0, 0, 0, 1, 2, 3, 4]),[m
[32m+[m[32m    b: () => Rand.choice([6, 7, 8, 9]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { s: ({e}) => Rand.choice([4,5,6,7,8,9].concat(e === 0 ? [] : [0,0,0,0])),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    E: ({e}) => 2**e,[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    type: ({e, s, E}) =>[m
[32m+[m[32m    e === 0 ? 'direct-mapped'[m
[32m+[m[32m    : s === 0 ? `\`${E}\`-way fully-associative`[m
[32m+[m[32m    : `\`${E}\`-way set-associative`,[m
[32m+[m[32m    setBitsPhrase: ({s}) =>[m
[32m+[m[32m    s === 0[m
[32m+[m[32m    ? ''[m
[32m+[m[32m    : `\`#{s}\`-bits of a memory address are used to select a[m[41m [m
[32m+[m[32m       cache set and`,[m
[32m+[m[32m    choices: ({m, e, b, s}) => [[m
[32m+[m[32m      e + b + s,[m
[32m+[m[32m      e + b + s + 1,[m
[32m+[m[32m      e + b + (s === 0 ? 2 : 0),[m
[32m+[m[32m      e + s,[m
[32m+[m[32m      m,[m
[32m+[m[32m    ],[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
:[K[K:[K22[K22[K:[K[K:[K44[K77[K66[K55[K...skipping...
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ShiftArith;[m
[32m+[m[32mObject.assign(ShiftArith, {[m
[32m+[m[32m  id: 'shiftArith',[m
[32m+[m[32m  title: 'Arithmetic using Shifts',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst MAX_SHIFT = 2;[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assuming that \`i\` is an .~unsigned~ having value greater than[m
[32m+[m[32m  ${1 << (MAX_SHIFT + 1)}, what will be the value of the expression[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m[32m  (i #{sh1} #{n1}) #{op1} (i #{sh2} #{n2}) #{op2} (i #{sh3} #{n3})[m
[32m+[m[32m  ~~~[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mfunction explain(params) {[m
[32m+[m[32m  const {[m
[32m+[m[32m    n1, sh1, sh1Sign, n2, sh2, sh2Sign, n3, sh3, sh3Sign, op1, op2, choices[m
[32m+[m[32m  } = params;[m
[32m+[m[32m  const [ f1, f2, f3 ] = [ 2**(sh1Sign*n1), 2**(sh2Sign*n2), 2**(sh3Sign*n3) ];[m
[32m+[m[32m  return `[m
[32m+[m[32m    .~(i ${sh1} ${n1})~ is .~(${f1} * i)~,[m
[32m+[m[32m    .~(i ${sh2} ${n2})~ is .~(${f2} * i)~,[m
[32m+[m[32m    .~(i ${sh3} ${n3})~ is .~(${f3} * i)~.[m[41m  [m
[32m+[m[32m    Hence .~(i ${sh1} ${n1}) ${op1} (i ${sh2} ${n2}) ${op2} (i ${sh3} ${n3})~[m
[32m+[m[32m    is .~(${f1} * i) ${op1} (${f2} * i) ${op2} (${f3} * i)~ which is[m
[32m+[m[32m    .~${choices[0]} * i~.[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction isDistinctShifts(params) {[m
[32m+[m[32m  const { n1, sh1Sign, n2, sh2Sign, n3, sh3Sign } = params;[m
[32m+[m[32m  return (new Set([ n1*sh1Sign, n2*sh2Sign, n3*sh3Sign ])).size === 3;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { op1Sign: () => Rand.choice([ 1, -1 ]),[m
:[K[K:[K[K:[K[K:[K11[K33[K:[K[K[32m+[m[32m    op2Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    sh1Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    sh2Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    sh3Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    n1: () => Rand.int(0, MAX_SHIFT + 1),[m
[32m+[m[32m    n2: () => Rand.int(0, MAX_SHIFT + 1),[m
[32m+[m[32m    n3: () => Rand.int(0, MAX_SHIFT + 1),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    op1: ({op1Sign}) => (op1Sign > 0) ? '+' : '-',[m
[32m+[m[32m    op2: ({op2Sign}) => (op2Sign > 0) ? '+' : '-',[m
[32m+[m[32m    sh1: ({sh1Sign}) => (sh1Sign > 0) ? '<<' : '>>',[m
[32m+[m[32m    sh2: ({sh2Sign}) => (sh2Sign > 0) ? '<<' : '>>',[m
[32m+[m[32m    sh3: ({sh3Sign}) => (sh3Sign > 0) ? '<<' : '>>',[m
[32m+[m[32m    choices: ({op1Sign, op2Sign, sh1Sign, sh2Sign, sh3Sign, n1, n2, n3}) => [[m
[32m+[m[32m      2**(sh1Sign*n1) + op1Sign*2**(sh2Sign*n2) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*(n1 + 1)) + op1Sign*2**(sh2Sign*n2) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*(n1)) - op1Sign*2**(sh2Sign*n2) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*(n1)) + op1Sign*2**(sh2Sign*n2) - op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*n1) + op1Sign*2**(sh2Sign*(n2 + 1)) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m    ],[m
[32m+[m[32m  },[m
:[K[K:[K[K:[K55[K77[K55[K44[K55[K99[K88[K00[K77[K44[K77[K22[K44[K00[K...skipping...
[1mdiff --git a/assets/umt/slides-template.html b/assets/umt/slides-template.html[m
[1mindex a0298c5..8de0dab 100644[m
[1m--- a/assets/umt/slides-template.html[m
[1m+++ b/assets/umt/slides-template.html[m
[36m@@ -12,7 +12,7 @@[m [m$HEAD[m
        <li><a href="$HOME/index.html" class="material-icons">house</a></li>[m
        <li><a href="$HOME/docs/index.html">Docs</a></li>[m
        <li><a href="$HOME/exercises/index.html">Exercises</a></li>[m
[31m-   <li><a href="$HOME/hws/index.html">Homeworks</a></li>[m
[32m+[m [32m<li><a href="$HOME/hw/index.html">Homework</a></li>[m
        <li><a href="$HOME/misc/index.html">Misc</a></li>[m
        <li><a href="$HOME/projects/index.html">Projects</a></li>[m
        <li><a href="$HOME/slides/index.html">Slides</a></li>[m
[1mdiff --git a/exercises/config.json b/exercises/config.json[m
[1mnew file mode 100644[m
[1mindex 0000000..0beb347[m
[1m--- /dev/null[m
[1m+++ b/exercises/config.json[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "course": "cs220",[m
[32m+[m[32m  "questions": "./questions"[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/exercises.html b/exercises/exercises.html[m
[1mnew file mode 100644[m
[1mindex 0000000..33081cd[m
[1m--- /dev/null[m
[1m+++ b/exercises/exercises.html[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en-US">[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">[m
[32m+[m[32m    <link href="../assets/styles/article.css" rel="stylesheet" type="text/css" />[m[41m [m
[32m+[m[32m    <title>CS 220: exercises.umt</title>[m
[32m+[m[41m    [m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m
[32m+[m[32m    <nav>[m
[32m+[m[32m      <ul>[m
[32m+[m [32m<li><a href="../index.html" class="material-icons">house</a></li>[m
[32m+[m [32m<li><a href="../docs/index.html">Docs</a></li>[m
[32m+[m [32m<li><a href="../exercises/index.html">Exercises</a></li>[m
[32m+[m [32m<li><a href="../hw/index.html">Homework</a></li>[m
:[K[K:[K44[K[K:[K[K[32m+[m [32m<li><a href="../labs/index.html">Labs</a></li>[m
:[K[K:[K55[K88[K88[K44[K11[K88[K[32m+[m [32m<li><a href="../misc/index.html">Misc</a></li>[m
[32m+[m [32m<li><a href="../projects/index.html">Projects</a></li>[m
[32m+[m [32m<li><a href="../slides/index.html">Slides</a></li>[m
[32m+[m [32m<li><a id="loginAction"></a></li>[m
[32m+[m[32m      </ul>[m
[32m+[m[32m    </nav>[m
[32m+[m[32m    <div class="content">[m
[32m+[m[41m      [m
[32m+[m[32m    </div> <!-- #content -->[m
[32m+[m[32m    <script src="../assets/scripts/loginAction.js"></script>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/exercises/exercises.umt b/exercises/exercises.umt[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/exercises/index.html b/exercises/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..89aa75b[m
[1m--- /dev/null[m
[1m+++ b/exercises/index.html[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en-US">[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">[m
[32m+[m[32m    <link href="../assets/styles/article.css" rel="stylesheet" type="text/css" />[m[41m [m
[32m+[m[32m    <title>CS 220: Exercises</title>[m
[32m+[m[41m    [m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m
[32m+[m[32m    <nav>[m
[32m+[m[32m      <ul>[m
[32m+[m [32m<li><a href="../index.html" class="material-icons">house</a></li>[m
[32m+[m [32m<li><a href="../docs/index.html">Docs</a></li>[m
[32m+[m [32m<li><a href="../exercises/index.html">Exercises</a></li>[m
[32m+[m [32m<li><a href="../hw/index.html">Homework</a></li>[m
[32m+[m [32m<li><a href="../labs/index.html">Labs</a></li>[m
[32m+[m [32m<li><a href="../misc/index.html">Misc</a></li>[m
[32m+[m [32m<li><a href="../projects/index.html">Projects</a></li>[m
[32m+[m [32m<li><a href="../slides/index.html">Slides</a></li>[m
[32m+[m [32m<li><a id="loginAction"></a></li>[m
[32m+[m[32m      </ul>[m
[32m+[m[32m    </nav>[m
[32m+[m[32m    <div class="content">[m
[32m+[m[32m      <section data-coord="index.umt:1:0"><h1 data-coord="index.umt:1:0">Exercises</h1><p data-coord="index.umt:3:0">This server does not support dynamic content.  Please use[m
[32m+[m[32mthe main <a href="http://zdu.binghamton.edu/cs220/exercises" data-coord="index.umt:4:15">site.</a>[m
[32m+[m[32m</p></section>[m
[32m+[m[32m    </div> <!-- #content -->[m
[32m+[m[32m    <script src="../assets/scripts/loginAction.js"></script>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/exercises/index.umt b/exercises/index.umt[m
[1mnew file mode 100644[m
[1mindex 0000000..8487b1f[m
[1m--- /dev/null[m
[1m+++ b/exercises/index.umt[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m                    E x e r c i s e s[m
[32m+[m
[32m+[m[32mThis server does not support dynamic content.  Please use[m
[32m+[m[32mthe main .<http://zdu.binghamton.edu/cs220/exercises> site.[m
[1mdiff --git a/exercises/questions/.gitignore b/exercises/questions/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..3c3629e[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mnode_modules[m
[1mdiff --git a/exercises/questions/index.js b/exercises/questions/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1e41ce5[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/index.js[m
[36m@@ -0,0 +1,3 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mmodule.exports = require('./src/meta');[m
[1mdiff --git a/exercises/questions/package-lock.json b/exercises/questions/package-lock.json[m
[1mnew file mode 100644[m
[1mindex 0000000..3bec725[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/package-lock.json[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "questions",[m
[32m+[m[32m  "version": "1.0.0",[m
[32m+[m[32m  "lockfileVersion": 1,[m
[32m+[m[32m  "requires": true,[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "gen-q-and-a": {[m
[32m+[m[32m      "version": "git+ssh://git@github.com/umrigar/gen-q-and-a.git#dc7d1aca7691e7b2ed69327fd18aa3511ac253f3",[m
[32m+[m[32m      "from": "git+ssh://git@github.com/umrigar/gen-q-and-a.git",[m
[32m+[m[32m      "dev": true[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/package.json b/exercises/questions/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..90f9db4[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/package.json[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "questions",[m
[32m+[m[32m  "version": "1.0.0",[m
[32m+[m[32m  "description": "",[m
[32m+[m[32m  "main": "index.js",[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "test": "echo \"Error: no test specified\" && exit 1"[m
[32m+[m[32m  },[m
[32m+[m[32m  "keywords": [],[m
[32m+[m[32m  "author": "",[m
[32m+[m[32m  "license": "ISC",[m
[32m+[m[32m  "devDependencies": {[m
[32m+[m[32m    "gen-q-and-a": "git@github.com:umrigar/gen-q-and-a.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "peerDependencies": {[m
[32m+[m[32m    "gen-q-and-a": "git@github.com:umrigar/gen-q-and-a.git"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/arch/cache-size.js b/exercises/questions/src/arch/cache-size.js[m
[1mnew file mode 100644[m
[1mindex 0000000..af205ef[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/cache-size.js[m
[36m@@ -0,0 +1,87 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-25 12:56:36 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass CacheSize extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const c = i;[m
[32m+[m[32m      this.choice(({choices}) => `.$2^{${choices[c]}}$ bytes.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = CacheSize;[m
[32m+[m[32mObject.assign(CacheSize, {[m
[32m+[m[32m  id: 'cacheSize',[m
[32m+[m[32m  title: 'Cache Size',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assume that a \`#{m}\`-bit byte-addressed computer has a #{type}[m
[32m+[m[32m  cache and that #{setBitsPhrase} \`#{b}\`-bits of a memory address[m
[32m+[m[32m  are used to specify the offset within a cache line.  What will be[m
[32m+[m[32m  the size of the cache?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { m: () => Rand.choice([24, 32, 64]),[m
[32m+[m[32m    e: () => Rand.choice([0, 0, 0, 1, 2, 3, 4]),[m
[32m+[m[32m    b: () => Rand.choice([6, 7, 8, 9]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { s: ({e}) => Rand.choice([4,5,6,7,8,9].concat(e === 0 ? [] : [0,0,0,0])),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    E: ({e}) => 2**e,[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    type: ({e, s, E}) =>[m
[32m+[m[32m    e === 0 ? 'direct-mapped'[m
[32m+[m[32m    : s === 0 ? `\`${E}\`-way fully-associative`[m
[32m+[m[32m    : `\`${E}\`-way set-associative`,[m
[32m+[m[32m    setBitsPhrase: ({s}) =>[m
[32m+[m[32m    s === 0[m
[32m+[m[32m    ? ''[m
[32m+[m[32m    : `\`#{s}\`-bits of a memory address are used to select a[m[41m [m
[32m+[m[32m       cache set and`,[m
[32m+[m[32m    choices: ({m, e, b, s}) => [[m
[32m+[m[32m      e + b + s,[m
[32m+[m[32m      e + b + s + 1,[m
[32m+[m[32m      e + b + (s === 0 ? 2 : 0),[m
[32m+[m[32m      e + s,[m
[32m+[m[32m      m,[m
[32m+[m[32m    ],[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeExplain({m, e, s, b, E}) {[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m    We have .$E=${E}$ cache-lines per set, .$S=2^{${s}}$ sets in[m
[32m+[m[32m    the cache[m[41m [m
[32m+[m[32m  `;[m
[32m+[m[32m  if (s === 0) explain = explain.trim() + ' (since it is fully-associative) ';[m
[32m+[m[32m  explain += `[m
[32m+[m[32m    and .$B=2^{${b}}$ bytes per cache line.  Hence the size of[m
[32m+[m[32m    the cache will be .$E\\times S\\times B = ${E}\\times 2^{${s}}\\times[m
[32m+[m[32m    2^{${b}}  = 2^{${e + s + b}}$ bytes which is the answer (#{_0}).[m
[32m+[m[32m  `.trim();[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new CacheSize().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/arch/cache-trace.js b/exercises/questions/src/arch/cache-trace.js[m
[1mnew file mode 100644[m
[1mindex 0000000..02e1655[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/cache-trace.js[m
[36m@@ -0,0 +1,200 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-12-03 21:33:16 umrigar>';[m
[32m+[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass CacheTrace extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const c = i;[m
[32m+[m[32m      this.choice(({choices}) => {[m
[32m+[m [32mreturn `[m
[32m+[m[32m          The choice:[m
[32m+[m
[32m+[m[32m          \`\`\`[m
[32m+[m
[32m+[m[32m          ${traceString(choices[c])}[m
[32m+[m
[32m+[m[32m          \`\`\`[m
[32m+[m[32m        `;[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = CacheTrace;[m
[32m+[m[32mObject.assign(CacheTrace, {[m
[32m+[m[32m  id: 'cacheTrace',[m
[32m+[m[32m  title: 'Cache Trace',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assume that a \`#{m}\`-bit byte-addressed computer has a #{type}[m
[32m+[m[32m  cache and that \`#{s}\`-bits of a memory address are used to select[m
[32m+[m[32m  a cache set and \`#{b}\`-bits of a memory address are used to[m
[32m+[m[32m  specify the offset within a cache line.  Which one of the following[m
[32m+[m[32m  choices represents a trace for the sequence of hex addresses:[m
[32m+[m
[32m+[m[32m  \`\`\`[m
[32m+[m[32m  #{addressesText}[m
[32m+[m[32m  \`\`\`[m
[32m+[m
[32m+[m[32m  where an individual trace entry for address .$a$ consists of .$a$,[m
[32m+[m[32m  whether or not that address \`hit\` or \`miss\`'ed the cache,[m
[32m+[m[32m  followed by the address of the block being evicted from the[m[41m [m
[32m+[m[32m  cache if the \`miss\` resulted in a block eviction.  You should[m
[32m+[m[32m  assume that the cache uses LRU replacement.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst N_ADDR = 8;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { m: () => Rand.choice([24, 32, 64]),[m
[32m+[m[32m    e: () => Rand.choice([0, 1, 1]),[m
[32m+[m[32m    b: () => Rand.choice([8]),[m
[32m+[m[32m    s: () => Rand.choice([4]),[m
[32m+[m[32m    nSets: () => Rand.choice([2, 3]),[m
[32m+[m[32m  },[m[41m [m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    E: ({e}) => 2**e,[m
[32m+[m[32m    B: ({b}) => 2**b,[m
[32m+[m[32m    sets: ({s}) => Array.from({length: 2**s}).map((_, i) => i),[m
[32m+[m[32m    addrText:[m
[32m+[m[32m      ({s, b}) => addr => addr.toString(16).padStart((s + b)/4 + 2, '0'),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    traceSets: ({nSets, sets}) =>[m
[32m+[m[32m      Array.from({ length: nSets })[m
[32m+[m[32m      .map((_, i) => Rand.choice(sets.filter((_, j) => j%nSets === i))),[m
[32m+[m[32m  },[m
[32m+[m[32m  { blkAddresses1: ({traceSets, b, s}) =>[m
[32m+[m[32m      Array.from({length: N_ADDR - 1})[m
[32m+[m[32m      .map(_ => (Rand.int(0, 256) << (s + b)) + (Rand.choice(traceSets) << b)),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    addresses: ({blkAddresses1, B}) =>[m
[32m+[m[32m      Rand.permutation([m
[32m+[m [32m[blkAddresses1[0]][m
[32m+[m [32m.concat(blkAddresses1)[m
[32m+[m[32m        .map(a => a | Rand.int(0, B))),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    type: ({e, s, E}) =>[m
[32m+[m[32m      e === 0 ? 'direct-mapped' : `\`${E}\`-way set-associative`,[m
[32m+[m[32m    trace: (params) => cacheTrace(params),[m
[32m+[m[32m    addressesText:[m
[32m+[m[32m      ({addresses, addrText}) => addresses.map(a => addrText(a)).join('\n'),[m
[32m+[m[32m  },[m
[32m+[m[32m  ({trace}) => trace.find(t => t.status === 'hit'),[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    choices: ({trace}) => {[m
[32m+[m[32m      const N = 5;[m
[32m+[m[32m      const h = trace.findIndex(e => e.status === 'hit');[m
[32m+[m[32m      assert(h > 0);[m
[32m+[m[32m      const hitIndexes = Array.from({length: N})[m
[32m+[m [32m    .map((_, i) => h + i < N_ADDR ? h + i : (h - 1) - (h + i - N_ADDR));[m
[32m+[m[32m      return hitIndexes.map(i => {[m
[32m+[m [32mconst choice = Array.from(trace);[m
[32m+[m [32mchoice[h] = Object.assign({}, trace[h], { status: 'miss' });[m
[32m+[m [32mchoice[i] = Object.assign({}, trace[i], { status: 'hit', replace: '' });[m
[32m+[m [32mreturn choice;[m
[32m+[m[32m      });[m
[32m+[m[32m    },[m
[32m+[m[32m  }[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mfunction cacheTrace({m, E, s, b, addrText, addresses}) {[m
[32m+[m[32m  const setIndex = addr => (addr & ((1 << (s + b)) - 1)) >> b;[m
[32m+[m[32m  const blkAddr = addr => addr & ~((1 << b) - 1);[m
[32m+[m[32m  const cache = {};[m
[32m+[m[32m  return addresses.map(addr => {[m
[32m+[m[32m    const si = setIndex(addr);[m
[32m+[m[32m    const ba = blkAddr(addr);[m
[32m+[m[32m    const c = cache[si] = cache[si] || Array.from({length: E}).fill(-1)[m
[32m+[m[32m    const h = c.indexOf(ba);[m
[32m+[m[32m    const d = (h < 0) ? E - 1: h;[m
[32m+[m[32m    const replace = (h < 0 && c[d] >= 0) ? ` ${addrText(c[d])}` : '';[m
[32m+[m[32m    cache[si] = [ba].concat(c.slice(0, d)).concat(c.slice(d + 1));[m
[32m+[m[32m    const status = (h < 0) ? 'miss' : 'hit';[m
[32m+[m[32m    const trace = { addr: addrText(addr),[m
[32m+[m         [32m    status, replace,[m
[32m+[m         [32m    ba: addrText(ba),[m
[32m+[m         [32m    si: si.toString(16),[m
[32m+[m         [32m    oldSet: c,[m
[32m+[m         [32m    newSet: cache[si],[m
[32m+[m         [32m  };[m
[32m+[m[32m    return trace;[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction traceString(trace) {[m
[32m+[m[32m  return trace.map(t => `${t.addr}: ${t.status}${t.replace}`).join('\n');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makeExplain({trace, addrText, E, s, b}) {[m
[32m+[m[32m  const setDescr = (set) =>[m
[32m+[m[32m   '[ ' + set.map(a => a < 0 ? '_' : addrText(a)).join(', ') + ' ]';[m
[32m+[m[32m  assert((s + b)%4 === 0);[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m    Since .$s = ${s}$ and .$b = ${b}$, we can get the block address[m
[32m+[m[32m    corresponding to an address by setting the least significant[m
[32m+[m[32m    \`${s + b}\` bits to 0; i.e., the least-significant \`${(s + b)/4}\`[m
[32m+[m[32m    hexets to 0.[m
[32m+[m[32m  `;[m
[32m+[m[32m  if (E > 1) {[m
[32m+[m[32m    explain += `[m
[32m+[m[32m      We show the cache lines within a set ordered in reverse[m
[32m+[m[32m      chronological order.[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m  for (const t of trace) {[m
[32m+[m[32m    explain += `[m
[32m+[m[32m      The address \`${t.addr}\` corresponds to block \`${t.ba}\` and[m[41m [m
[32m+[m[32m      to set \`0x${t.si.toString(16)}\`[m
[32m+[m[32m      with contents \`${setDescr(t.oldSet)}\`.[m
[32m+[m[32m    `;[m
[32m+[m[32m    if (t.status === 'hit') {[m
[32m+[m[32m      explain = explain.trim() +  `[m
[32m+[m[32m        Since block \`${t.ba}\` is in the set, we have a *hit*.[m
[32m+[m[32m      `;[m[41m         [m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      explain = explain.trim() +  `[m
[32m+[m[32m        Since block \`${t.ba}\` is not in the set, we have a *miss*.[m
[32m+[m[32m      `;[m
[32m+[m[32m      if (t.replace) {[m
[32m+[m[32m        explain = explain.trim() +  `[m
[32m+[m[32m          Since the set is full, the block at \`${t.replace}\` is[m
[32m+[m[32m          replaced and the resulting set is \`${setDescr(t.newSet)}\`.[m
[32m+[m[32m        `;[m
[32m+[m[32m      }[m
[32m+[m[32m      else {[m
[32m+[m [32mexplain = explain.trim() +  `[m
[32m+[m[32m          The block at \`${t.ba}\` is added to the set[m[41m [m
[32m+[m[32m          and the resulting set is \`${setDescr(t.newSet)}\`.[m
[32m+[m[32m        `;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new CacheTrace().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/arch/meta.js b/exercises/questions/src/arch/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8168e7d[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/meta.js[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  id: 'arch',[m
[32m+[m[32m  title: 'Basic Principles of Computer Architecture',[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    require('./pipeline-clock'),[m
[32m+[m[32m    require('./pipeline-latency'),[m
[32m+[m[32m    require('./pipeline-stall'),[m
[32m+[m[32m    require('./cache-size'),[m
[32m+[m[32m    require('./cache-trace'),[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
[32m+[m
[1mdiff --git a/exercises/questions/src/arch/pipeline-clock.js b/exercises/questions/src/arch/pipeline-clock.js[m
[1mnew file mode 100644[m
[1mindex 0000000..21656d6[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/pipeline-clock.js[m
[36m@@ -0,0 +1,77 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-25 03:23:58 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass PipelineClock extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const c = i;[m
[32m+[m[32m      this.choice(({choices}) => `\`${1000/choices[c]}\` GHz.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PipelineClock;[m
[32m+[m[32mObject.assign(PipelineClock, {[m
[32m+[m[32m  id: 'pipelineClock',[m
[32m+[m[32m  title: 'Max Pipeline Clock Frequency',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Given a \`#{n}\`-stage pipeline with stage combinational logic[m
[32m+[m[32m  delays of #{delays} ps respectively and pipeline register delays of[m
[32m+[m[32m  \`#{reg}\` ps, what is the highest frequency at which the pipeline can be[m
[32m+[m[32m  clocked?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PERIODS = [2000, 1000, 500, 250, 200];[m[41m [m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { period: () => Rand.choice(PERIODS),[m[41m [m
[32m+[m[32m    reg: () => Rand.choice([10, 15, 20, 30, 50]),[m
[32m+[m[32m    n: () => Rand.choice([3, 4, 5]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    slowest: ({n, reg, period}) => period - reg,[m
[32m+[m[32m    choices: ({period}) =>[m
[32m+[m[32m      [period][m
[32m+[m[32m      .concat(PERIODS.slice(0, PERIODS.indexOf(period)))[m
[32m+[m[32m      .concat(PERIODS.slice(PERIODS.indexOf(period) + 1)),[m
[32m+[m[32m  },[m
[32m+[m[32m  { stages: ({slowest, n}) =>[m
[32m+[m[32m      Rand.permutation(Array.from({length: n})[m
[32m+[m         [32m       .map((_, i) => slowest - 10*Rand.int(0, i + 1))),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    delays: ({stages}) =>[m
[32m+[m[32m               stages.slice(0, -1).map(d => `\`${d}\``).join(', ') +[m
[32m+[m[32m               ` and \`${stages.slice(-1)[0]}\``[m
[32m+[m[32m  },[m[41m  [m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeExplain({slowest, reg, period}) {[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m    Since the delay in the slowest stage is \`${slowest}\` ps[m
[32m+[m[32m    and the pipeline register delay is \`${reg}\` ps, the[m
[32m+[m[32m    fastest possible clock is .$1 /(10^{-12}\\times(${slowest} + ${reg}))$,[m
[32m+[m[32m    which is \`${1000/period}\` GHz.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new PipelineClock().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/arch/pipeline-latency.js b/exercises/questions/src/arch/pipeline-latency.js[m
[1mnew file mode 100644[m
[1mindex 0000000..511bb3a[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/pipeline-latency.js[m
[36m@@ -0,0 +1,76 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-25 03:24:09 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass PipelineLatency extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const c = i;[m
[32m+[m[32m      this.choice(({choices, n}) => `\`${n*choices[c]}\` ps.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PipelineLatency;[m
[32m+[m[32mObject.assign(PipelineLatency, {[m
[32m+[m[32m  id: 'pipelineLatency',[m
[32m+[m[32m  title: 'Min Pipeline Latency',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Given a \`#{n}\`-stage pipeline with stage combinational logic[m
[32m+[m[32m  delays of #{delays} ps respectively and pipeline register delays of[m
[32m+[m[32m  \`#{reg}\` ps, what is the minimum latency for the pipeline?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PERIODS = [2000, 1000, 500, 250, 200];[m[41m [m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { period: () => Rand.choice(PERIODS),[m[41m [m
[32m+[m[32m    reg: () => Rand.choice([10, 15, 20, 30, 50]),[m
[32m+[m[32m    n: () => Rand.choice([3, 4, 5]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    slowest: ({n, reg, period}) => period - reg,[m
[32m+[m[32m    choices: ({period}) =>[m
[32m+[m[32m      [period][m
[32m+[m[32m      .concat(PERIODS.slice(0, PERIODS.indexOf(period)))[m
[32m+[m[32m      .concat(PERIODS.slice(PERIODS.indexOf(period) + 1)),[m
[32m+[m[32m  },[m
[32m+[m[32m  { stages: ({slowest, n}) =>[m
[32m+[m[32m      Rand.permutation(Array.from({length: n})[m
[32m+[m         [32m       .map((_, i) => slowest - 10*Rand.int(0, i + 1))),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    delays: ({stages}) =>[m
[32m+[m[32m               stages.slice(0, -1).map(d => `\`${d}\``).join(', ') +[m
[32m+[m[32m               ` and \`${stages.slice(-1)[0]}\``[m
[32m+[m[32m  },[m[41m  [m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeExplain({slowest, reg, n}) {[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m    Since the delay in the slowest stage is \`${slowest}\` ps[m
[32m+[m[32m    and the pipeline register delay is \`${reg}\` ps, the[m
[32m+[m[32m    the latency will .$${n}\\times(${slowest} + ${reg}) =[m[41m [m
[32m+[m[32m    ${n * (slowest + reg)}$ ps.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new PipelineLatency().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/arch/pipeline-stall.js b/exercises/questions/src/arch/pipeline-stall.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2f47109[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/arch/pipeline-stall.js[m
[36m@@ -0,0 +1,141 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-25 20:30:36 umrigar>';[m
[32m+[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass PipelineStall extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const c = i;[m
[32m+[m[32m      this.choice(({choices}) => `\`${choices[c]}\`.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PipelineStall;[m
[32m+[m[32mObject.assign(PipelineStall, {[m
[32m+[m[32m  id: 'pipelineStall',[m
[32m+[m[32m  title: 'Pipeline Stall',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Given a classic 5-stage RISC pipeline with *fetch*, *decode*,[m
[32m+[m[32m  *execute*, *memory* and *writeback* stages, and registers not[m
[32m+[m[32m  available for the decode stage until after they have been written[m
[32m+[m[32m  into the register file by the writeback stage.  Assuming that data[m
[32m+[m[32m  dependencies are handled by stalling the pipeline, how many clock[m
[32m+[m[32m  cycles will the following sequence of \`#{n}\` instructions take to[m
[32m+[m[32m  completely traverse the pipeline?[m
[32m+[m
[32m+[m[32m  .code(lang=s)[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  #{code}[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst REGS = ['rax', 'rbx', 'rcx', 'rdx', 'rsi', 'rdi',[m
[32m+[m [32m      'r8', 'r9', 'r10', 'r11', 'r12',];[m
[32m+[m[32mconst OPS = [ 'addq', 'subq', 'imulq', 'andq', 'orq', 'xorq', ];[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { n: () => Rand.choice([5, 6, 7]),[m
[32m+[m[32m    nStallCycles: () => Rand.choice([1, 2, 3]),[m
[32m+[m[32m    stallRand: () => Rand.choice([0, 1]),[m
[32m+[m[32m    op: () => Rand.choice(OPS),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    consts: ({n}) => Array.from({length: n - 1}).map(_ => Rand.int(1, 100)),[m
[32m+[m[32m    regs: (params) => chooseRegs(params),[m
[32m+[m[32m    nCycles: ({n, nStallCycles}) => n + nStallCycles + 4,[m[41m [m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    stallRegIndex: ({nStallCycles, n}) => (n - 1) + (nStallCycles - 4),[m
[32m+[m[32m    choices: ({nCycles}) => [[m
[32m+[m[32m      nCycles,[m
[32m+[m[32m      nCycles + Rand.choice([-1, 1])*Rand.int(1, nCycles),[m
[32m+[m[32m      nCycles + Rand.choice([-1, 1])*Rand.int(1, nCycles),[m
[32m+[m[32m      nCycles + Rand.choice([-1, 1])*Rand.int(1, nCycles),[m
[32m+[m[32m      nCycles + Rand.choice([-1, 1])*Rand.int(1, nCycles),[m
[32m+[m[32m    ],[m[41m                                           [m
[32m+[m[32m  },[m
[32m+[m[32m  {[m[41m [m
[32m+[m[32m    otherRegIndex: ({stallRegIndex}) => Rand.int(0, stallRegIndex),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    code: (params) => genCode(params),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction chooseRegs({n}) {[m
[32m+[m[32m  const regs = Array.from(REGS);[m
[32m+[m[32m  const chosen = [];[m
[32m+[m[32m  while (chosen.length < n - 1) {[m
[32m+[m[32m    const i = Rand.int(0, regs.length);[m
[32m+[m[32m    const reg = regs.splice(i, 1)[0];[m
[32m+[m[32m    chosen.push(reg);[m
[32m+[m[32m  }[m
[32m+[m[32m  return chosen;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction genCode({regs, consts, op, stallRegIndex, otherRegIndex, stallRand}) {[m
[32m+[m[32m  const code = [];[m
[32m+[m[32m  assert(regs.length === consts.length);[m
[32m+[m[32m  for (let i = 0; i < regs.length; i++) {[m
[32m+[m[32m    code.push(`movq\t$${consts[i]}, %${regs[i]}`);[m
[32m+[m[32m  }[m
[32m+[m[32m  const stallReg = regs[stallRegIndex];[m
[32m+[m[32m  const otherReg = regs[otherRegIndex];[m
[32m+[m[32m  const operands =[m
[32m+[m [32m(stallRand === 0) ? [stallReg, otherReg] : [otherReg, stallReg];[m
[32m+[m[32m  code.push(`${op}\t${operands.map(e => `%${e}`).join(', ')}`);[m
[32m+[m[32m  return code.join('\n');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst STAGE_NAMES = {[m
[32m+[m[32m  F: 'fetch',[m
[32m+[m[32m  D: 'decode',[m
[32m+[m[32m  E: 'execute',[m
[32m+[m[32m  M: 'memory',[m
[32m+[m[32m  W: 'write-back',[m
[32m+[m[32m};[m
[32m+[m[32mconst STAGES = Object.keys(STAGE_NAMES); //assume object insertion order[m
[32m+[m
[32m+[m[32mfunction makeExplain({n, nStallCycles, nCycles, regs, stallRegIndex, op}) {[m
[32m+[m[32m  const depCycles = regs.length - stallRegIndex;[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m    If there are no stalls in a *${STAGES.join('-')}* pipeline, .$n$[m
[32m+[m[32m    instructions would take .$n + 4$ cycles where the .$4$ additional[m
[32m+[m[32m    cycles are necessary for the last instruction to exit the[m
[32m+[m[32m    pipeline.  In this case, the last \`${op}\` instruction has a data[m
[32m+[m[32m    dependency on the \`${regs[stallRegIndex]}\` register which is[m
[32m+[m[32m    computed only .$${depCycles}$ instruction(s) earlier.  So when the[m
[32m+[m[32m    \`${op}\` instruction is in the *decode* stage, the instruction[m
[32m+[m[32m    which computes the \`${regs[stallRegIndex]}\` register will be in[m
[32m+[m[32m    the *${STAGE_NAMES[STAGES[1 + depCycles]]}* stage.  Hence it is[m
[32m+[m[32m    necessary to stall the pipeline for .$${nStallCycles}$ cycle(s).[m
[32m+[m[32m    So the total number of clock cycles will be .$${n} + 4 +[m
[32m+[m[32m    ${nStallCycles} = ${nCycles}$ which is the answer (#{_0}).[m
[32m+[m[32m  `;[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new PipelineStall().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/final/.gitignore b/exercises/questions/src/final/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..c428b47[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/.gitignore[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mas-fns.s[m
[1mdiff --git a/exercises/questions/src/final/Makefile b/exercises/questions/src/final/Makefile[m
[1mnew file mode 100644[m
[1mindex 0000000..1da02ae[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/Makefile[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mCC = gcc[m
[32m+[m[32mCFLAGS = -Wall -O1[m
[32m+[m
[32m+[m[32mTARGETS = \[m
[32m+[m[32m  as-fns.s[m
[32m+[m
[32m+[m[32mall:         $(TARGETS)[m
[32m+[m
[32m+[m[32m%.s:         %.c[m
[32m+[m         [32m$(CC) -S $(CFLAGS)  $<[m
[32m+[m
[32m+[m[32mclean:[m
[32m+[m         [32mrm -f *~ $(TARGETS) *.o[m
[1mdiff --git a/exercises/questions/src/final/adt.js b/exercises/questions/src/final/adt.js[m
[1mnew file mode 100644[m
[1mindex 0000000..77961df[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/adt.js[m
[36m@@ -0,0 +1,229 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-12-08 19:05:03 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Adt extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Adt;[m
[32m+[m[32mObject.assign(Adt, {[m
[32m+[m[32m  id: 'adt',[m
[32m+[m[32m  title: 'Using adt Instruction for Computation',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mconst POINTS = 20;[m
[32m+[m
[32m+[m[32mfunction question({shapeInfo}) {[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    Write an ADT for a \`${shapeInfo.name}\`.  Your answer should include:[m
[32m+[m
[32m+[m[32m      + A function for creating an instance of a[m
[32m+[m[32m        \`${shapeInfo.name}\` given its .~double~[m[41m [m
[32m+[m[32m        ${shapeInfo.params}.[m
[32m+[m
[32m+[m[32m      + A function for deleting the instance when it is no longer needed[m
[32m+[m[32m        by the client of your ADT.[m
[32m+[m
[32m+[m[32m      + Functions for computing the area and perimeter of the[m
[32m+[m[32m        instance.[m
[32m+[m
[32m+[m[32m     Your answer must clearly specify how you distinguish between the[m
[32m+[m[32m     specification and implementation of your[m
[32m+[m[32m     ADT. ${POINTS}-points[m
[32m+[m
[32m+[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer({shapeInfo}) {[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  const { Name, name } = shapeInfo.codeParams;[m
[32m+[m[32m  text += `[m
[32m+[m[32m    To clearly distinguish between the specification and implementation:[m
[32m+[m
[32m+[m[32m      + We put the specification and implementation into[m[41m [m
[32m+[m[32m        separate files \`${name}.h\` and \`${name}.c\` respectively.[m
[32m+[m
[32m+[m[32m      + Clients will .~#include~ \`${name}.h\`.[m
[32m+[m
[32m+[m[32m      + The \`${name}.h\` file declares an incomplete .~${Name}Struct~[m
[32m+[m[32m        .~struct~ for the ADT and the \`${name}.c\` implementation[m
[32m+[m[32m        file defines it.  The interface exposed to the client only[m
[32m+[m[32m        uses pointers to ADT type; hence all client code can be[m
[32m+[m[32m        compiled without knowing the internals of the ADT type.[m
[32m+[m
[32m+[m[32m      + To ensure consistency between the specification and the[m
[32m+[m[32m        implementation, the implementation file \`${name}.c\` will[m
[32m+[m[32m        also include \`${name}.h\`.[m
[32m+[m
[32m+[m[32m      + The object file produced from the implementation file[m
[32m+[m[32m        \`${name}.c\` must be linked into the program.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += code(shapeInfo.codeParams);[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction code(params) {[m
[32m+[m[32m  const {[m
[32m+[m[32m    NAME, Name, name, args, areaFormula, perimFormula, fields, init,[m
[32m+[m[32m  } = params;[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  const argsDecl = args.map(a => `double ${a}`).join(', ');[m
[32m+[m[32m  text += `[m
[32m+[m[32m    In specification file \`${name}.h\`:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    #ifndef ${NAME}_H_[m
[32m+[m[32m    #define ${NAME}_H_[m
[32m+[m
[32m+[m[32m    // opaque type for a ${Name}[m
[32m+[m[32m    typedef struct ${Name}Struct ${Name};[m
[32m+[m
[32m+[m[32m    /** Create and initialize a new ${Name} as per arguments.[m
[32m+[m[32m     *  It is the responsibility of the caller to call[m[41m [m
[32m+[m[32m     *  free_${name}() when the return value is no longer needed.[m
[32m+[m[32m     *[m
[32m+[m[32m     *  Terminates the program on error.[m
[32m+[m[32m     */[m
[32m+[m[32m    ${Name} *new_${name}(${argsDecl});[m
[32m+[m
[32m+[m[32m    /** Free all resources used by ${name}.[m[41m  [m
[32m+[m[32m     *  ${name} is no longer valid after this function.[m
[32m+[m[32m     */[m
[32m+[m[32m    void free_${name}(${Name} *${name});[m
[32m+[m
[32m+[m[32m    /** Return the area of ${name} */[m
[32m+[m[32m    double ${name}_area(const ${Name} *${name});[m
[32m+[m
[32m+[m[32m    /** Return the perimeter of ${name} */[m
[32m+[m[32m    double ${name}_perimeter(const ${Name} *${name});[m
[32m+[m
[32m+[m[32m    #endif //ifndef ${NAME}_H_[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m    In implementation file \`${name}.c\`:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    #include "${name}.h"[m
[32m+[m
[32m+[m[32m    #include <math.h>  //may not be necessary[m
[32m+[m[32m    #include <stdlib.h> //for mem and exit[m
[32m+[m
[32m+[m[32m    //implementation of ADT type[m
[32m+[m[32m    struct ${Name}Struct { ${fields} };[m
[32m+[m
[32m+[m[32m    /** Create and initialize a new ${Name} as per arguments.[m
[32m+[m[32m     *  It is the responsibility of the caller to call[m[41m [m
[32m+[m[32m     *  free_${name}() when the return value is no longer needed.[m
[32m+[m[32m     *[m
[32m+[m[32m     *  Terminates the program on error.[m
[32m+[m[32m     */[m
[32m+[m[32m    ${Name} *[m
[32m+[m[32m    new_${name}(${argsDecl})[m
[32m+[m[32m    {[m
[32m+[m[32m      ${Name} *${name} = malloc(sizeof(${Name}));[m
[32m+[m[32m      if (!${name}) exit(1);[m
[32m+[m[32m      ${init}[m
[32m+[m[32m      return ${name};[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /** Free all resources used by ${name}.[m[41m  [m
[32m+[m[32m     *  ${name} is no longer valid after this function.[m
[32m+[m[32m     */[m
[32m+[m[32m    void[m[41m [m
[32m+[m[32m    free_${name}(${Name} *${name})[m
[32m+[m[32m    {[m
[32m+[m[32m      free(${name});[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /** Return the area of ${name} */[m
[32m+[m[32m    double[m[41m [m
[32m+[m[32m    ${name}_area(const ${Name} *${name})[m
[32m+[m[32m    {[m
[32m+[m[32m       return ${areaFormula};[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /** Return the perimeter of ${name} */[m
[32m+[m[32m    double[m[41m [m
[32m+[m[32m    ${name}_perimeter(const ${Name} *${name})[m
[32m+[m[32m    {[m
[32m+[m[32m      return ${perimFormula};[m
[32m+[m[32m    }[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst SHAPES = {[m
[32m+[m[32m  circle: {[m
[32m+[m[32m    name: 'Circle',[m
[32m+[m[32m    params: 'radius',[m
[32m+[m[32m    codeParams: {[m
[32m+[m[32m      NAME: 'CIRCLE', Name: 'Circle', name: 'circle',[m
[32m+[m[32m      args: [ 'radius' ],[m
[32m+[m[32m      areaFormula: 'M_PI * circle->radius * circle->radius',[m
[32m+[m[32m      perimFormula: '2 * M_PI * circle->radius',[m
[32m+[m[32m      fields: 'double radius;',[m
[32m+[m[32m      init: 'circle->radius = radius;'[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m  rect: {[m
[32m+[m[32m    name: 'Rectangle',[m
[32m+[m[32m    params: 'width and height',[m
[32m+[m[32m    codeParams: {[m
[32m+[m[32m      NAME: 'RECT', Name: 'Rect', name: 'rect',[m
[32m+[m[32m      args: [ 'width', 'height' ],[m
[32m+[m[32m      areaFormula: 'rect->width * rect->height',[m
[32m+[m[32m      perimFormula: '2 * (rect->width + rect->height)',[m
[32m+[m[32m      fields: 'double width, height;',[m
[32m+[m[32m      init: 'rect->width = width; rect->height = height;'[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m  square: {[m
[32m+[m[32m    name: 'Square',[m
[32m+[m[32m    params: 'side-length',[m
[32m+[m[32m    codeParams: {[m
[32m+[m[32m      NAME: 'SQUARE', Name: 'Square', name: 'square',[m
[32m+[m[32m      args: [ 'sideLength',  ],[m
[32m+[m[32m      areaFormula: 'square->sideLength * square->sideLength',[m
[32m+[m[32m      perimFormula: '4 * square->sideLength',[m
[32m+[m[32m      fields: 'double sideLength;',[m
[32m+[m[32m      init: 'square->sideLength = sideLength;'[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    shape: () => Rand.choice(Object.keys(SHAPES)),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    shapeInfo: ({shape}) => SHAPES[shape],[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Adt().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/final/as-fns.c b/exercises/questions/src/final/as-fns.c[m
[1mnew file mode 100644[m
[1mindex 0000000..1831432[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/as-fns.c[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m      int[m
[32m+[m[32m      sum_array(int n, int array[])[m
[32m+[m[32m      {[m
[32m+[m[32m        int sum = 0;[m
[32m+[m[32m        for (int i = 0; i < n; i++) sum += array[i];[m
[32m+[m[32m        return sum;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      int[m
[32m+[m[32m      sub_array(int n, int array[])[m
[32m+[m[32m      {[m
[32m+[m[32m        int sum = 0;[m
[32m+[m[32m        for (int i = 0; i < n; i++) sum -= array[i];[m
[32m+[m[32m        return sum;[m
[32m+[m[32m      }[m
[32m+[m
[32m+[m[32m      int[m
[32m+[m[32m      mult_array(int n, int array[])[m
[32m+[m[32m      {[m
[32m+[m[32m        int prod = 1;[m
[32m+[m[32m        for (int i = 0; i < n; i++) prod *= array[i];[m
[32m+[m[32m        return prod;[m
[32m+[m[32m      }[m
[1mdiff --git a/exercises/questions/src/final/as-fns.js b/exercises/questions/src/final/as-fns.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d10bd64[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/as-fns.js[m
[36m@@ -0,0 +1,348 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-12-06 13:13:40 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass AsFns extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = AsFns;[m
[32m+[m[32mObject.assign(AsFns, {[m
[32m+[m[32m  id: 'asFns',[m
[32m+[m[32m  title: 'Annotating Assembly Function',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mconst POINTS = 20;[m
[32m+[m
[32m+[m[32mfunction question({fnInfo}) {[m
[32m+[m[32m  return `[m
[32m+[m[32m    [This may be the most time-consuming of all the questions on this[m
[32m+[m[32m    final; it may be a good idea to finish the other questions, before[m
[32m+[m[32m    working on this question.][m
[32m+[m
[32m+[m[32m    Given the following assembly language code for a function which takes[m
[32m+[m[32m    two arguments (compiled using  optimization level \`-O1\`):[m
[32m+[m
[32m+[m[32m    .code(lang=s)[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m${fnInfo.s}[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m      # Annotate the assembly language code to understand its[m
[32m+[m[32m        operation.[m[41m [m
[32m+[m
[32m+[m[32m      # Write a C function equivalent to the assembly code.[m
[32m+[m
[32m+[m[32m      # Provide a short description of the function's API.[m
[32m+[m
[32m+[m[32m    You may assume that the base type for all variables is[m
[32m+[m[32m    .~int~. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer({fnInfo}) {[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    The answers follow:[m
[32m+[m[32m  `;[m
[32m+[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # The annotated code:[m
[32m+[m
[32m+[m[32m        .code(lang=s)[m
[32m+[m
[32m+[m[32m        ~~~[m
[32m+[m[32m${fnInfo.annotated}[m
[32m+[m[32m        ~~~[m
[32m+[m
[32m+[m[32m        It looks like \`arg2\` is a pointer (array?).[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # An equivalent C function:[m
[32m+[m
[32m+[m[32m        ~~~[m
[32m+[m[32m${fnInfo.c_fn1}[m
[32m+[m[32m        ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m        Replacing the .~goto~ and labels with structured control,[m[41m [m
[32m+[m[32m        we get:[m
[32m+[m
[32m+[m[32m        ~~~[m
[32m+[m[32m${fnInfo.c_fn2}[m
[32m+[m[32m        ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m        It looks like an array is involved.  Changing the second[m
[32m+[m[32m        argument to an array, we get:[m
[32m+[m
[32m+[m[32m        ~~~[m
[32m+[m[32m${fnInfo.c_fn3}[m
[32m+[m[32m        ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # ${fnInfo.spec.replace(/\n/g, '')}[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32m  text += `[m
[32m+[m[32m    FWIW, here is the original source code from which the above[m
[32m+[m[32m    assembly was produced:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m${fnInfo.src}[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    The minor complexity in the above analysis is that the compiler[m
[32m+[m[32m    replaced all the array operations by pointer operations, but that[m
[32m+[m[32m    is what C compilers are expected to do![m
[32m+[m[41m     [m
[32m+[m[32m  `;[m
[32m+[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mconst C_FN1 = (init, op) => `[m
[32m+[m[32m      int fn(int arg1, int *p) {[m
[32m+[m[32m        if (arg1 <= 0) goto L4;[m
[32m+[m[32m        int *rdx = p;[m
[32m+[m[32m        int *rcx = p + arg1;[m
[32m+[m[32m        int ret = ${init};[m
[32m+[m[32m      L3:[m
[32m+[m[32m        ret = ret ${op} *rdx;[m
[32m+[m[32m        rdx += 1;[m
[32m+[m[32m        if (rdx != p + arg1) goto L2[m
[32m+[m[32m        return ret;[m
[32m+[m[32m      L4:[m
[32m+[m[32m        return ${init};[m
[32m+[m[32m      }[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst C_FN2 = (init, op) => `[m
[32m+[m[32m      int fn(int n, int *p) {[m
[32m+[m[32m        int *end = p + n;[m
[32m+[m[32m        int ret = ${init};[m
[32m+[m[32m        for (; p != end; p++) {[m
[32m+[m[32m          ret = ret ${op} *p;[m
[32m+[m[32m        }[m
[32m+[m[32m        return ret;[m
[32m+[m[32m      }[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst C_FN3 = (init, op) => `[m
[32m+[m[32m      int fn(int n, int array[]) {[m
[32m+[m[32m        int *end = &array[n];[m
[32m+[m[32m        int ret = ${init};[m
[32m+[m[32m        for (int *p = &array[0]; p != end; p++) {[m
[32m+[m[32m          ret = ret ${op} *p;[m
[32m+[m[32m        }[m
[32m+[m[32m        return ret;[m
[32m+[m[32m      }[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst SPEC = (op) => `[m
[32m+[m[32m  The function \`fn(int n, int array[])\` is returning the ${op} of[m[41m [m
[32m+[m[32m  the elements of \`array[n]\`.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst FN_INFOS = {[m
[32m+[m[32m  sum_array: {[m
[32m+[m[32m    src: `[m
[32m+[m[32m      int[m
[32m+[m[32m      sum_array(int n, int array[])[m
[32m+[m[32m      {[m
[32m+[m[32m        int sum = 0;[m
[32m+[m[32m        for (int i = 0; i < n; i++) sum += array[i];[m
[32m+[m[32m        return sum;[m
[32m+[m[32m      }[m
[32m+[m[32m    `,[m
[32m+[m[32m    s: `[m
[32m+[m[32m      fn:[m
[32m+[m[32m            testl   %edi, %edi[m
[32m+[m[32m            jle     .L4[m
[32m+[m[32m            movq    %rsi, %rdx[m
[32m+[m[32m            leal    -1(%rdi), %eax[m
[32m+[m[32m            leaq    4(%rsi,%rax,4), %rcx[m
[32m+[m[32m            movl    $0, %eax[m
[32m+[m[32m      .L3:[m
[32m+[m[32m            addl    (%rdx), %eax[m
[32m+[m[32m            addq    $4, %rdx[m
[32m+[m[32m            cmpq    %rcx, %rdx[m
[32m+[m[32m            jne     .L3[m
[32m+[m[32m            ret[m
[32m+[m[32m      .L4:[m
[32m+[m[32m            movl    $0, %eax[m
[32m+[m[32m            ret[m
[32m+[m[32m    `,[m
[32m+[m[32m    annotated: `[m
[32m+[m[32m      # arg1 = edi; arg2 = esi[m
[32m+[m[32m      fn:[m
[32m+[m[32m            testl   %edi, %edi     #test arg1[m
[32m+[m[32m            jle     .L4            #goto L4 if <= 0[m
[32m+[m[32m            movq    %rsi, %rdx     #rdx = p = arg2[m
[32m+[m[32m            leal    -1(%rdi), %eax #eax = arg1 - 1[m
[32m+[m[32m            leaq    4(%rsi,%rax,4), %rcx[m[41m [m
[32m+[m[32m            #rcx = 4 + (arg2 + 4*rax)[m[41m [m
[32m+[m[32m            #    = 4 + (arg2 + 4*(arg1 - 1))[m
[32m+[m[32m            #    = 4 + arg2 + 4*arg1 - 4[m
[32m+[m[32m            #    = arg2 + 4*arg1[m
[32m+[m[32m            movl    $0, %eax        #eax = 0[m
[32m+[m[32m      .L3:[m
[32m+[m[32m            addl    (%rdx), %eax    #eax += *p[m
[32m+[m[32m            addq    $4, %rdx        #p += 4[m
[32m+[m[32m            cmpq    %rcx, %rdx      #cmp p and arg2 + 4*arg1[m
[32m+[m[32m            jne     .L3             #loop back to L3 if not eq[m
[32m+[m[32m            ret[m
[32m+[m[32m      .L4:[m
[32m+[m[32m            movl    $0, %eax        #return 0[m
[32m+[m[32m            ret[m
[32m+[m[32m    `,[m
[32m+[m[32m    c_fn1: C_FN1(0, '+'),[m
[32m+[m[32m    c_fn2: C_FN2(0, '+'),[m
[32m+[m[32m    c_fn3: C_FN3(0, '+'),[m
[32m+[m[32m    spec: SPEC('sum'),[m
[32m+[m[32m  },[m
[32m+[m[32m  sub_array: {[m
[32m+[m[32m    src: `[m
[32m+[m[32m      int[m
[32m+[m[32m      sub_array(int n, int array[])[m
[32m+[m[32m      {[m
[32m+[m[32m        int sum = 0;[m
[32m+[m[32m        for (int i = 0; i < n; i++) sum -= array[i];[m
[32m+[m[32m        return sum;[m
[32m+[m[32m      }[m
[32m+[m[32m    `,[m
[32m+[m[32m    s: `[m
[32m+[m[32m      fn:[m
[32m+[m[32m            testl   %edi, %edi[m
[32m+[m[32m            jle     .L4[m
[32m+[m[32m            movq    %rsi, %rdx[m
[32m+[m[32m            leal    -1(%rdi), %eax[m
[32m+[m[32m            leaq    4(%rsi,%rax,4), %rcx[m
[32m+[m[32m            movl    $0, %eax[m
[32m+[m[32m      .L3:[m
[32m+[m[32m            subl    (%rdx), %eax[m
[32m+[m[32m            addq    $4, %rdx[m
[32m+[m[32m            cmpq    %rcx, %rdx[m
[32m+[m[32m            jne     .L3[m
[32m+[m[32m            ret[m
[32m+[m[32m      .L4:[m
[32m+[m[32m            movl    $0, %eax[m
[32m+[m[32m            ret[m
[32m+[m[32m    `,[m
[32m+[m[32m    annotated: `[m
[32m+[m[32m      # arg1 = edi; arg2 = esi[m
[32m+[m[32m      fn:[m
[32m+[m[32m            testl   %edi, %edi     #test arg1[m
[32m+[m[32m            jle     .L4            #goto L4 if <= 0[m
[32m+[m[32m            movq    %rsi, %rdx     #rdx = p = arg2[m
[32m+[m[32m            leal    -1(%rdi), %eax #eax = arg1 - 1[m
[32m+[m[32m            leaq    4(%rsi,%rax,4), %rcx[m[41m [m
[32m+[m[32m            #rcx = 4 + (arg2 + 4*rax)[m[41m [m
[32m+[m[32m            #    = 4 + (arg2 + 4*(arg1 - 1))[m
[32m+[m[32m            #    = 4 + arg2 + 4*arg1 - 4[m
[32m+[m[32m            #    = arg2 + 4*arg1[m
[32m+[m[32m            movl    $0, %eax        #eax = 0[m
[32m+[m[32m      .L3:[m
[32m+[m[32m            subl    (%rdx), %eax    #eax -= *p[m
[32m+[m[32m            addq    $4, %rdx        #p += 4[m
[32m+[m[32m            cmpq    %rcx, %rdx      #cmp p and arg2 + 4*arg1[m
[32m+[m[32m            jne     .L3             #loop back to L3 if not eq[m
[32m+[m[32m            ret[m
[32m+[m[32m      .L4:[m
[32m+[m[32m            movl    $0, %eax        #return 0[m
[32m+[m[32m            ret[m
[32m+[m[32m    `,[m
[32m+[m[32m    c_fn1: C_FN1(0, '-'),[m
[32m+[m[32m    c_fn2: C_FN2(0, '-'),[m
[32m+[m[32m    c_fn3: C_FN3(0, '-'),[m
[32m+[m[32m    spec: SPEC('negative sum'),[m
[32m+[m[32m  },[m
[32m+[m[32m  mult_array: {[m
[32m+[m[32m    src: `[m
[32m+[m[32m      int[m
[32m+[m[32m      mult_array(int n, int array[])[m
[32m+[m[32m      {[m
[32m+[m[32m        int prod = 1;[m
[32m+[m[32m        for (int i = 0; i < n; i++) prod *= array[i];[m
[32m+[m[32m        return prod;[m
[32m+[m[32m      }[m
[32m+[m[32m    `,[m
[32m+[m[32m    s: `[m
[32m+[m[32m      fn:[m
[32m+[m[32m            testl   %edi, %edi[m
[32m+[m[32m            jle     .L4[m
[32m+[m[32m            movq    %rsi, %rdx[m
[32m+[m[32m            leal    -1(%rdi), %eax[m
[32m+[m[32m            leaq    4(%rsi,%rax,4), %rcx[m
[32m+[m[32m            movl    $1, %eax[m
[32m+[m[32m      .L3:[m
[32m+[m[32m            imull   (%rdx), %eax[m
[32m+[m[32m            addq    $4, %rdx[m
[32m+[m[32m            cmpq    %rcx, %rdx[m
[32m+[m[32m            jne     .L3[m
[32m+[m[32m            ret[m
[32m+[m[32m      .L4:[m
[32m+[m[32m            movl    $1, %eax[m
[32m+[m[32m            ret[m
[32m+[m[32m    `,[m
[32m+[m[32m    annotated: `[m
[32m+[m[32m      # arg1 = edi; arg2 = esi[m
[32m+[m[32m      fn:[m
[32m+[m[32m            testl   %edi, %edi     #test arg1[m
[32m+[m[32m            jle     .L4            #goto L4 if <= 0[m
[32m+[m[32m            movq    %rsi, %rdx     #rdx = p = arg2[m
[32m+[m[32m            leal    -1(%rdi), %eax #eax = arg1 - 1[m
[32m+[m[32m            leaq    4(%rsi,%rax,4), %rcx[m[41m [m
[32m+[m[32m            #rcx = 4 + (arg2 + 4*rax)[m[41m [m
[32m+[m[32m            #    = 4 + (arg2 + 4*(arg1 - 1))[m
[32m+[m[32m            #    = 4 + arg2 + 4*arg1 - 4[m
[32m+[m[32m            #    = arg2 + 4*arg1[m
[32m+[m[32m            movl    $1, %eax        #eax = 0[m
[32m+[m[32m      .L3:[m
[32m+[m[32m            imull   (%rdx), %eax    #eax *= *p[m
[32m+[m[32m            addq    $4, %rdx        #p += 4[m
[32m+[m[32m            cmpq    %rcx, %rdx      #cmp p and arg2 + 4*arg1[m
[32m+[m[32m            jne     .L3             #loop back to L3 if not eq[m
[32m+[m[32m            ret[m
[32m+[m[32m      .L4:[m
[32m+[m[32m            movl    $1, %eax        #return 1[m
[32m+[m[32m            ret[m
[32m+[m[32m    `,[m
[32m+[m[32m    c_fn1: C_FN1(1, '*'),[m
[32m+[m[32m    c_fn2: C_FN2(1, '*'),[m
[32m+[m[32m    c_fn3: C_FN3(1, '*'),[m
[32m+[m[32m    spec: SPEC('product'),[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    fn: () => Rand.choice(Object.keys(FN_INFOS)),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    fnInfo: ({fn}) => FN_INFOS[fn],[m[41m [m
[32m+[m[32m  }[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new AsFns().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/final/as-fns.s.bak b/exercises/questions/src/final/as-fns.s.bak[m
[1mnew file mode 100644[m
[1mindex 0000000..a538cd0[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/as-fns.s.bak[m
[36m@@ -0,0 +1,93 @@[m
[32m+[m [32m.file       "as-fns.c"[m
[32m+[m [32m.text[m
[32m+[m [32m.globl      poly_eval[m
[32m+[m [32m.type       poly_eval, @function[m
[32m+[m[32mpoly_eval:[m
[32m+[m[32m.LFB0:[m
[32m+[m [32m.cfi_startproc[m
[32m+[m [32mtestl       %edx, %edx[m
[32m+[m [32mjle .L4[m
[32m+[m [32mmovq        %rsi, %rcx[m
[32m+[m [32mleal        -1(%rdx), %eax[m
[32m+[m [32mleaq        4(%rsi,%rax,4), %r8[m
[32m+[m [32mmovl        $1, %edx[m
[32m+[m [32mmovl        $0, %eax[m
[32m+[m[32m.L3:[m
[32m+[m [32mmovl        %edx, %esi[m
[32m+[m [32mimull       (%rcx), %esi[m
[32m+[m [32maddl        %esi, %eax[m
[32m+[m [32mimull       %edi, %edx[m
[32m+[m [32maddq        $4, %rcx[m
[32m+[m [32mcmpq        %r8, %rcx[m
[32m+[m [32mjne .L3[m
[32m+[m [32mret[m
[32m+[m[32m.L4:[m
[32m+[m [32mmovl        $0, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE0:[m
[32m+[m [32m.size       poly_eval, .-poly_eval[m
[32m+[m [32m.globl      array_diff[m
[32m+[m [32m.type       array_diff, @function[m
[32m+[m[32marray_diff:[m
[32m+[m[32m.LFB1:[m
[32m+[m [32m.cfi_startproc[m
[32m+[m [32mtestl       %edx, %edx[m
[32m+[m [32mjle .L10[m
[32m+[m [32mmovq        %rsi, %r8[m
[32m+[m [32mleal        -1(%rdx), %eax[m
[32m+[m [32mleaq        4(%rsi,%rax,4), %rsi[m
[32m+[m [32mmovl        $0, %eax[m
[32m+[m[32m.L9:[m
[32m+[m [32mmovl        (%r8), %edx[m
[32m+[m [32mmovl        %edi, %ecx[m
[32m+[m [32msubl        %edx, %ecx[m
[32m+[m [32msubl        %edi, %edx[m
[32m+[m [32mtestl       %ecx, %ecx[m
[32m+[m [32mcmovs       %edx, %ecx[m
[32m+[m [32maddl        %ecx, %eax[m
[32m+[m [32maddq        $4, %r8[m
[32m+[m [32mcmpq        %rsi, %r8[m
[32m+[m [32mjne .L9[m
[32m+[m [32mret[m
[32m+[m[32m.L10:[m
[32m+[m [32mmovl        $0, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE1:[m
[32m+[m [32m.size       array_diff, .-array_diff[m
[32m+[m [32m.globl      array_even_odds[m
[32m+[m [32m.type       array_even_odds, @function[m
[32m+[m[32marray_even_odds:[m
[32m+[m[32m.LFB2:[m
[32m+[m [32m.cfi_startproc[m
[32m+[m [32mtestl       %edx, %edx[m
[32m+[m [32mjle .L15[m
[32m+[m [32mleal        -1(%rdx), %r9d[m
[32m+[m [32mmovl        $0, %ecx[m
[32m+[m [32mmovl        $0, %eax[m
[32m+[m [32mjmp .L14[m
[32m+[m[32m.L16:[m
[32m+[m [32mmovq        %rdx, %rcx[m
[32m+[m[32m.L14:[m
[32m+[m [32mmovl        %ecx, %r8d[m
[32m+[m [32mshrl        $31, %r8d[m
[32m+[m [32mleal        (%r8,%rcx), %edx[m
[32m+[m [32mandl        $1, %edx[m
[32m+[m [32msubl        %r8d, %edx[m
[32m+[m [32msubl        $1, %edx[m
[32m+[m [32mimull       (%rsi,%rcx,4), %edx[m
[32m+[m [32mimull       %edi, %edx[m
[32m+[m [32maddl        %edx, %eax[m
[32m+[m [32mleaq        1(%rcx), %rdx[m
[32m+[m [32mcmpq        %r9, %rcx[m
[32m+[m [32mjne .L16[m
[32m+[m [32mret[m
[32m+[m[32m.L15:[m
[32m+[m [32mmovl        $0, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE2:[m
[32m+[m [32m.size       array_even_odds, .-array_even_odds[m
[32m+[m [32m.ident      "GCC: (Debian 8.3.0-6) 8.3.0"[m
[32m+[m [32m.section    .note.GNU-stack,"",@progbits[m
[1mdiff --git a/exercises/questions/src/final/c-decl.js b/exercises/questions/src/final/c-decl.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1900e2e[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/c-decl.js[m
[36m@@ -0,0 +1,190 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-12-09 21:22:38 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass CDecl extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = CDecl;[m
[32m+[m[32mObject.assign(CDecl, {[m
[32m+[m[32m  id: 'cDecl',[m
[32m+[m[32m  title: 'C Declarations',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mconst POINTS = 10;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { types, ids, fns, a, b, } = params;[m
[32m+[m[32m  const aInfo = C_DECLS[a];[m
[32m+[m[32m  const bInfo = C_DECLS[b];[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    Assuming suitable .~typedef~'s for[m[41m [m
[32m+[m[32m    ${types.slice(0, -1).map(t => `.~${t}~`).join(', ')}[m
[32m+[m[32m    and .~${types.slice(-1)[0]}~: "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # Given the declaration .~${aInfo.decl(params)}~, precisely describe[m
[32m+[m[32m        the type of .~${ids[0]}~.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # Given the declaration[m[41m [m
[32m+[m
[32m+[m[32m          ~~~[m
[32m+[m[32m          ${bInfo.decl(params)}[m
[32m+[m[32m          ~~~[m
[32m+[m
[32m+[m[32m        precisely describe the type of .~${fns[0]}~.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction ol(items, liIndent) {[m
[32m+[m[32m  const lineIndent = line => (line.match(/\s+/)?.[0] ?? '').length;[m
[32m+[m[32m  const li = (item => {[m
[32m+[m[32m    const lineIndents = item.[m
[32m+[m[32m      replace(/^\s*\n/, ''). //remove initial empty lines[m
[32m+[m[32m      split('\n').[m
[32m+[m[32m      map(line => ({line, indent: lineIndent(line)}));[m
[32m+[m[32m    const indent0 = lineIndents[0].indent;[m
[32m+[m[32m    return lineIndents.[m
[32m+[m[32m      map(({line, indent}) => {[m
[32m+[m [32mconst space = ' '.repeat(indent - indent0 + liIndent);[m
[32m+[m [32mreturn line.replace(/^\s*/, space);[m
[32m+[m[32m      }).[m
[32m+[m[32m      join('\n').[m
[32m+[m[32m      replace(/  (\S)/, '# $1');[m
[32m+[m[32m  });[m
[32m+[m[32m  return '\n' + items.map(item => li(item)).join('\n\n') + '\n';[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const { types, ids, fns, a, b, } = params;[m
[32m+[m[32m  const aInfo = C_DECLS[a];[m
[32m+[m[32m  const bInfo = C_DECLS[b];[m
[32m+[m[32m  const answers = ol([a, b].map(id => C_DECLS[id].descr(params)), 8);[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    The answers follow:[m
[32m+[m[32m    ${answers}[m
[32m+[m[32m  `;[m
[32m+[m[32m  /*[m[41m                [m
[32m+[m[32m  text += `[m
[32m+[m[32m      # ${aInfo.descr(params)}[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # ${bInfo.descr(params)}[m
[32m+[m[32m  `;[m
[32m+[m[32m  */[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst C_DECLS = {[m
[32m+[m[32m  CONST_PTR: {[m
[32m+[m[32m    part: 'a',[m
[32m+[m[32m    decl: ({ids, types}) => `${types[0]} *const ${ids[0]};`,[m
[32m+[m[32m    descr: ({ids, types}) => `[m
[32m+[m[32m        ${ids[0]} is a .~const~ pointer to a .~${types[0]}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  PTR_PTR_CONST: {[m
[32m+[m[32m    part: 'a',[m
[32m+[m[32m    decl: ({ids, types}) => `const ${types[0]} **${ids[0]};`,[m
[32m+[m[32m    descr: ({ids, types}) => `[m
[32m+[m[32m        ${ids[0]} is a pointer to a pointer to a .~const~ .~${types[0]}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m[41m   [m
[32m+[m[32m  CONST_PTR_CONST: {[m
[32m+[m[32m    part: 'a',[m
[32m+[m[32m    decl: ({ids, types}) => `const ${types[0]} *const ${ids[0]};`,[m
[32m+[m[32m    descr: ({ids, types}) => `[m
[32m+[m[32m        ${ids[0]} is a .~const~ pointer to a .~const~ .~${types[0]}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  FN1: {[m
[32m+[m[32m    part: 'b',[m
[32m+[m[32m    decl: ({ids, types, fns}) => `[m
[32m+[m[32m      const ${types[0]} *${fns[0]}(const ${types[1]} *${ids[0]}, ${types[2]} (*${fns[1]})());[m
[32m+[m[32m    `,[m
[32m+[m[32m    descr: ({ids, types, fns}) => `[m
[32m+[m[32m        .~${fns[0]}~ is a function which returns a pointer to a[m
[32m+[m[32m        .~const ${types[0]}~.  It takes two arguments: the first is a[m
[32m+[m[32m        pointer to a .~const ${types[1]}~ and the second is a pointer[m
[32m+[m[32m        to a function which takes unspecified arguments and returns a[m
[32m+[m[32m        .~${types[1]}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  FN2: {[m
[32m+[m[32m    part: 'b',[m
[32m+[m[32m    decl: ({ids, types, fns}) => `[m
[32m+[m[32m      ${types[0]} (*${fns[0]})(${types[1]} ${ids[0]}, const ${types[2]} *${ids[1]});[m
[32m+[m[32m    `,[m
[32m+[m[32m    descr: ({ids, types, fns}) => `[m
[32m+[m[32m        .~${fns[0]}~ is a pointer to a function which returns a[m
[32m+[m[32m        .~${types[0]}~ and takes two arguments: the first is a[m
[32m+[m[32m        ${types[1]} and the second is a pointer to a .~const[m
[32m+[m[32m        ${types[2]}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  FN3: {[m
[32m+[m[32m    part: 'b',[m
[32m+[m[32m    decl: ({ids, types, fns}) => `[m
[32m+[m[32m      const ${types[0]} *(*${fns[0]})(${types[1]} ${ids[0]});[m
[32m+[m[32m    `,[m
[32m+[m[32m    descr: ({ids, types, fns}) => `[m
[32m+[m[32m        .~${fns[0]}~ is a pointer to a function which returns a[m
[32m+[m[32m        pointer to a .~const ${types[0]}~ and takes a single argument[m
[32m+[m[32m        which is of type .~${types[1]}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst IDS = [[m
[32m+[m[32m  [ 'a', 'b', 'c', ],[m
[32m+[m[32m  [ 'x', 'y', 'z', ],[m
[32m+[m[32m  [ 'a1', 'a2', 'a3' ],[m
[32m+[m[32m  [ 'x1', 'x2', 'x3' ],[m
[32m+[m[32m];[m
[32m+[m[32mconst TYPES = [[m
[32m+[m[32m  [ 'Point', 'Shape', 'Circle', ],[m
[32m+[m[32m  [ 'Employee', 'Department', 'Payroll', ],[m
[32m+[m[32m  [ 'Computer', 'CPU', 'Memory', ],[m
[32m+[m[32m  [ 'Y86', 'Y86Sim', 'Y86Pipeline' ],[m
[32m+[m[32m];[m
[32m+[m[32mconst FNS = [[m
[32m+[m[32m  [ 'f', 'g', 'h', ],[m
[32m+[m[32m  [ 'f1', 'f2', 'f3', ],[m
[32m+[m[32m  [ 'g1', 'g2', 'g3', ],[m
[32m+[m[32m  [ 'h1', 'h2', 'h3', ],[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    ids: () => Rand.choice(IDS),[m
[32m+[m[32m    types: () => Rand.choice(TYPES),[m
[32m+[m[32m    fns: () => Rand.choice(FNS),[m
[32m+[m[32m    a: Rand.choice(Object.keys(C_DECLS).filter(k => C_DECLS[k].part === 'a')),[m
[32m+[m[32m    b: Rand.choice(Object.keys(C_DECLS).filter(k => C_DECLS[k].part === 'b')),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new CDecl().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/final/cache.js b/exercises/questions/src/final/cache.js[m
[1mnew file mode 100644[m
[1mindex 0000000..14b6b08[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/cache.js[m
[36m@@ -0,0 +1,214 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-12-06 15:07:00 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Cache extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Cache;[m
[32m+[m[32mObject.assign(Cache, {[m
[32m+[m[32m  id: 'cache',[m
[32m+[m[32m  title: 'Cache',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mconst POINTS = 20;[m
[32m+[m
[32m+[m[32mfunction question({m, e, s, b, B, E, S, addresses, fmtAddr, }) {[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  const textAddresses =[m
[32m+[m[32m    addresses.map(a => ' '.repeat(8) + fmtAddr(a)).join('\n');[m
[32m+[m[32m  text += `[m
[32m+[m[32m    Given a \`${m}\`-bit byte-addressed computer having a[m[41m [m
[32m+[m[32m    \`${E}\`-way set-associative cache with \`${s}\`-bits[m[41m [m
[32m+[m[32m    of a memory address used to select a cache set and[m[41m [m
[32m+[m[32m    \`${b}\`-bits of a memory address used to specify the[m
[32m+[m[32m    offset within a cache block.[m
[32m+[m
[32m+[m[32m      # What is the number of tag bits within an address?[m
[32m+[m
[32m+[m[32m      # What will be the size of a cache in bytes? You may[m
[32m+[m[32m        leave your answer as a power-of-2.[m
[32m+[m
[32m+[m[32m      # For the following sequence of hex addresses:[m
[32m+[m
[32m+[m[32m        \`\`\`[m
[32m+[m[32m${textAddresses}[m
[32m+[m[32m        \`\`\`[m
[32m+[m
[32m+[m[32m        show a trace of the cache operation.  Specifically, for each[m
[32m+[m[32m        address indicate whether or not that address \`HIT\` or[m
[32m+[m[32m        \`MISS\`'ed the cache, followed by the address of the block[m
[32m+[m[32m        being evicted from the cache if the miss resulted in a block[m
[32m+[m[32m        eviction.  You should assume that the cache is initially empty[m
[32m+[m[32m        and uses an LRU replacement strategy.  ${POINTS}-points[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const {m, e, s, b, B, E, S,} = params;[m
[32m+[m
[32m+[m[32m  const trace = traceText(params);[m
[32m+[m[41m  [m
[32m+[m[32m  let text = `[m
[32m+[m[32m    The number of bits in a memory address is .$m = ${m}$, the number[m
[32m+[m[32m    of bits to select a cache set is .$s = ${s}$ and the number of[m
[32m+[m[32m    bits used to specify the offset within a cache block is .$b =[m
[32m+[m[32m    ${b}$.  We also have .$E=${E}$ cache-lines per set and[m
[32m+[m[32m    .$S=2^{${s}}=${S}$ sets in the cache.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # The # of tag bits will be .$m - s - b = (${m} - ${s} - ${b}) =[m
[32m+[m[32m        ${m - s -b}$ bits.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # The size of the cache will be[m[41m [m
[32m+[m[32m        .$E\\times S\\times B = ${E}\\times 2^{${s}}\\times[m
[32m+[m[32m        2^{${b}}  = 2^{${e + s + b}}$ bytes.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # The actions on the cache will be the following:[m
[32m+[m
[32m+[m[32m        \`\`\`[m
[32m+[m[32m${traceText(params)};[m
[32m+[m[32m        \`\`\`[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction fmt4(hex) {[m
[32m+[m[32m  const n = hex.length - 1;[m
[32m+[m[32m  return hex.split('').[m
[32m+[m[32m    map((c, i) => { const j = n - i;[m
[32m+[m         [32m    return j > 0 && j % 4 === 0 ? `${c}_` : c;[m
[32m+[m         [32m  }).join('');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction hex(val, nBits) { return val.toString(16).padStart(nBits/4, '0'); }[m
[32m+[m
[32m+[m[32mfunction traceText(params) {[m
[32m+[m[32m  const {fmtAddr} = params;[m
[32m+[m[32m  const traces = simulate(params);[m
[32m+[m[32m  const cacheStr = cache => {[m
[32m+[m[32m    let text = '{ ';[m
[32m+[m[32m    cache.forEach(({set, tags}) => text += `${set}: [ ${tags.join(', ')} ]; `);[m
[32m+[m[32m    return text += '}';[m
[32m+[m[32m  }[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  const indent = ' '.repeat(8);[m
[32m+[m[32m  traces.forEach(trace => {[m
[32m+[m[32m    text += indent;[m
[32m+[m[32m    text += `${fmtAddr(trace.addr)}: `;[m
[32m+[m[32m    text += `set = 0x${trace.set.toString(16)}; `;[m
[32m+[m[32m    text += `tag = 0x${trace.tag.toString(16)}; `;[m
[32m+[m[32m    text += trace.act;[m
[32m+[m[32m    text += '\n';[m
[32m+[m[32m    text += `${indent}    tlb: ` + cacheStr(trace.cache);[m
[32m+[m[32m    text += '\n'[m
[32m+[m[32m  });[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction simulate({addresses, m, t, s, b, B, E, S, decodeAddr}) {[m
[32m+[m[32m  const do_cache = (c, set, tag) => {[m
[32m+[m[32m    if (!c[set]) c[set] = [];[m
[32m+[m[32m    let act = 'HIT';[m
[32m+[m[32m    if (c[set].indexOf(tag) < 0) { act = 'MISS'; c[set].push(tag); }[m
[32m+[m[32m    if (c[set].length > E) {[m
[32m+[m[32m      const tag1 = c[set].shift();[m
[32m+[m[32m      act += ' ' + fmt4(`${hex(tag1, t)}${hex(set, s)}${hex(0, b)}`);[m
[32m+[m[32m    }[m
[32m+[m[32m    return act;[m
[32m+[m[32m  };[m
[32m+[m[32m  let cache = {};[m
[32m+[m[32m  let traces = [];[m
[32m+[m[32m  addresses.forEach(addr => {[m
[32m+[m[32m    const { tag, set, offset } = decodeAddr(addr);[m
[32m+[m[32m    const act = do_cache(cache, set, tag);[m
[32m+[m[32m    const cache1 = Object.entries(cache).[m
[32m+[m [32m  map(([set1, tags]) => ([m
[32m+[m [32m    { set: `0x${Number(set1).toString(16)}`,[m
[32m+[m [32m      tags: tags.map(tag => `0x${tag.toString(16)}`),[m
[32m+[m [32m    }[m
[32m+[m [32m  ));[m
[32m+[m[32m    traces.push({addr, tag, set, offset, cache: cache1, act });[m
[32m+[m[32m  });[m
[32m+[m[32m  return traces;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction addresses({m, e, s, b, B, E, S,}) {[m
[32m+[m[32m  const t = m - s - b;[m
[32m+[m[41m  [m
[32m+[m[32m  const offsets = [...Array(B).keys()];[m
[32m+[m[32m  const disp = () => Rand.choice(offsets);[m
[32m+[m[32m  const [s0, s1] = Rand.choices(2, [...Array(S).keys()]);[m
[32m+[m[32m  const tagValues = [...Array(Math.min(2**t, 256)).keys()];[m
[32m+[m[32m  const tag1 = Rand.choice(tagValues);[m
[32m+[m[32m  tagValues.splice(tagValues.indexOf(tag1), 1);[m
[32m+[m[32m  const tags0 = Rand.choices(5, tagValues);[m
[32m+[m[32m  const addr = (tag, set, offset=disp()) =>[m[41m [m
[32m+[m [32m(tag << (s + b)) | (set << b) | offset;[m
[32m+[m[32m  const ret = ([m
[32m+[m[32m    Rand.permutation([...Array(3)].map(_ => addr(tag1, s1)).[m
[32m+[m[41m   [m                [32m     concat(tags0.map(tag0 => addr(tag0, s0))))[m
[32m+[m[32m  );[m
[32m+[m[32m  return ret;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//code assumes 2[m
[32m+[m[32mconst N_LINES_PER_SET = 2;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { m: () => Rand.choice([24, 32, 64]),[m
[32m+[m[32m    e: () => N_LINES_PER_SET,[m
[32m+[m[32m    b: () => Rand.choice([4, 8, 12]),[m
[32m+[m[32m    s: () => Rand.choice([4, 8]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    E: ({e}) => 2**e,[m
[32m+[m[32m    S: ({s}) => 2**s,[m
[32m+[m[32m    B: ({b}) => 2**b,[m
[32m+[m[32m    t: ({m, s, b}) => m - s -b,[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    addresses: params => addresses(params),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    decodeAddr: ({t, s, b}) => addr => {[m
[32m+[m[32m      const offset = addr & ~(-1 << b);[m
[32m+[m[32m      const set = (addr >>> b) & ~(-1 << s)[m
[32m+[m[32m      const tag = (addr >>> (s + b)) & ~(-1 << t)[m
[32m+[m[32m      return { tag, set, offset, };[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    addresses: params => addresses(params),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    fmtAddr: ({t, s, b, decodeAddr}) => addr => {[m
[32m+[m[32m      const { tag, set, offset } = decodeAddr(addr);[m
[32m+[m[32m      return fmt4(`${hex(tag, t)}${hex(set, s)}${hex(offset, b)}`);[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Cache().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/final/lea.js b/exercises/questions/src/final/lea.js[m
[1mnew file mode 100644[m
[1mindex 0000000..07a68b8[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/lea.js[m
[36m@@ -0,0 +1,93 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-12-05 11:04:04 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Lea extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Lea;[m
[32m+[m[32mObject.assign(Lea, {[m
[32m+[m[32m  id: 'lea',[m
[32m+[m[32m  title: 'Using lea Instruction for Computation',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mconst POINTS = 10;[m
[32m+[m
[32m+[m[32mfunction question({multiplier, reg}) {[m
[32m+[m[32m  return `[m
[32m+[m[32m    Without using any jump or multiply instructions provide an[m
[32m+[m[32m    x86-64 instruction sequence of length less than 5 which[m
[32m+[m[32m    multiplies \`${reg}\` by ${multiplier}. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer({seq, multiplier, reg}) {[m
[32m+[m[32m  let msg = `[m
[32m+[m[32m    Assuming that the initial value of \`${reg}\` is \`a0\`,[m[41m [m
[32m+[m[32m    the following \`lea\` code sequence multiplies \`${reg}\` by[m
[32m+[m[32m    ${multiplier}[m
[32m+[m
[32m+[m[32m    .code(lang=s)[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  let m = 1;[m
[32m+[m[32m  for (const s of seq) {[m[41m [m
[32m+[m[32m    m *= Number(s);[m
[32m+[m[32m    msg += `${LEA_MULTIPLIERS[s](reg)} # ${reg} *= ${s}; i.e. ${reg} = a0*${m}\n`;[m
[32m+[m[32m  }[m
[32m+[m[32m  msg += `[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  return msg;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//Single lea instruction can compute these multiples[m
[32m+[m[32mconst LEA_MULTIPLIERS = {[m
[32m+[m[32m  2: reg => `leaq (, %${reg}, 2), %${reg}`,[m
[32m+[m[32m  3: reg => `leaq (%${reg}, %${reg}, 2), %${reg}`,[m
[32m+[m[32m  4: reg => `leaq (, %${reg}, 4), %${reg}`,[m
[32m+[m[32m  5: reg => `leaq (%${reg}, %${reg}, 4), %${reg}`,[m
[32m+[m[32m  8: reg => `leaq (, %${reg}, 8), %${reg}`,[m
[32m+[m[32m  9: reg => `leaq (%${reg}, %${reg}, 8), %${reg}`,[m
[32m+[m[32m};[m
[32m+[m[32mconst MULTIPLIERS = Object.keys(LEA_MULTIPLIERS);[m
[32m+[m[32mconst [MIN_LEN, MAX_LEN] = [2, 2];[m
[32m+[m
[32m+[m[32mfunction seq() {[m
[32m+[m[32m  const len = Rand.int(MIN_LEN, MAX_LEN + 1);[m
[32m+[m[32m  return Array.from({length: len}).map(_ => Rand.choice(MULTIPLIERS));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    reg: () => Rand.choice(['rax', 'rbx', 'rcx', 'rdx', 'r8', 'r9', 'r10', ]),[m
[32m+[m[32m    seq: () => seq(),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    multiplier: ({seq}) =>  seq.reduce((acc, m)=>acc*Number(m), 1),[m
[32m+[m[32m    code: ({seq, reg}) => seq.map(m=>`  ${LEA_MULTIPLIERS[m](reg)}\n`).join(''),[m
[32m+[m[32m  }[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Lea().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/final/meta.js b/exercises/questions/src/final/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..019de38[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/meta.js[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  id: 'final',[m
[32m+[m[32m  title: 'Final',[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    require('./adt'),[m
[32m+[m[32m    require('./as-fns'),[m
[32m+[m[32m    require('./cache'),[m
[32m+[m[32m    require('./c-decl'),[m
[32m+[m[32m    require('./lea'),[m
[32m+[m[32m    require('./pipeline'),[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
[1mdiff --git a/exercises/questions/src/final/pipeline.js b/exercises/questions/src/final/pipeline.js[m
[1mnew file mode 100644[m
[1mindex 0000000..dfe374c[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/final/pipeline.js[m
[36m@@ -0,0 +1,188 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-12-06 15:03:10 umrigar>';[m
[32m+[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Pipeline extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Pipeline;[m
[32m+[m[32mObject.assign(Pipeline, {[m
[32m+[m[32m  id: 'pipeline',[m
[32m+[m[32m  title: 'Pipeline',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 20;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { stageDelays, pipeDelay, code, n } = params;[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    Given a classic 5-stage RISC pipeline with *fetch*, *decode*,[m
[32m+[m[32m    *execute*, *memory* and *writeback* stages having delays of[m
[32m+[m[32m    ${stageDelays.join(', ')} ps respectively.  The pipeline registers[m
[32m+[m[32m    have a delay of ${pipeDelay} ps.[m
[32m+[m
[32m+[m[32m      # What is the highest frequency (in GHz) at which the pipeline[m
[32m+[m[32m        can be clocked?[m
[32m+[m
[32m+[m[32m      # What is the minimum latency of the pipeline?[m
[32m+[m
[32m+[m[32m      # Given the following sequence of ${n} instructions:[m
[32m+[m
[32m+[m[32m        .code(lang=s)[m
[32m+[m
[32m+[m[32m        ~~~[m
[32m+[m
[32m+[m[32m        ${code}[m
[32m+[m
[32m+[m[32m        ~~~[m
[32m+[m
[32m+[m[32m        Assuming that[m
[32m+[m
[32m+[m[32m          + Registers are not available for the decode stage[m
[32m+[m[32m            until after they have been written into the register file by[m
[32m+[m[32m            the writeback stage.[m
[32m+[m
[32m+[m[32m          + Data dependencies are handled by[m
[32m+[m[32m            stalling the pipeline.[m[41m [m
[32m+[m
[32m+[m[32m        How many clock cycles will the above sequence of instructions[m
[32m+[m[32m        take to completely traverse the pipeline? "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const {[m
[32m+[m[32m    n, nStallCycles, nCycles, regs, stallRegIndex, op, stageDelays, pipeDelay,[m
[32m+[m[32m  } = params;[m
[32m+[m[32m  const slowDelay = Math.max(...stageDelays);[m
[32m+[m[32m  const depCycles = regs.length - stallRegIndex;[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    The answers follow:[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # The clock will depend on the delay through the slowest[m
[32m+[m[32m        pipeline stage which is ${slowDelay} ps.[m
[32m+[m[32m        Hence the clock period will be that plus the  ${pipeDelay} ps delay[m
[32m+[m[32m        through the pipeline register; i.e.[m[41m [m
[32m+[m[32m        .$${slowDelay} + ${pipeDelay} = ${slowDelay + pipeDelay}$ ps,[m
[32m+[m[32m        leading to a clock frequency of[m[41m [m
[32m+[m[32m        ${(1000/(slowDelay + pipeDelay)).toFixed(2)}[m
[32m+[m[32m        GHz.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # The minimum latency will be .$5\\times ${slowDelay + pipeDelay} =[m[41m [m
[32m+[m[32m        ${5 * (slowDelay + pipeDelay)}$ ps.[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m      # If there are no stalls in a *${STAGES.join('-')}* pipeline,[m
[32m+[m[32m        .$n$ instructions would take .$n + 4$ cycles where the .$4$[m
[32m+[m[32m        additional cycles are necessary for the last instruction to[m
[32m+[m[32m        exit the pipeline.  In this case, the last \`${op}\`[m
[32m+[m[32m        instruction has a data dependency on the[m
[32m+[m[32m        \`${regs[stallRegIndex]}\` register which is computed only[m
[32m+[m[32m        .$${depCycles}$ instruction(s) earlier.  So when the \`${op}\`[m
[32m+[m[32m        instruction is in the *decode* stage, the instruction which[m
[32m+[m[32m        computes the \`${regs[stallRegIndex]}\` register will be in[m
[32m+[m[32m        the *${STAGE_NAMES[STAGES[1 + depCycles]]}* stage.  Hence it[m
[32m+[m[32m        is necessary to stall the pipeline for .$${nStallCycles}$[m
[32m+[m[32m        cycle(s).  So the total number of clock cycles will be .$${n}[m
[32m+[m[32m        + 4 + ${nStallCycles} = ${nCycles}$.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst REGS = ['rax', 'rbx', 'rcx', 'rdx', 'rsi', 'rdi',[m
[32m+[m [32m      'r8', 'r9', 'r10', 'r11', 'r12',];[m
[32m+[m[32mconst OPS = [ 'addq', 'subq', 'imulq', 'andq', 'orq', 'xorq', ];[m
[32m+[m[32mconst DELAYS = [[m
[32m+[m[32m  [ 15, 100, 120, 100, 135, 110, ],[m
[32m+[m[32m  [ 20, 200, 220, 200, 230, 210, ],[m
[32m+[m[32m  [ 20, 150, 180, 140, 160, 150, ],[m
[32m+[m[32m  [ 10, 90, 90, 80, 90, 80, ],[m
[32m+[m[32m];[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { n: () => Rand.choice([5, 6, 7]),[m
[32m+[m[32m    nStallCycles: () => Rand.choice([1, 2, 3]),[m
[32m+[m[32m    stallRand: () => Rand.choice([0, 1]),[m
[32m+[m[32m    op: () => Rand.choice(OPS),[m
[32m+[m[32m    delays: () => Rand.choice(DELAYS),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    consts: ({n}) => Array.from({length: n - 1}).map(_ => Rand.int(1, 100)),[m
[32m+[m[32m    regs: (params) => chooseRegs(params),[m
[32m+[m[32m    nCycles: ({n, nStallCycles}) => n + nStallCycles + 4,[m[41m [m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    pipeDelay: ({delays}) => delays[0],[m
[32m+[m[32m    stageDelays: ({delays}) => delays.slice(1),[m
[32m+[m[32m    stallRegIndex: ({nStallCycles, n}) => (n - 1) + (nStallCycles - 4),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m[41m [m
[32m+[m[32m    otherRegIndex: ({stallRegIndex}) => Rand.int(0, stallRegIndex),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    code: (params) => genCode(params),[m
[32m+[m[32m    clockPeriod:[m
[32m+[m[32m    ({pipeDelay, stageDelays}) => pipeDelay + Math.max(...stageDelays),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction chooseRegs({n}) {[m
[32m+[m[32m  const regs = Array.from(REGS);[m
[32m+[m[32m  const chosen = [];[m
[32m+[m[32m  while (chosen.length < n - 1) {[m
[32m+[m[32m    const i = Rand.int(0, regs.length);[m
[32m+[m[32m    const reg = regs.splice(i, 1)[0];[m
[32m+[m[32m    chosen.push(reg);[m
[32m+[m[32m  }[m
[32m+[m[32m  return chosen;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction genCode({regs, consts, op, stallRegIndex, otherRegIndex, stallRand}) {[m
[32m+[m[32m  const code = [];[m
[32m+[m[32m  assert(regs.length === consts.length);[m
[32m+[m[32m  for (let i = 0; i < regs.length; i++) {[m
[32m+[m[32m    code.push(`movq\t$${consts[i]}, %${regs[i]}`);[m
[32m+[m[32m  }[m
[32m+[m[32m  const stallReg = regs[stallRegIndex];[m
[32m+[m[32m  const otherReg = regs[otherRegIndex];[m
[32m+[m[32m  const operands =[m
[32m+[m [32m(stallRand === 0) ? [stallReg, otherReg] : [otherReg, stallReg];[m
[32m+[m[32m  code.push(`${op}\t${operands.map(e => `%${e}`).join(', ')}`);[m
[32m+[m[32m  return code.join('\n');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst STAGE_NAMES = {[m
[32m+[m[32m  F: 'fetch',[m
[32m+[m[32m  D: 'decode',[m
[32m+[m[32m  E: 'execute',[m
[32m+[m[32m  M: 'memory',[m
[32m+[m[32m  W: 'write-back',[m
[32m+[m[32m};[m
[32m+[m[32mconst STAGES = Object.keys(STAGE_NAMES); //assume object insertion order[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Pipeline().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/meta.js b/exercises/questions/src/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7f81ba3[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/meta.js[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mconst {MetaWrapper} = require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst META = MetaWrapper.wrap({[m
[32m+[m[32m  id: '',[m
[32m+[m[32m  title: '', //'Architecture from a Programmer's Perspective: Exercises[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    // require('./programming/meta'),[m
[32m+[m[32m    // require('./tools/meta'),[m
[32m+[m[32m    // require('./x86/meta'),[m
[32m+[m[32m    // require('./arch/meta'),[m
[32m+[m[32m    //require('./midterm/meta'),[m
[32m+[m[32m    //require('./final/meta'),[m
[32m+[m[32m  ],[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mmodule.exports = META;[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  //note that leaves will print as null because they are Function's[m
[32m+[m[32m  //which are not handled by JSON[m
[32m+[m[32m  console.log(JSON.stringify(META, null, 2));[m
[32m+[m[32m  console.log(META.get('/js').next);[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/alt-sum.js b/exercises/questions/src/midterm/alt-sum.js[m
[1mnew file mode 100644[m
[1mindex 0000000..da3f692[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/alt-sum.js[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-15 23:12:49 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass AltSum extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = AltSum;[m
[32m+[m[32mObject.assign(AltSum, {[m
[32m+[m[32m  id: 'altSum',[m
[32m+[m[32m  title: 'Alternating Sum',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 25;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { type } = params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    The alternating sum of an array .$a[n]$ is[m
[32m+[m[32m    .$a[0] - a[1] + a[2] - a[3] + \\ldots + -1^{n-1} \\times a[n-1]$.[m
[32m+[m
[32m+[m[32m    You are required to write a function .~alt_sum()~ which[m
[32m+[m[32m    computes the alternating sum of an array  whose elements are of type[m
[32m+[m[32m    .~${type}~.  Your answer should include:[m
[32m+[m
[32m+[m[32m      + The header for .~alt_sum()~ specifying the parameters and[m
[32m+[m[32m        return value.[m
[32m+[m
[32m+[m[32m      + The body for .~alt_sum()~.[m[41m [m
[32m+[m
[32m+[m[32m    Your code may ignore any overflows. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const { type } = params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    We will pass the array as a parameter to the function. Since[m
[32m+[m[32m    C arrays do not maintain their size, we will need an[m
[32m+[m[32m    additional parameter to specify its size:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    ${type} alt_sum(int n, const ${type} a[]) {[m
[32m+[m[32m      ${type} sum = 0;[m
[32m+[m[32m      int sign = 1;[m
[32m+[m[32m      for (int i = 0; i < n; i++) {[m
[32m+[m[32m        sum += sign * a[i];[m
[32m+[m[32m        sign *= -1;[m
[32m+[m[32m      }[m
[32m+[m[32m      return sum;[m
[32m+[m[32m    }[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    It will be the responsibility of the caller to set up the[m
[32m+[m[32m    input array .~a[]~.[m
[32m+[m[32m  `;[m
[32m+[m[41m  [m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    type: () => Rand.choice(['int', 'long', 'double']),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new AltSum().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/dot-product.js b/exercises/questions/src/midterm/dot-product.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ba1b86a[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/dot-product.js[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-16 16:34:18 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass DotProduct extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = DotProduct;[m
[32m+[m[32mObject.assign(DotProduct, {[m
[32m+[m[32m  id: 'dotProduct',[m
[32m+[m[32m  title: 'Vector Dot Product',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 25;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { type } = params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    The *dot product* .$U\\cdot V$ of two vectors .$U$ containing[m
[32m+[m[32m    elements .$u_1, u_2, \\ldots, u_n$ and .$V$ containing elements[m
[32m+[m[32m    .$v_1, v_2, \\ldots v_n$ is defined to be .$U\\cdot V =[m
[32m+[m[32m    \\sum_{i=1}^{n}u_i\\times v_i$.[m
[32m+[m
[32m+[m[32m    You are required to write a function .~dot_product()~ which[m
[32m+[m[32m    computes the dot product of two vectors whose elements are of type[m
[32m+[m[32m    .~${type}~.  Your answer should include:[m
[32m+[m
[32m+[m[32m      + The header for .~dot_product()~ specifying the parameters and[m
[32m+[m[32m        return value.[m
[32m+[m
[32m+[m[32m      + The body for .~dot_product()~.[m[41m [m
[32m+[m
[32m+[m[32m    Your code may ignore any overflows. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const { type } = params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    Note that since dot product is defined only for equal-sized vectors,[m
[32m+[m[32m    the function API should reflect that by allowing only a single[m
[32m+[m[32m    parameter to specify the number of elements.[m
[32m+[m
[32m+[m[32m    We will represent .$U$ and .$V$ by two arrays.  Since arrays[m
[32m+[m[32m    in C do not maintain their size, we will need an additional[m
[32m+[m[32m    parameter to specify their size:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    ${type} dot_product(int n, const ${type} u[], const ${type} v[]) {[m
[32m+[m[32m      ${type} s = 0;[m
[32m+[m[32m      for (int i = 0; i < n; i++) {[m
[32m+[m[32m        s += u[i]*v[i];[m
[32m+[m[32m      }[m
[32m+[m[32m      return s;[m
[32m+[m[32m    }[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    It will be the responsibility of the caller to set up the[m
[32m+[m[32m    input arrays .~u[]~ and .~v[]~.[m
[32m+[m[32m  `;[m
[32m+[m[41m  [m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    type: () => Rand.choice(['int', 'long', 'double']),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new DotProduct().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/float-values.js b/exercises/questions/src/midterm/float-values.js[m
[1mnew file mode 100644[m
[1mindex 0000000..238d413[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/float-values.js[m
[36m@@ -0,0 +1,255 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-16 10:41:32 umrigar>';[m
[32m+[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mconst { ol, bits4, } = require('./util');[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass FloatValues extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FloatValues;[m
[32m+[m[32mObject.assign(FloatValues, {[m
[32m+[m[32m  id: 'floatValues',[m
[32m+[m[32m  title: 'Floating Point Values',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst DESCR = {[m
[32m+[m[32m  max: 'largest positive finite number',[m
[32m+[m[32m  min: 'smallest negative finite number',[m
[32m+[m[32m  minExtra: '(i.e. finite number closest to .$-\\infty$)',[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst POINTS = 30;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { n, k, specialValue, maxMin, numValue, order } = params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    Given a ${n}-bit IEEE floating point format with ${k} exponent bits:[m
[32m+[m[32m  `.trim() + '\n\n';[m
[32m+[m[32m  for (const part of order) {[m
[32m+[m[32m    switch (part) {[m
[32m+[m[32m      case 'special': {[m
[32m+[m [32mconst valFormula = decodeFloatValue(n, k, specialValue).valueFormula;[m
[32m+[m [32mtext += `[m
[32m+[m[32m          # Give the hexadecimal representation for the bit-pattern[m
[32m+[m[32m            representing ${valFormula}.[m
[32m+[m[32m        `;[m
[32m+[m [32mbreak;[m
[32m+[m[32m      }[m
[32m+[m[32m      case 'maxMin':[m[41m [m
[32m+[m [32mtext += `[m
[32m+[m[32m          # Give the decimal value for the ${DESCR[maxMin]}[m
[32m+[m[32m            ${DESCR[`${maxMin}Extra`] ?? ''} which can be represented.[m
[32m+[m[32m         `;[m
[32m+[m [32mbreak;[m
[32m+[m[32m      case 'num':[m
[32m+[m [32mtext += `[m
[32m+[m[32m          # Give the decimal representation for the floating point[m
[32m+[m[32m            number represented by the bit pattern[m[41m [m
[32m+[m[32m            .~${decodeFloatValue(n, k, numValue).hex}~.[m
[32m+[m[32m        `;[m
[32m+[m [32mbreak;[m
[32m+[m[32m      default:[m
[32m+[m [32massert(!part, `unknown part type '${part}'`);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  text += `[m
[32m+[m[32m    Remember to justify all answers. ${POINTS}-points.[m[41m [m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const { n, k, order, special } = params;[m
[32m+[m[32m  const parts = [];[m
[32m+[m[32m  for (const part of order) {[m
[32m+[m[32m    switch (part) {[m
[32m+[m[32m      case 'special': {[m
[32m+[m [32mconst isInf = /Inf/.test(special);[m
[32m+[m [32mparts.push(isInf ? explainInf(params) : explainOne(params));[m
[32m+[m [32mbreak;[m
[32m+[m[32m      }[m
[32m+[m[32m      case 'maxMin':[m
[32m+[m [32mparts.push(explainMaxMin(params));[m
[32m+[m [32mbreak;[m
[32m+[m[32m      case 'num':[m
[32m+[m [32mparts.push(explainNormalizedNum(params));[m
[32m+[m [32mbreak;[m
[32m+[m[32m      default:[m
[32m+[m [32massert(!part, `unknown part type '${part}'`);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return `[m
[32m+[m[32m    For a ${n}-bit IEEE float having ${k} exponent bits, the number of[m
[32m+[m[32m    mantissa bits will be .$(${n} - 1 - ${k}) == ${n - 1 - k}$ after[m
[32m+[m[32m    accounting for the sign bit.  The bias will be .$2^{(${k} - 1)} - 1[m
[32m+[m[32m    == ${2**(k-1)-1}$.[m
[32m+[m[41m    [m
[32m+[m[32m    ${ol(parts, 4)}[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainInf(params) {[m
[32m+[m[32m  const { n, k, specialValue, } = params;[m
[32m+[m[32m  const info = decodeFloatValue(n, k, specialValue);[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    For ${info.valueFormula}, the sign bit must be .~${info.signBit}~,[m
[32m+[m[32m    the exponent field must be all one's and the mantissa field[m
[32m+[m[32m    must be all zeros.  This results in .~${info.floatBits}~,[m
[32m+[m[32m    i.e. .~${info.bits}~ which is .~${info.hex}~.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainOne(params) {[m
[32m+[m[32m  const { n, k, specialValue, } = params;[m
[32m+[m[32m  const info = decodeFloatValue(n, k, specialValue);[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    The value ${info.valueFormula} is ${info.floatFormula} which can[m
[32m+[m[32m    be represented as a normalized float.  Hence the sign bit must be[m
[32m+[m[32m    .~${info.signBit}~, the exponent value must be .~${info.exp}~ with[m
[32m+[m[32m    exponent field set to .$${info.exp} + ${info.bias} == ${info.expField}$[m
[32m+[m[32m    and the mantissa will be .~${info.mantissa}~.  This corresponds to[m[41m [m
[32m+[m[32m    .~${info.floatBits}~ which regroups to .~${info.bits}~ which is[m[41m [m
[32m+[m[32m    .~${info.hex}~.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainMaxMin(params) {[m
[32m+[m[32m  const { n, k, maxMin, maxMinValue } = params;[m
[32m+[m[32m  const info = decodeFloatValue(n, k, maxMinValue);[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    The ${DESCR[maxMin]} will have a sign bit set to .~${info.signBit}~,[m
[32m+[m[32m    an exponent field set to one less than the all one's value and[m
[32m+[m[32m    a mantissa of all one's.  This will correspond to .~${info.floatBits}~.[m
[32m+[m[32m    So the exponent will be ${info.expFormula}, the value of the mantissa[m
[32m+[m[32m    field will be ${info.mantissaFormula}.  Since the number is normalized,[m
[32m+[m[32m    its value will be ${info.floatFormula}.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainNormalizedNum(params) {[m
[32m+[m[32m  const { n, k, numValue, } = params;[m
[32m+[m[32m  const info = decodeFloatValue(n, k, numValue);[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    .~${info.hex}~ is .~${info.bits}~.  Regrouping as per the floating[m
[32m+[m[32m    point format of 1 sign bit, ${k} exponent bits and[m[41m [m
[32m+[m[32m    ${info.m} mantissa bits, we have .~${info.floatBits}~.[m
[32m+[m[32m    So the sign is .~'${info.signStr}'~.[m[41m  [m
[32m+[m[32m    The exponent field value is not all one's or[m
[32m+[m[32m    all zero's which means that the number is normalized.  The[m
[32m+[m[32m    exponent field value of .~${info.expField}~ results in an exponent[m
[32m+[m[32m    value of ${info.expFormula}.[m[41m  [m
[32m+[m[32m    The mantissa field value is .~${info.mantissaField}~[m[41m [m
[32m+[m[32m    representing a mantissa of ${info.mantissaFormula}.[m[41m  [m
[32m+[m[32m    Hence the value represented is ${info.floatFormula}.[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mfunction notableFloatValues(n, k) {[m
[32m+[m[32m  const m = n - k - 1;[m
[32m+[m[32m  const bias = 2**(k - 1) - 1;[m
[32m+[m[32m  const neg = (1 << (n - 1));[m
[32m+[m[32m  const plusInf = (2**k - 1) << m;[m
[32m+[m[32m  const minusInf = neg + ((2**k - 1) << m);[m
[32m+[m[32m  const plusOne = (0 + bias) << m;[m
[32m+[m[32m  const minusOne = neg + ((0 + bias) << m);[m
[32m+[m[32m  const max = ((2**k - 2) << m) + ((1 << m) - 1);[m
[32m+[m[32m  const min = neg + ((2**k - 2) << m) + ((1 << m) - 1);[m
[32m+[m[32m  return { plusInf, minusInf, plusOne, minusOne, max, min, };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction randNormalizedFloatValue(n, k) {[m
[32m+[m[32m  const m = n - k - 1;[m
[32m+[m[32m  const bias = 2**(k - 1) - 1;[m
[32m+[m[32m  const neg = (1 << (n - 1));[m
[32m+[m[32m  const expField = Rand.int(-2, 3) + bias;[m
[32m+[m[32m  const mantissa = Rand.choice([2, 3]) << (m - 2);[m
[32m+[m[32m  return neg + (expField << m) + mantissa;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction decodeFloatValue(n, k, value) {[m
[32m+[m[32m  const m = n - k - 1;[m
[32m+[m[32m  const bias = 2**(k - 1) - 1;[m
[32m+[m[32m  const biasFormula = `.$2^{(${k} - 1)} - 1$`;[m
[32m+[m[32m  const signBit = ( (value & (1 << (n - 1))) === 0) ? 0 : 1;[m
[32m+[m[32m  const signStr = (signBit === 0) ? '+' : '-';[m
[32m+[m[32m  const sign = (signBit === 0) ? 1 : -1;[m
[32m+[m[32m  const expField = (value >> m) & ((1 << k) - 1);[m
[32m+[m[32m  const expBits = expField.toString(2).padStart(k, '0');[m
[32m+[m[32m  const mantissaField = value & ((1 << m) - 1);[m
[32m+[m[32m  const mantissaBits = mantissaField.toString(2).padStart(m, '0');[m
[32m+[m[32m  const mantissa = mantissaField / (2**m);[m
[32m+[m[32m  const mantissaFormula = `.$${mantissaField}/2^{${m}} == ${mantissa}$`;[m
[32m+[m[32m  const isDenormalized = expField === 0;[m
[32m+[m[32m  const exp = (isDenormalized) ? 1 - bias : expField - bias;[m
[32m+[m[32m  const expFormula = `.$(${expField} - ${bias}) == ${exp}$`;[m
[32m+[m[32m  const hex = '0x' + value.toString(16).padStart(n/4, '0');[m
[32m+[m[32m  const bits = bits4(n, value);[m
[32m+[m[32m  const floatBits = `${signBit} ${expBits} ${mantissaBits}`;[m
[32m+[m[32m  const isExceptional = expField === ((1 << k) - 1);[m
[32m+[m[32m  const isNaN = (isExceptional && mantissaField > 0);[m
[32m+[m[32m  const isInfinity = (isExceptional && mantissaField === 0);[m
[32m+[m[32m  const implicitBit = (isDenormalized) ? 0 : 1;[m
[32m+[m[32m  const floatValue =[m
[32m+[m [32misExceptional ? ( isNaN ? 'NaN' : `${signStr}Infinity` )[m
[32m+[m[32m        : isDenormalized ? String(sign* 2**(1-bias) * (mantissaField/2**m))[m
[32m+[m[32m        : String(sign * 2**(exp) * (1 + mantissaField/2**m));[m
[32m+[m[32m  const floatFormula = `[m
[32m+[m[32m    .$-1^${signBit} \\times 2^{${exp}} \\times (${implicitBit} + ${mantissa})[m
[32m+[m[32m    == ${floatValue}$[m
[32m+[m[32m  `.trim();[m
[32m+[m[32m  const valueFormula = isInfinity ? `.$${signStr}\\infty$` : `.~${floatValue}~`;[m
[32m+[m[32m  return { n, k, m, bias, signBit, signStr, sign,[m
[32m+[m [32m   expField, expBits, exp, expFormula,[m
[32m+[m [32m   mantissaField, mantissaBits, mantissa, mantissaFormula,[m
[32m+[m [32m   bits, floatBits, hex, implicitBit,[m
[32m+[m [32m   isDenormalized, isExceptional, isNaN, isInfinity,[m
[32m+[m [32m   floatFormula, floatValue, valueFormula, };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { n: () => Rand.int(9, 12),[m
[32m+[m[32m    k: () => Rand.int(3, 6),    //n == 9, k == 5 leaves 3 mantissa bits[m
[32m+[m[32m    special: () => Rand.choice(['plusInf', 'minusInf', 'plusOne', 'minusOne',]),[m
[32m+[m[32m    maxMin: () => Rand.choice(['max', 'min']),[m
[32m+[m[32m  },[m
[32m+[m[32m  { numValue: ({n, k}) => randNormalizedFloatValue(n, k),[m
[32m+[m[32m    order: () => Rand.permutation([ 'special', 'maxMin', 'num' ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    specialValue: ({n, k, special}) => notableFloatValues(n, k)[special],[m
[32m+[m[32m    maxMinValue: ({n, k, maxMin}) => notableFloatValues(n, k)[maxMin],[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new FloatValues().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/int-values.js b/exercises/questions/src/midterm/int-values.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6ab0465[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/int-values.js[m
[36m@@ -0,0 +1,165 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-16 17:50:39 umrigar>';[m
[32m+[m
[32m+[m[32m//this code is hacky, confusing Dec and Bin.[m
[32m+[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mconst { ol, bits4, } = require('./util');[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass IntValues extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = IntValues;[m
[32m+[m[32mObject.assign(IntValues, {[m
[32m+[m[32m  id: 'intValues',[m
[32m+[m[32m  title: '2\' Complement Integer Values',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 20;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { n, extrema, numHex, rand1Hex, rand2Hex, } = params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    Given a ${n}-bit 2's complement integer:[m
[32m+[m
[32m+[m[32m      # What is the ${extrema} decimal value which can be represented?[m
[32m+[m
[32m+[m[32m      # What will be the 2's complement decimal result of adding the[m
[32m+[m[32m        the integers represented by the bit patterns corresponding to[m
[32m+[m[32m        .~${rand1Hex}~ and .~${rand2Hex}~?  Clearly indicate whether[m
[32m+[m[32m        the result represents an overflow.[m
[32m+[m
[32m+[m[32m      # What decimal number is represented by the 2's complement[m
[32m+[m[32m        number having bit pattern .~${numHex}~?[m
[32m+[m
[32m+[m[32m     Remember to justify all answers. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const { n, numDec, numHex, rand1Dec, rand1Hex, rand2Dec, rand2Hex } = params;[m
[32m+[m[32m  const text = '';[m
[32m+[m[32m  const parts = [];[m
[32m+[m[32m  parts.push(explainExtrema(params));[m
[32m+[m[32m  parts.push(explainAdd(params));[m
[32m+[m[32m  parts.push(explainNum(params));[m
[32m+[m[32m  //must use 4 (not 6) in ol(parts, 4), probably a bug in umt-parse[m
[32m+[m[32m  return `[m
[32m+[m[32m    The answers follow:[m
[32m+[m
[32m+[m[32m    ${ol(parts, 4)}[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainExtrema(params) {[m
[32m+[m[32m  const { n, extrema } = params;[m
[32m+[m[32m  if (extrema === 'largest') {[m
[32m+[m[32m    return `[m
[32m+[m[32m      For a .$n$-bit 2's complement integer, the largest value is[m
[32m+[m[32m      .$2^{(n-1)} - 1$.  Hence with .$n = ${n}$, the largest value[m
[32m+[m[32m      is .$2^{(${n}-1)} - 1 = ${2**(n-1) - 1}.$[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    return `[m
[32m+[m[32m      For a .$n$-bit 2's complement integer, the smallest value is[m
[32m+[m[32m      .$-2^{(n-1)}$.  Hence with .$n = ${n}$, the smallest value[m
[32m+[m[32m      is .$-2^{(${n}-1)} = ${-(2**(n-1))}$.[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction binaryToDecimal(n, binary) {[m
[32m+[m[32m  const msb = (binary & (1 << (n - 1))) !== 0;[m
[32m+[m[32m  const rest = (binary & ~(1 << (n - 1)));[m
[32m+[m[32m  return 2**(n-1)*-msb + rest;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction binaryFormula(n, binary) {[m
[32m+[m[32m  const msb = (binary & (1 << (n - 1))) !== 0 ? 1 : 0;[m
[32m+[m[32m  const rest = (binary & ~(1 << (n - 1)));[m
[32m+[m[32m  const dec = 2**(n-1)*-msb + rest;[m
[32m+[m[32m  return `.$${msb}\\times -2^{(${n}-1)} + ${rest} = ${dec}$`;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainAdd(params) {[m
[32m+[m[32m  const { n, rand1Dec, rand1Hex, rand2Dec, rand2Hex, overflowAdd, addHex, } =[m
[32m+[m[32m    params;[m
[32m+[m[32m  assert(rand1Dec > 0);[m
[32m+[m[32m  assert(rand2Dec > 0);[m
[32m+[m[32m  assert(overflowAdd > 2**(n - 1) - 1);[m
[32m+[m[32m  const [ rand1Bits, rand2Bits, addBits ] =[m
[32m+[m [32m[ bits4(n, rand1Dec), bits4(n, rand2Dec), bits4(n, overflowAdd) ];[m
[32m+[m[32m  const result = binaryFormula(n, overflowAdd);[m
[32m+[m[32m  return `[m
[32m+[m[32m    .~${rand1Hex}~ is .~${rand1Bits}~ and .~${rand2Hex}~ is .~${rand2Bits}~.[m
[32m+[m[32m    Since the sign bits for both are .~0~, both are positive.  Adding[m
[32m+[m[32m    them together results in .~${addBits}~ with the sign bit 1;[m
[32m+[m[32m    so the result is negative and *represents an overflow*.  The[m
[32m+[m[32m    result is .~${addHex}~ which represents ${result} decimal.[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainNum(params) {[m
[32m+[m[32m  const { n, numDec, numHex, } = params;[m
[32m+[m[32m  assert(numDec < 0);[m
[32m+[m[32m  const numBin = Number.parseInt(numHex.replace('0x', ''), 16);[m
[32m+[m[32m  const numBits = bits4(n, numBin);[m
[32m+[m[32m  return `[m
[32m+[m[32m    .~${numHex}~ is .~${numBits}~ in binary.  Since the MSB is 1,[m
[32m+[m[32m    the decimal value is ${binaryFormula(n, numBin)}.[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mfunction hex(n, dec) {[m
[32m+[m[32m  if (dec >= 0) {[m
[32m+[m[32m    return '0x' + dec.toString(16).padStart(n/4, '0');[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    const val = 2**(n - 1) + dec;[m
[32m+[m[32m    return '0x' + (2**(n - 1) + val).toString(16).padStart(n/4, '0');[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { n: () => Rand.int(9, 12),[m
[32m+[m[32m    extrema: () => Rand.choice(['largest', 'smallest']),[m
[32m+[m[32m  },[m
[32m+[m[32m  { numDec: ({n}) => - Rand.int(40, 2**(n - 1)),[m
[32m+[m[32m    rand1Dec: ({n}) => Rand.int(40, 2**(n - 1)),[m
[32m+[m[32m    overflowAdd: ({n}) => 2**(n - 1) + Rand.int(2, 10),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    rand2Dec: ({rand1Dec, overflowAdd}) => overflowAdd - rand1Dec,[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    numHex: ({n, numDec}) => hex(n, numDec),[m
[32m+[m[32m    rand1Hex: ({n, rand1Dec}) => hex(n, rand1Dec),[m
[32m+[m[32m    rand2Hex: ({n, rand2Dec}) => hex(n, rand2Dec),[m
[32m+[m[32m    addHex: ({n, overflowAdd}) => hex(n, overflowAdd),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new IntValues().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/meta.js b/exercises/questions/src/midterm/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3a46fb5[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/meta.js[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  id: 'midterm',[m
[32m+[m[32m  title: 'Midterm',[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    require('./int-values'),[m
[32m+[m[32m    require('./float-values'),[m
[32m+[m[32m    require('./dot-product'),[m
[32m+[m[32m    require('./vector-operate'),[m
[32m+[m[32m    require('./poly-eval'),[m
[32m+[m[32m    require('./alt-sum'),[m
[32m+[m[32m    require('./validity'),[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
[32m+[m
[1mdiff --git a/exercises/questions/src/midterm/poly-eval.js b/exercises/questions/src/midterm/poly-eval.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0936a0a[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/poly-eval.js[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-16 16:28:53 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass PolyEval extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = PolyEval;[m
[32m+[m[32mObject.assign(PolyEval, {[m
[32m+[m[32m  id: 'polyEval',[m
[32m+[m[32m  title: 'Polynomial Evaluation',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 25;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    A polynomial of degree .$n$ is defined by .$n +1$ coefficients[m[41m [m
[32m+[m[32m    .$c_0, c_1, \\ldots, c_n$.  The value of the polynomial[m
[32m+[m[32m    at point .$x$ is given by[m
[32m+[m
[32m+[m[32m    .$P(x) = c_0\\times x^0 + c_1\\times x^1 + c_2 \\times x^2 +[m
[32m+[m[32m    \\ldots + c_{n-1} \\times x^{n - 1} + c_n\\times x^n$.[m
[32m+[m
[32m+[m
[32m+[m[32m    You are required to write a function .~eval_product()~ which[m
[32m+[m[32m    computes the .~double~ result of evaluating a polynomial[m
[32m+[m[32m    having .~double~ coefficients at some point.[m
[32m+[m[32m    Your answer should include:[m
[32m+[m
[32m+[m[32m      + The header for .~eval_poly()~ specifying the parameters and[m
[32m+[m[32m        return value.[m
[32m+[m
[32m+[m[32m      + The body for .~eval_poly()~.[m[41m [m
[32m+[m
[32m+[m[32m    Your code may ignore any overflows. You may use .~pow()~[m
[32m+[m[32m    from the math library, though there is a solution which[m
[32m+[m[32m    does not use .~pow()~ is easily possible. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  let text = `[m
[32m+[m
[32m+[m[32m    We will represent the coefficients as an array.  We will[m
[32m+[m[32m    pass the degree of the polynomial as a parameter and[m
[32m+[m[32m    the number of elements in the array will be 1 greater[m
[32m+[m[32m    than the degree.[m
[32m+[m
[32m+[m[32m    Since the coefficients and result type are specified to[m
[32m+[m[32m    be .~double~, it makes sense for the point at which[m
[32m+[m[32m    the polynomial is being evaluated also a .~double~.[m[41m    [m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    /** Return result of evaluating degree polynomial[m[41m [m
[32m+[m[32m     *  specified by coeffs[degree + 1] at x where coeffs[i][m[41m [m
[32m+[m[32m     *  contains coefficient c_i.[m
[32m+[m[32m     */[m
[32m+[m[32m    double eval_poly(int degree, const double coeffs[], double x) {[m
[32m+[m[32m      double pow = 1;[m
[32m+[m[32m      double sum = 0;[m
[32m+[m[32m      for (int i = 0; i < degree + 1; i++) {[m
[32m+[m[32m        sum += coeffs[i]*pow;[m
[32m+[m[32m        pow *= x;[m
[32m+[m[32m      }[m
[32m+[m[32m      return sum;[m
[32m+[m[32m    }[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    It will be the responsibility of the caller to set up the[m
[32m+[m[32m    coefficients array .~coeffs[]~.[m
[32m+[m
[32m+[m[32m    [The .~eval_product()~ in the question should have been[m
[32m+[m[32m    .~eval_poly()~.  This was announced to 220B after a 220A student[m
[32m+[m[32m    alerted me to the problem.  It was not announced to 220A.][m
[32m+[m[32m  `;[m
[32m+[m[41m  [m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new PolyEval().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/util.js b/exercises/questions/src/midterm/util.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5631125[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/util.js[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mfunction bits4(n, value, sep=' ') {[m
[32m+[m[32m  const bitsStr = value.toString(2).padStart(n, '0');[m
[32m+[m[32m  return bitsStr.replace(/./g, (bit, offset) => {[m
[32m+[m[32m    const bitIndex = n - 1 - offset;[m
[32m+[m[32m    const extra = (bitIndex !== 0 && bitIndex % 4 === 0) ? sep : '';[m
[32m+[m[32m    return bit + extra;[m
[32m+[m[32m  });[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction ol(items, liIndent) {[m
[32m+[m[32m  const lineIndent = line => (line.match(/\s+/)?.[0] ?? '').length;[m
[32m+[m[32m  const li = (item => {[m
[32m+[m[32m    const lineIndents = item.[m
[32m+[m[32m      replace(/^\s*\n/, ''). //remove initial empty lines[m
[32m+[m[32m      split('\n').[m
[32m+[m[32m      map(line => ({line, indent: lineIndent(line)}));[m
[32m+[m[32m    const indent0 = lineIndents[0].indent;[m
[32m+[m[32m    return lineIndents.[m
[32m+[m[32m      map(({line, indent}) => {[m
[32m+[m [32mconst space = ' '.repeat(indent - indent0 + liIndent);[m
[32m+[m [32mreturn line.replace(/^\s*/, space);[m
[32m+[m[32m      }).[m
[32m+[m[32m      join('\n').[m
[32m+[m[32m      replace(/  (\S)/, '# $1');[m
[32m+[m[32m  });[m
[32m+[m[32m  return '\n' + items.map(item => li(item)).join('\n\n') + '\n';[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = { ol, bits4, };[m
[1mdiff --git a/exercises/questions/src/midterm/validity.js b/exercises/questions/src/midterm/validity.js[m
[1mnew file mode 100644[m
[1mindex 0000000..01e3f43[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/validity.js[m
[36m@@ -0,0 +1,227 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst { ol } = require('./util');[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-16 17:35:13 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, emacsTimestampToMillis} = require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Validity extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Validity[m
[32m+[m[32mObject.assign(Validity, {[m
[32m+[m[32m  id: 'validity',[m
[32m+[m[32m  title: 'Discuss Validity',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 25;[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const ids = params.ids;[m
[32m+[m[32m  const questions = ol(ids.map(id => INFOS[id].question), 8);[m
[32m+[m[32m  return `[m
[32m+[m[32m    Discuss the validity of the following statements.  What is more[m
[32m+[m[32m    important than whether you ultimately classify the statement as *true*[m
[32m+[m[32m    or *false* is your justification for arriving at your[m
[32m+[m[32m    conclusion. "${POINTS}-points"[m
[32m+[m
[32m+[m[32m    ${questions}[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const ids = params.ids;[m
[32m+[m[32m  const answers = ol(ids.map(id => INFOS[id].answer), 8);[m
[32m+[m[32m  return `[m
[32m+[m[32m    The answers follow:[m
[32m+[m[32m    ${answers}[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mconst INFOS = {[m
[32m+[m[32m  uniqueNaN: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      The IEEE floating point format specifies multiple encodings[m
[32m+[m[32m      for .~NaN~.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      The IEEE encoding for a .~NaN~ specifies an exponent field of[m
[32m+[m[32m      all one's and the mantissa as non-zero.  Hence any non-zero[m
[32m+[m[32m      mantissa and any sign specifies a .~NaN~ as long as the exponent[m
[32m+[m[32m      field is all one's.  Specifically, if there are .$m$ mantissa[m
[32m+[m[32m      bits, then there .$2^{m+1} - 1$ encodings for .~NaN~.  Hence[m
[32m+[m[32m      the statement is *true*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  uniqueZero: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      The IEEE floating point format specifies a unique encoding[m
[32m+[m[32m      for zero.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      The IEEE floating point format specifies zero using an exponent[m
[32m+[m[32m      and mantissa of all zeros but since the sign can be either .~0~[m[41m [m
[32m+[m[32m      or .~1~, this allows a .~+0~ and .~-0~.  Hence there are two[m
[32m+[m[32m      representations for zero and the statement is *false*.[m[41m      [m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  negOverflow: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      Given that .~i~ is declared to be an .~int~, negating it[m
[32m+[m[32m      using the expression .~- i~ can result in an overflow.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      Given a .$n$-bit 2's complement integer, the most negative value[m
[32m+[m[32m      is .$-2^{n-1}$ but the most positive value is .$2^{n-1}-1$.  So[m
[32m+[m[32m      there is no positive value corresponding to .$- -2^{n-1}$.[m
[32m+[m[32m      Since most current C implementations use 2's complement to[m
[32m+[m[32m      represent signed integers, negating the most negative value will[m
[32m+[m[32m      result in an overflow.  Hence the statement is *true*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  eqNaN: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      If .~x~ is declared as some C numeric type, the expression[m
[32m+[m[32m      .~x == x~ must always evaluate to 1.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      This will not be the case when .~x~ is a .~NaN~ since .~NaN~[m
[32m+[m[32m      does not compare equal to any value, including itself.  Hence[m
[32m+[m[32m      the statement is *false*.[m
[32m+[m
[32m+[m[32m      [The formatting of the question in the PDF was problematic as[m
[32m+[m[32m      the .~==~ may not show up.  The complete version was sent as a[m
[32m+[m[32m      chat message to both 220A and 220B during the exam.][m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  strlenUtf8: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      The .~strlen()~ function can be used to get the length of[m
[32m+[m[32m      a UTF-8 string.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      The .~strlen()~ function return the number of bytes until the[m
[32m+[m[32m      first .~'\0'~ byte in its argument. UTF-8 is a multi-byte[m
[32m+[m[32m      encoding, hence number of bytes may not match the number of[m
[32m+[m[32m      characters.  If ."length of a UTF-8 string" means number of[m
[32m+[m[32m      characters, .~strlen()~ will not work in general and hence the[m
[32m+[m[32m      statement is *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  arrayMap: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m     The function[m
[32m+[m
[32m+[m[32m     ~~~[m
[32m+[m[32m     int get_bit(long val, int i) {[m
[32m+[m[32m       return (val & (1 << i)) != 0;[m
[32m+[m[32m     }[m
[32m+[m[32m     ~~~[m
[32m+[m
[32m+[m[32m     returns the .~i~'th bit in .~val~ with .~i == 0~ specifying[m[41m [m
[32m+[m[32m     the LSB.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      The sub-expression .~(1 << i)~ will be evaluated as an .~int~[m
[32m+[m[32m      which may not suffice as a mask for a .~long~ (the correct[m
[32m+[m[32m      sub-expression would have been .~(1L << i)~).  Hence the statement[m
[32m+[m[32m      is *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  vmSize: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      The virtual memory size seen by a process cannot be greater[m
[32m+[m[32m      than the physical memory size.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      There is no relationship between the size of virtual memory[m
[32m+[m[32m      and the size of physical memory (though usually, the former[m
[32m+[m[32m      is greater than the latter).  Hence the statement is *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  processCrash: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      If a user process crashes on a modern general purpose computer,[m
[32m+[m[32m      then there is a good chance that the computer too will crash.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      The crash of a user process should not affect other[m
[32m+[m[32m      processes and the statement is *false*.`,[m
[32m+[m[32m  },[m
[32m+[m[32m  make: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      If .~module.o~ is built from .~module.c~, then \`make\`[m
[32m+[m[32m      will always rebuild .~module.o~ whenever .~module.h~[m
[32m+[m[32m      changes.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      This will not happen unless .~module.o~ has been declared[m
[32m+[m[32m      to be dependent on .~module.h~; hence in general the statement[m
[32m+[m[32m      is *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  addrSpace: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      A 24-bit memory address will allow accessing up to 16 MiB[m
[32m+[m[32m      of memory.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      Assuming that addresses address bytes, 24-bits will allow[m
[32m+[m[32m      addressing .$2^{24} == 16$MiB of memory and the statement[m
[32m+[m[32m      will be  *true*.  OTOH, if addresses address a quantity[m
[32m+[m[32m      other than a byte, then the statement will be *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  arrayPtr: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      The use of an array name in any C expression (not a declaration)[m
[32m+[m[32m      is transformed into a pointer to its first element.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      Given the program fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      int a[] = {1, 2, 3};[m
[32m+[m[32m      int nElements = sizeof(a)/sizeof(a[0]);[m
[32m+[m[32m      ~~~[m
[32m+[m
[32m+[m[32m      the statement is true for the second use of .~a~ in the second[m
[32m+[m[32m      line, but false for the first use of .~a~ in the second line.[m
[32m+[m[32m      Hence the statement is *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  ptrIntAdd: {[m
[32m+[m[32m    question: `[m
[32m+[m[32m      C does not allow adding an .~int~ to a pointer as such an expression[m
[32m+[m[32m      does not make any sense.[m
[32m+[m[32m    `,[m
[32m+[m[32m    answer: `[m
[32m+[m[32m      Adding an .~int~ to a pointer basically involves adding an[m
[32m+[m[32m      offset to a address.  This makes perfect sense and hence the[m
[32m+[m[32m      statement is *false*.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst N_QUESTIONS = 5; //cannot change since hardcoded assumption of 5[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { ids: () => Rand.choices(5, Object.keys(INFOS)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Validity().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/midterm/vector-operate.js b/exercises/questions/src/midterm/vector-operate.js[m
[1mnew file mode 100644[m
[1mindex 0000000..cd21ab6[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/midterm/vector-operate.js[m
[36m@@ -0,0 +1,101 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-16 16:32:31 umrigar>';[m
[32m+[m
[32m+[m[32mconst {Question, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass VectorOperate extends Question {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(question(this.params));[m
[32m+[m[32m    this.addAnswer(answer(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = VectorOperate;[m
[32m+[m[32mObject.assign(VectorOperate, {[m
[32m+[m[32m  id: 'vectorOperate',[m
[32m+[m[32m  title: 'Vector Operate',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst POINTS = 25;[m
[32m+[m
[32m+[m[32mfunction question(params) {[m
[32m+[m[32m  const { op, type } = params;[m
[32m+[m[32m  const info = INFOS[op];[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    The *${op}* .$U ${info.texOp} V$ of two vectors .$U$ containing[m
[32m+[m[32m    elements .$u_1, u_2, \\ldots, u_n$ and .$V$ containing elements[m
[32m+[m[32m    .$v_1, v_2, \\ldots v_n$ is defined to be a third vector .$Z$ with[m
[32m+[m[32m    elements .$z_1, z_2, \\ldots z_n$ such that .$z_i = u_i[m
[32m+[m[32m    ${info.texOp} v_i$ for .$1 \\le i \\le n$.[m
[32m+[m
[32m+[m[32m    You are required to write a function .~vector_${op}()~ which[m
[32m+[m[32m    computes the ${op} of two vectors containing elements of type[m
[32m+[m[32m    .~${type}~ .  Your answer should include:[m
[32m+[m
[32m+[m[32m      + The header for .~vector_${op}()~ specifying the parameters and[m
[32m+[m[32m        return value.[m
[32m+[m
[32m+[m[32m      + The body for .~vector_${op}()~.[m[41m  [m
[32m+[m
[32m+[m[32m    Your code may ignore any overflows. "${POINTS}-points"[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction answer(params) {[m
[32m+[m[32m  const { op, type } = params;[m
[32m+[m[32m  const info = INFOS[op];[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    Note that since vector ${op} is defined only for equal-sized vectors,[m
[32m+[m[32m    the function API should reflect that by allowing only a single[m
[32m+[m[32m    parameter to specify the number of elements.[m
[32m+[m
[32m+[m[32m    We will represent .$U$, .$V$ and .$Z$ by three arrays.  Since arrays[m
[32m+[m[32m    in C do not maintain their size, we will need an additional[m
[32m+[m[32m    parameter to specify their size.[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    void vector_${op}(int n, const ${type} u[], const ${type} v[],[m[41m [m
[32m+[m[32m                      ${type} z[])[m[41m [m
[32m+[m[32m    {[m
[32m+[m[32m      for (int i = 0; i < n; i++) {[m
[32m+[m[32m        z[i] = u[i] ${info.cOp} v[i];[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    It will be the responsibility of the caller to set up the[m
[32m+[m[32m    input arrays .~u[]~ and .~v[]~ as well as the output array[m
[32m+[m[32m    .~z[]~.[m[41m    [m
[32m+[m[32m  `;[m
[32m+[m[41m  [m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst INFOS = {[m
[32m+[m[32m  'sum': { op: 'sum', texOp: '+', cOp: '+', },[m
[32m+[m[32m  'product': { op: 'product', texOp: '\\times', cOp: '*', },[m
[32m+[m[32m  'difference': { op: 'difference', texOp: '-', cOp: '-', },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    op: () => Rand.choice(['sum', 'product', 'difference', ]),[m
[32m+[m[32m    type: () => Rand.choice(['int', 'long', 'double']),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new VectorOperate().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/arith.js b/exercises/questions/src/programming/arith.js[m
[1mnew file mode 100644[m
[1mindex 0000000..eb8d03d[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/arith.js[m
[36m@@ -0,0 +1,121 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-02 16:01:36 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Arith extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(REM_CONSTRAINT);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(choiceInfo => this.choice(choiceInfo));[m
[32m+[m[32m    this.noneOfTheAbove();[m
[32m+[m[32m    this.freeze();[m[41m [m
[32m+[m[32m    this.addExplain(umtParse(BACKGROUND));[m
[32m+[m[32m    this.addExplain(CHOICES[0].explain);[m
[32m+[m[32m    for (const i of this.choiceOrder()) {[m
[32m+[m[32m      if (i === 0 || i === this.nChoices() - 1) {[m
[32m+[m [32mcontinue; //skip answer and noneOfTheAbove[m
[32m+[m[32m      }[m
[32m+[m[32m      this.addExplain(CHOICES[i].explain);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Arith;[m
[32m+[m[32mObject.assign(Arith, {[m
[32m+[m[32m  id: 'arith',[m
[32m+[m[32m  title: 'Arithmetic Operators',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What is the value of .~#{a} + #{b} * #{c} % #{d}~?.[m
[32m+[m[32m  *Hint*: In modern C, the sign of the result of \`%\`[m
[32m+[m[32m  is that of the dividend.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = {[m
[32m+[m[32m  a: () => Rand.int(1),[m
[32m+[m[32m  b: () => Rand.int(2),[m
[32m+[m[32m  c: () => Rand.int(-10, 10),[m
[32m+[m[32m  d: () => Rand.int(-5, 5)[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst REM_CONSTRAINT =[m[41m [m
[32m+[m[32m  ({c, d}) => {[m
[32m+[m[32m    return ([m
[32m+[m[32m      d !== 0 &&[m
[32m+[m[32m      c%d !== 0 &&[m
[32m+[m[32m      Math.abs(d) !== 2 &&[m
[32m+[m[32m      Math.abs(c) !== Math.abs(d) &&[m[41m   [m
[32m+[m[32m      ((c >= 0) != (d >= 0)) &&[m
[32m+[m[32m      Math.abs(c) > Math.abs(d)[m
[32m+[m[32m    );[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  { choiceFn: ({a, b, c, d}) => a + b*c%d,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      (#{_0}) is correct since .~(#{b} * #{c}) % #{d}~ has the sign[m[41m [m
[32m+[m[32m      of the dividend and has value .~#{(b * c) % d}~.[m[41m  [m
[32m+[m[32m      So the result is .~#{a} + #{(b * c) % d}~ which is[m[41m [m
[32m+[m[32m      #{a + b*c%d}, the result.[m
[32m+[m[32m    `[m
[32m+[m[32m  },[m
[32m+[m[32m  { choiceFn: ({a, b, c, d}) => a + b*(c%d),[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      (#{_1}) is incorrect since it uses incorrect right associativity for[m
[32m+[m[32m      .~*~ and .~%~, effectively evaluating[m[41m  [m
[32m+[m[32m      .~#{a} + #{b}*(#{c}%#{d})~ to .~#{a + b*(c%d)}~.[m
[32m+[m[32m    `[m
[32m+[m[32m  },[m
[32m+[m[32m  { choiceFn: ({a, b, c, d}) => a + b*(-c%d),[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      (#{_2}) is incorrect since it uses both incorrect right associativity for[m
[32m+[m[32m      .~*~ and .~%~, as well as the incorrect sign for the result[m
[32m+[m[32m      of .~%~,  effectively evaluating .~#{a} + #{b}*(#{-c}%#{d})~[m[41m [m
[32m+[m[32m      to .~#{a + b*(-c%d)}~.[m
[32m+[m[32m    `[m
[32m+[m[32m  },[m
[32m+[m[32m  { choiceFn: ({a, b, c, d}) => a + b*(-c)%d,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      (#{_3}) is incorrect since it uses the incorrect sign[m[41m [m
[32m+[m[32m      for the result of .~%~,  effectively[m[41m [m
[32m+[m[32m      evaluating .~#{a} + #{b}*(#{-c})%#{d}~ to .~#{a + b*(-c)%d}~.[m
[32m+[m[32m    `,[m
[32m+[m[32m  }[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m  This question deals with two aspects of C:[m
[32m+[m
[32m+[m[32m    + *Associativity and precedence of arithmetic operators*.  The[m
[32m+[m[32m      ."multiplicative" operators .~*~, .~/~ and .~%~ are left-associative[m
[32m+[m[32m      and have higher precedence than the ."additive" operators .~+~,[m[41m [m
[32m+[m[32m      .~-~ (which too are left associative).  Hence[m[41m [m
[32m+[m[32m      .~#{a} + #{b} * #{c} % #{d}~ parenthesizes as[m[41m [m
[32m+[m[32m      .~#{a} + ((#{b} * #{c}) % #{d})~.[m
[32m+[m
[32m+[m[32m    + The .~%~ operator which computes the remainder.  It is important to[m
[32m+[m[32m      to realize that in modern C the result always has the sign of[m
[32m+[m[32m      the dividend; hence .~(#{c} % #{d})~ evaluates to .~#{c%d}~.[m
[32m+[m
[32m+[m[32m      Note that the operation of the .~%~ operation differs between[m
[32m+[m[32m      different programming languages.  Differences arise when an[m
[32m+[m[32m      operand is negative; also, some languages use it for "modulo"[m
[32m+[m[32m      rather than remainder.  For details, see[m[41m  [m
[32m+[m[32m      .<https://en.wikipedia.org/wiki/Modulo_operation> "this[m
[32m+[m[32m      Wikipedia article".[m[41m      [m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Arith().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/array-pointer.js b/exercises/questions/src/programming/array-pointer.js[m
[1mnew file mode 100644[m
[1mindex 0000000..734453b[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/array-pointer.js[m
[36m@@ -0,0 +1,119 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-10-22 21:48:21 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass ArrayPointer extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({choiceIndexes, values}) =>[m
[32m+[m         [32m  `.~${values[choiceIndexes[i]]}~.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(explain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ArrayPointer;[m
[32m+[m[32mObject.assign(ArrayPointer, {[m
[32m+[m[32m  id: 'arrayPointer',[m
[32m+[m[32m  title: 'Arrays and Pointers',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What will be the value of \`result\` after executing the[m
[32m+[m[32m  following code fragment:[m
[32m+[m
[32m+[m[32m   ~~~[m
[32m+[m[32m   const int values[] = { //#{len} elements[m
[32m+[m[32m     #{valuesStr},[m
[32m+[m[32m   };[m
[32m+[m[32m   int v = values[#{mid}];[m
[32m+[m[32m   const int *p;[m
[32m+[m[32m   for (p = &values[#{index}]; *p #{relOp} v; p#{postOp}) {[m
[32m+[m[32m   }[m
[32m+[m[32m   int result = p[1];[m
[32m+[m[32m   ~~~[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m
[32m+[m[32mfunction explain({values, relOp, index, mid, postOp, resultIndex}) {[m
[32m+[m[32m  const change = (postOp === '++') ? 'increment' : 'decrement';[m
[32m+[m[32m  return `[m
[32m+[m[32m    The value of .~v~ is initialized to .~values[${mid}]~ which is[m
[32m+[m[32m    \`${values[mid]}\`.  \`p\` starts out pointing to[m
[32m+[m[32m    .~values[${index}]~ and will ${change} until the condition[m[41m [m
[32m+[m[32m    .~*p ${relOp} v~ is false.  Hence the loop will quit when \`p\` points[m
[32m+[m[32m    to .~values[${resultIndex - 1}]~, since the condition[m
[32m+[m[32m    .~values[${resultIndex - 1}] ${relOp} v~ is false.  However, the[m
[32m+[m[32m    \`result\` is set to the next element, i.e.[m
[32m+[m[32m    .~values[${resultIndex}]~ which is \`${values[resultIndex]}\`.[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { len: () => Rand.choice([7, 8, 9]),[m
[32m+[m[32m    endian: () => Rand.choice([1, -1]),[m
[32m+[m[32m    //By using <, >, guaranteed to terminate when hit mid v element[m
[32m+[m[32m    relOp: () => Rand.choice([ '<', '>' ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { values:[m
[32m+[m[32m    ({len}) =>[m
[32m+[m[32m      Rand.permutation(Array.from({length: len}).map((_, i) => 3*i + 1)),[m
[32m+[m[32m    index:[m
[32m+[m[32m      ({len, endian}) => (endian < 0) ? len - Rand.int(2, 4) : Rand.int(0, 3),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    postOp: ({endian}) => (endian < 0) ? '--' : '++',[m
[32m+[m[32m    valuesStr: ({values}) => values.join(', '),[m
[32m+[m[32m    mid: ({len}) => (len >> 1),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m[41m  [m
[32m+[m[32m    resultIndex: (params) => resultIndex(params),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    choiceIndexes: ({resultIndex, len}) => [[m
[32m+[m[32m      resultIndex,[m
[32m+[m[32m      (resultIndex + 1 < len) ? resultIndex + 1 : resultIndex - 3,[m
[32m+[m[32m      (resultIndex + 2 < len) ? resultIndex + 2 : resultIndex - 4,[m
[32m+[m[32m      (resultIndex - 1 >= 0) ? resultIndex - 1 : resultIndex + 3,[m
[32m+[m[32m      (resultIndex - 2 >= 0) ? resultIndex - 2 : resultIndex + 4,[m
[32m+[m[32m    ],[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction resultIndex({values, endian, relOp, index, mid}) {[m
[32m+[m[32m  const relFn = getRelFn(relOp);[m
[32m+[m[32m  const v = values[mid];[m
[32m+[m[32m  let i = index;[m
[32m+[m[32m  while (relFn(values[i], v)) {[m
[32m+[m[32m    i += endian;[m
[32m+[m[32m  }[m
[32m+[m[32m  return i + 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction getRelFn(relOp) {[m
[32m+[m[32m  switch (relOp) {[m
[32m+[m[32m  case '<': return (a, b) => a < b;[m
[32m+[m[32m  case '>': return (a, b) => a > b;[m
[32m+[m[32m  case '<=': return (a, b) => a <= b;[m
[32m+[m[32m  case '>=': return (a, b) => a >= b;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ArrayPointer().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/bit-sets.js b/exercises/questions/src/programming/bit-sets.js[m
[1mnew file mode 100644[m
[1mindex 0000000..f1d45e7[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/bit-sets.js[m
[36m@@ -0,0 +1,88 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-12 23:53:49 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass BitSets extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(c => this.choice(params => `\`${hex(c(params))}\``));[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    for (const i of this.choiceOrder()) {[m
[32m+[m[32m      const status = (i === 0) ? '*correct*' : 'incorrect';[m
[32m+[m[32m      const n = CHOICES[i](this.params);[m
[32m+[m[32m      const explain = `[m
[32m+[m[32m        (#{_${i}}) is ${status} because \`${hex(n)}\` represents the set[m
[32m+[m[32m        .$ \\{ ${intToSet(n).join(', ')} \\}$.[m
[32m+[m[32m      `;[m
[32m+[m[32m      this.addExplain(explain);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = BitSets;[m
[32m+[m[32mObject.assign(BitSets, {[m
[32m+[m[32m  id: 'bitSets',[m
[32m+[m[32m  title: 'Bit Sets',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  An unsigned binary integer .$u$ can be used to represent a set .$N$[m
[32m+[m[32m  of small non-negative integers where bit .$u_i$ is \`1\` iff .$i \\in[m
[32m+[m[32m  N$.  Which one of the following .$u$ values represents the set of[m
[32m+[m[32m  integers .$ \\{ #{set} \\}$?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst MAX_BITS = 12;[m
[32m+[m[32mconst UNIVERSE = Array.from({length: MAX_BITS}, (_, i) => i);[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { size: () => Rand.int(2, 5),[m
[32m+[m[32m  },[m
[32m+[m[32m  { elements: ({size}) => Rand.choices(size, UNIVERSE).[m
[32m+[m[32m                sort((a, b) => Number(a) - Number(b)),[m
[32m+[m[32m  },[m
[32m+[m[32m  { set: ({elements}) => elements.join(', '),[m
[32m+[m[32m    n: ({elements}) => setToInt(elements),[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m[41m    [m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  ({n}) => (n),[m[41m [m
[32m+[m[32m  ({n}) => (n << 1),[m[41m [m
[32m+[m[32m  ({n}) => (n >> 1),[m[41m [m
[32m+[m[32m  ({elements, size}) =>[m
[32m+[m[32m    (setToInt(elements.slice(0, -1).concat([elements[size - 1] + 1]))),[m[41m [m
[32m+[m[32m  ({elements, size}) =>[m
[32m+[m[32m    (setToInt([elements[0] + 1].concat(elements.slice(1)))),[m
[32m+[m[32m];[m
[32m+[m[41m    [m
[32m+[m
[32m+[m[32mfunction setToInt(elements) {[m
[32m+[m[32m  return elements.reduce((acc, e) => acc|(1<<e), 0);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction intToSet(int) {[m
[32m+[m[32m  return int.toString(2).[m
[32m+[m[32m    split('').[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    reduce((acc, e, i) => Number(e) === 1 ? acc.concat([i]) : acc, []);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction hex(int) {[m
[32m+[m[32m  return `0x${int.toString(16)}`;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new BitSets().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/bit-util.js b/exercises/questions/src/programming/bit-util.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7abe49d[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/bit-util.js[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mfunction bitString(n, nBits=0) {[m
[32m+[m[32m  return (n >>> 0).toString(2).[m
[32m+[m[32m    slice(-nBits).[m
[32m+[m[32m    split('').[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    map((b, i, v) => (i % 4 === 3 && i !== v.length - 1) ? `_${b}` : b).[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    join('');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction bitPoly(n, sgn=1, nBits=0) {[m
[32m+[m[32m  return (n>>>0).toString(2).[m
[32m+[m[32m    slice(-nBits).[m
[32m+[m[32m    split('').[m
[32m+[m[32m    map((b, i) => (i === 0) ? b*sgn : b).[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    map((b, i, v) => `${b} \\times 2^{${i}}`).[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    join(' + ');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = { bitString, bitPoly };[m
[32m+[m
[32m+[m[32m// for (const n of [33, 45, -1, -2, -6]) {[m
[32m+[m[32m//   console.log(n, bitString(n, 6));[m
[32m+[m[32m//   console.log(n, bitPoly(n, n < 0 ? -1 : 1, 6));[m
[32m+[m[32m// }[m
[32m+[m
[1mdiff --git a/exercises/questions/src/programming/bitwise-operators.js b/exercises/questions/src/programming/bitwise-operators.js[m
[1mnew file mode 100644[m
[1mindex 0000000..782984a[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/bitwise-operators.js[m
[36m@@ -0,0 +1,70 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-02 16:15:20 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass BitwiseOperators extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(DISTINCT_OPERANDS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    this.choice(({answer}) => answer);[m
[32m+[m[32m    this.choice(({answer}) => (answer === 0) ? 1 : 0);[m
[32m+[m[32m    this.choice(({a, answer, mult}) => answer + a*mult);[m
[32m+[m[32m    this.choice(({b, answer, mult}) => answer + b*mult);[m
[32m+[m[32m    this.choice(({c, answer, mult}) => answer + c*mult);[m[41m [m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(this.explain());[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  explain(answer) {[m
[32m+[m[32m    const str = `[m
[32m+[m[32m      (#{_0}) is correct since .~(#{a} | #{b})~ is .~#{a|b}u~ and[m[41m [m
[32m+[m[32m      .~#{a|b}u & ~~#{c}u~ is .~#{(a|b) & ~c}u~, which when shifted #{dir}[m
[32m+[m[32m      .~#{d}~ bit(s) is .~#{answer}u~.[m
[32m+[m[32m    `;[m
[32m+[m[32m    return str;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = BitwiseOperators;[m
[32m+[m[32mObject.assign(BitwiseOperators, {[m
[32m+[m[32m  id: 'bitwise',[m
[32m+[m[32m  title: 'Bitwise Operators',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What is the value of .~((#{a}u | #{b}u) & ~~#{c}u) #{op} #{d}~?`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { a: () => Rand.int(2, 9),[m
[32m+[m[32m    b: () => Rand.int(2, 9),[m
[32m+[m[32m    c: () => Rand.int(2, 9),[m
[32m+[m[32m    d: () => Rand.int(1, 4),[m
[32m+[m[32m    op: () => Rand.choice(['<<', '>>', '<<']),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    shiftFn: ({op}) => ((op === '<<') ? ((v, n) => v<<n) : ((v, n) => v>>n)),[m
[32m+[m[32m    mult: ({op, d}) => ((op === '<<') ? (1 << d) : 1),[m
[32m+[m[32m    dir: ({op}) => ((op === '<<') ? 'left' : 'right'),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    answer: ({a, b, c, d, shiftFn}) => shiftFn(((a | b) & ~c), d),[m
[32m+[m[32m  },[m[41m  [m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst DISTINCT_OPERANDS = ({a, b, c}) => a !== b && b !== c && a !== c;[m
[32m+[m
[32m+[m[32mconst CHOICES = [ ({a}) => a, ({b}) => b, ({c}) => c, 'true', 'false' ];[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new BitwiseOperators().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/decl-to-desc.js b/exercises/questions/src/programming/decl-to-desc.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e415025[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/decl-to-desc.js[m
[36m@@ -0,0 +1,131 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-15 22:11:25 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst { permutations, specToText, specToDecl, isErrorDecl } =[m
[32m+[m[32m  require('./decl-util');[m
[32m+[m
[32m+[m[32mclass DeclToDesc extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 4; i++) {[m
[32m+[m[32m      this.choice(({texts}) => `${texts[i]}.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.choice({ choiceFn: () => SEMANTIC_ERROR, pos: -1 });[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(explain(this));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  answerIndex() {[m
[32m+[m[32m    return (this.params.errors[0]) ? 4 : 0;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = DeclToDesc;[m
[32m+[m[32mObject.assign(DeclToDesc, {[m
[32m+[m[32m  id: 'declToDesc',[m
[32m+[m[32m  title: 'Declaration to Description',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Given the following C declaration for \`#{name}\`, which of the following[m
[32m+[m[32m  alternative descriptions describes the type of \`#{name}\`?[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  #{decls[0]}[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  If the declaration is semantically incorrect, then choose (e).[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst SEMANTIC_ERROR = 'The declaration is semantically incorrect.';[m
[32m+[m
[32m+[m[32mconst BASES = [[m
[32m+[m[32m  'char',[m[41m [m
[32m+[m[32m  'short', 'short',[m
[32m+[m[32m  'int', 'unsigned',[m
[32m+[m[32m  'long',[m
[32m+[m[32m  'float', 'double',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst TYPES = [[m
[32m+[m[32m  'afp',  //err[m
[32m+[m[32m  'apa',  //ok[m
[32m+[m[32m  'apf',  //ok[m
[32m+[m[32m  'apfp', //ok[m
[32m+[m[32m  'papf', //ok[m
[32m+[m[32m  'pap',  //ok[m
[32m+[m[32m  'pfa',  //err[m
[32m+[m[32m  'pff',  //err[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { base: () => Rand.choice(BASES),[m
[32m+[m[32m    n: () => Rand.choice([4, 8, 16, 32, 64]),[m
[32m+[m[32m    type: () => Rand.choice(TYPES),[m
[32m+[m[32m    name: () => Rand.choice(['x', 'x', 'y', 'z']),[m
[32m+[m[32m  },[m
[32m+[m[32m  { specs: ({type}) =>[m
[32m+[m[32m            [type].concat(Rand.choices(3, permutations(type).slice(1))),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    decls: ({base, name, n, specs}) =>[m
[32m+[m[32m       specs.map(spec => specToDecl(name, base, spec, n)),[m[41m [m
[32m+[m[32m    texts: ({base, name, n, specs}) =>[m
[32m+[m[32m       specs.map(spec => specToText(name, base, spec, n)),[m
[32m+[m[32m    errors: ({specs}) => specs.map(spec => isErrorDecl(spec)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mfunction explain(question) {[m
[32m+[m[32m  const {errors, decls, texts} = question.params;[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  if (errors[0]) {[m
[32m+[m[32m    text += `[m
[32m+[m[32m      (#{_4}) is correct.  Even though choice (#{_0}) .~${decls[0]}~[m
[32m+[m[32m      is syntactically equivalent to ${texts[0]}, but ${errors[0]} and[m
[32m+[m[32m      the declaration is semantically incorrect.[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    text += `[m
[32m+[m[32m      (#{_0}) is correct.  .~${decls[0]}~ means that[m
[32m+[m[32m      ${texts[0]} and that declaration is semantically meaningful.[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m  text += '\n\n';[m
[32m+[m[32m  for (const i of question.choiceOrder()) {[m
[32m+[m[32m    if (i === 0 || i === question.nChoices() - 1) {[m
[32m+[m[32m      continue; //skip possible answer and semantic error[m
[32m+[m[32m    }[m
[32m+[m[32m    text += `[m
[32m+[m[32m      (#{_${i}}) is incorrect.  The description ${texts[i]} would[m[41m [m
[32m+[m[32m      correspond to the declaration .~${decls[i]}~.[m[41m      [m
[32m+[m[32m    `;[m
[32m+[m[32m    if (errors[i]) {[m
[32m+[m[32m      text += `[m[41m [m
[32m+[m[32m        (Note that this declaration is not semantically meaningful[m[41m [m
[32m+[m[32m         since ${errors[i]}.)[m
[32m+[m[32m      `;[m
[32m+[m[32m    }[m
[32m+[m[32m    text += '\n\n';[m
[32m+[m[32m  }[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new DeclToDesc().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/decl-util.js b/exercises/questions/src/programming/decl-util.js[m
[1mnew file mode 100644[m
[1mindex 0000000..2d2ca20[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/decl-util.js[m
[36m@@ -0,0 +1,119 @@[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mfunction specToDecl(name, type, spec, n=10) {[m
[32m+[m[32m  if (typeof spec === 'string') spec = spec.split('');[m
[32m+[m[32m  let decl = name;[m
[32m+[m[32m  const n1 = spec.length - 1;[m
[32m+[m[32m  for (const [i, constr] of spec.entries()) {[m
[32m+[m[32m    switch (constr) {[m
[32m+[m[32m    case 'a':[m
[32m+[m[32m      decl += `[${n}]`;[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 'f':[m
[32m+[m[32m      decl += '()';[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 'p':[m[41m [m
[32m+[m[32m      decl = ptrDecl(decl, spec[i + 1]);[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return `${type} ${decl};`;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction specToText(name, type, spec, n=10) {[m
[32m+[m[32m  if (typeof spec === 'string') spec = spec.split('');[m
[32m+[m[32m  let text = `\`${name}\` is a `;[m
[32m+[m[32m  for (const [i, constr] of spec.entries()) {[m
[32m+[m[32m    switch (constr) {[m
[32m+[m[32m    case 'a':[m
[32m+[m[32m      text += `array of ${n} `;[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 'f':[m
[32m+[m[32m      text += 'function returning ';[m
[32m+[m[32m      break;[m
[32m+[m[32m    case 'p':[m[41m [m
[32m+[m[32m      text += 'pointer to ';[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return fixupText(`${text}.~${type}~`);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction fixupText(text) {[m
[32m+[m[32m  return text[m
[32m+[m[32m    .replace(/\ba\s+array\b/g, 'an array')[m
[32m+[m[32m    .replace(/(\d+)\s+(\w+)\b/g, '$1 $2s')[m
[32m+[m[32m    .replace(/(\d+)\s+(\.\~\w+\~)/g, "$1 $2's");[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction ptrDecl(decl, next)[m
[32m+[m[32m{[m
[32m+[m[32m  return (next && (next === 'f' || next === 'a'))[m
[32m+[m[32m    ? `(*${decl})`[m
[32m+[m[32m    : `*${decl}`;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction isErrorDecl(spec) {[m
[32m+[m[32m  if (typeof spec === 'string') spec = spec.split('');[m
[32m+[m[32m  for (const [i, constr] of spec.entries()) {[m
[32m+[m[32m    if (constr === 'f') {[m
[32m+[m[32m      const next = spec[i + 1];[m
[32m+[m[32m      if (next) {[m
[32m+[m [32mif (next === 'f') return 'a function cannot return a function';[m
[32m+[m[32m        if (next === 'a') return 'a function cannot return an array';[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (constr === 'a') {[m
[32m+[m[32m      const next = spec[i + 1];[m
[32m+[m[32m      if (next && next === 'f') return 'an array cannot contain functions';[m[41m [m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return false;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction permutations(obj) {[m
[32m+[m[32m  const isStr = typeof obj === 'string';[m
[32m+[m[32m  if (isStr) return permutations(obj.split('')).map(p => p.join(''));[m
[32m+[m[32m  assert(obj instanceof Array);[m
[32m+[m[32m  const list = obj;[m
[32m+[m[32m  if (list.length <= 1) {[m
[32m+[m[32m    return [ list ];[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    const head = list[0];[m
[32m+[m[32m    const perms = [];[m
[32m+[m[32m    for (const perm of permutations(list.slice(1))) {[m
[32m+[m[32m      for (let i = 0; i < perm.length + 1; i++) {[m
[32m+[m [32mperms.push(perm.slice(0, i).concat([head]).concat(perm.slice(i)));[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    return perms;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[41m         [m
[32m+[m[32mmodule.exports = { permutations, specToText, specToDecl, isErrorDecl, };[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(permutations('1234'));[m
[32m+[m[41m  [m
[32m+[m[32m  const TESTS = [[m
[32m+[m[32m    'afp',  //err[m
[32m+[m[32m    'apa',  //ok[m
[32m+[m[32m    'apf',  //ok[m
[32m+[m[32m    'apfp', //ok[m
[32m+[m[32m    'papf', //ok[m
[32m+[m[32m    'pap',  //ok[m
[32m+[m[32m    'pfa',  //err[m
[32m+[m[32m    'pff',  //err[m
[32m+[m[32m  ];[m
[32m+[m
[32m+[m[32m  for (const [i, t] of TESTS.entries()) {[m
[32m+[m[32m    console.log(specToDecl(`x${i}`, 'int', t),[m
[32m+[m         [32m'//',[m
[32m+[m         [32mspecToText(`x${i}`, 'int', t),[m
[32m+[m         [32misErrorDecl(t) || 'ok');[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/exercises/questions/src/programming/desc-to-decl.js b/exercises/questions/src/programming/desc-to-decl.js[m
[1mnew file mode 100644[m
[1mindex 0000000..0c6e566[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/desc-to-decl.js[m
[36m@@ -0,0 +1,125 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-15 22:10:22 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst { permutations, specToText, specToDecl, isErrorDecl } =[m
[32m+[m[32m  require('./decl-util');[m
[32m+[m
[32m+[m[32mclass DescToDecl extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 4; i++) {[m
[32m+[m[32m      this.choice(({decls}) => `.~${decls[i]}~.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.choice({ choiceFn: () => SEMANTIC_ERROR, pos: -1 });[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(explain(this));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  answerIndex() {[m
[32m+[m[32m    return (this.params.errors[0]) ? 4 : 0;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = DescToDecl;[m
[32m+[m[32mObject.assign(DescToDecl, {[m
[32m+[m[32m  id: 'descToDecl',[m
[32m+[m[32m  title: 'Description to Declaration',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Which of the following C declarations declares \`#{name}\`[m[41m [m
[32m+[m[32m  such that #{texts[0]}?[m
[32m+[m
[32m+[m[32m  If the description does not make semantic sense, then choose (e).[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst SEMANTIC_ERROR = 'The description is semantically incorrect.';[m
[32m+[m
[32m+[m[32mconst BASES = [[m
[32m+[m[32m  'char',[m[41m [m
[32m+[m[32m  'short', 'short',[m
[32m+[m[32m  'int', 'unsigned',[m
[32m+[m[32m  'long',[m
[32m+[m[32m  'float', 'double',[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst TYPES = [[m
[32m+[m[32m  'afp',  //err[m
[32m+[m[32m  'apa',  //ok[m
[32m+[m[32m  'apf',  //ok[m
[32m+[m[32m  'apfp', //ok[m
[32m+[m[32m  'papf', //ok[m
[32m+[m[32m  'pap',  //ok[m
[32m+[m[32m  'pfa',  //err[m
[32m+[m[32m  'pff',  //err[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { base: () => Rand.choice(BASES),[m
[32m+[m[32m    n: () => Rand.choice([4, 8, 16, 32, 64]),[m
[32m+[m[32m    type: () => Rand.choice(TYPES),[m
[32m+[m[32m    name: () => Rand.choice(['x', 'x', 'y', 'z']),[m
[32m+[m[32m  },[m
[32m+[m[32m  { specs: ({type}) =>[m
[32m+[m[32m            [type].concat(Rand.choices(3, permutations(type).slice(1))),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    decls: ({base, name, n, specs}) =>[m
[32m+[m[32m       specs.map(spec => specToDecl(name, base, spec, n)),[m[41m [m
[32m+[m[32m    texts: ({base, name, n, specs}) =>[m
[32m+[m[32m       specs.map(spec => specToText(name, base, spec, n)),[m
[32m+[m[32m    errors: ({specs}) => specs.map(spec => isErrorDecl(spec)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mfunction explain(question) {[m
[32m+[m[32m  const {errors, decls, texts} = question.params;[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  if (errors[0]) {[m
[32m+[m[32m    text += `[m
[32m+[m[32m      (#{_4}) is correct.  Even though choice (#{_0}) ${texts[0]}[m
[32m+[m[32m      is syntactically equivalent to .~${decls[0]}~, but ${errors[0]}[m
[32m+[m[32m      and the declaration is semantically incorrect.[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    text += `[m
[32m+[m[32m      (#{_0}) is correct.  .~${decls[0]}~ means that[m
[32m+[m[32m      ${texts[0]} and that declaration is semantically meaningful.[m
[32m+[m[32m    `;[m
[32m+[m[32m  }[m
[32m+[m[32m  text += '\n\n';[m
[32m+[m[32m  for (const i of question.choiceOrder()) {[m
[32m+[m[32m    if (i === 0 || i === question.nChoices() - 1) {[m
[32m+[m[32m      continue; //skip possible answer and semantic error[m
[32m+[m[32m    }[m
[32m+[m[32m    text += `[m
[32m+[m[32m      (#{_${i}}) is incorrect.  The declaration .~${decls[i]}~ would[m[41m [m
[32m+[m[32m      correspond to the description ${texts[i]}.[m[41m      [m
[32m+[m[32m    `;[m
[32m+[m[32m    if (errors[i]) {[m
[32m+[m[32m      text += `[m[41m [m
[32m+[m[32m        (Note that this declaration is not semantically meaningful[m[41m [m
[32m+[m[32m         since ${errors[i]}.)[m
[32m+[m[32m      `;[m
[32m+[m[32m    }[m
[32m+[m[32m    text += '\n\n';[m
[32m+[m[32m  }[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new DescToDecl().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/float-exp.js b/exercises/questions/src/programming/float-exp.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b27140c[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/float-exp.js[m
[36m@@ -0,0 +1,78 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-13 00:05:25 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass FloatExp extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(c => this.choice(c));[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    const {k, extrema, bias, power} = this.params;[m
[32m+[m[32m    const explainx =[m
[32m+[m[32m      (extrema === 'smallest')[m
[32m+[m[32m      ? `[m
[32m+[m[32m      Since the bit pattern of all \`0\`'s is reserved for[m
[32m+[m[32m      denormalized numbers, the smallest possible exponent value[m
[32m+[m[32m      is .$1 - ${bias}$ which is *${power}*.[m
[32m+[m[32m      `[m
[32m+[m[32m      : `[m
[32m+[m[32m      Since the bit pattern of all \`1\`'s is reserved for special[m
[32m+[m[32m      values like the infinities and \`NaN\`'s, the largest possible[m
[32m+[m[32m      exponent value is .$2^{${k}} - 2 - ${bias}$ which is *${power}*.[m
[32m+[m[32m      `;[m
[32m+[m[32m    const explain = `[m
[32m+[m[32m      With a ${k}-bit exponent, the value of the exponent field as an[m
[32m+[m[32m      unsigned magnitude ranges from 0 (all \`0\`'s) to ${2**k-1} (all[m
[32m+[m[32m      \`1\`) and the bias is .$2^{${k}-1} - 1$, i.e. ${2**(k-1) - 1}.[m
[32m+[m[32m      ${explainx.trim()}[m
[32m+[m[32m    `;[m
[32m+[m[32m    this.addExplain(explain);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FloatExp;[m
[32m+[m[32mObject.assign(FloatExp, {[m
[32m+[m[32m  id: 'floatExp',[m
[32m+[m[32m  title: 'Float Exponent Range',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  A floating point format is similar to IEEE but uses non-standard[m
[32m+[m[32m  sizes.  Assuming that it uses a #{k}-bit exponent field, what is the[m
[32m+[m[32m  #{extrema} possible value .$e$ for a normalized number .$M\\times[m
[32m+[m[32m  2^e$?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { k: () => Rand.int(7, 13),[m
[32m+[m[32m    extrema: () => Rand.choice(['smallest', 'largest']),[m
[32m+[m[32m  },[m
[32m+[m[32m  { bias: ({k}) => 2**(k - 1) - 1,[m
[32m+[m[32m  },[m
[32m+[m[32m  { power: ({k, extrema, bias}) =>[m
[32m+[m[32m    (extrema === 'largest') ? 2 ** k - 2 - bias : 1 - bias,[m
[32m+[m[32m    _type: 'nonRandom',[m[41m [m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  ({power}) => power,[m
[32m+[m[32m  ({power}) => power + 1,[m
[32m+[m[32m  ({power}) => power - 1,[m
[32m+[m[32m  ({power}) => power*2,[m
[32m+[m[32m  ({power}) => Math.floor(power/2),[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new FloatExp().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/from-signed.js b/exercises/questions/src/programming/from-signed.js[m
[1mnew file mode 100644[m
[1mindex 0000000..48fd93b[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/from-signed.js[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-03 17:11:53 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst { bitString, bitPoly } = require('./bit-util');[m
[32m+[m
[32m+[m[32mclass FromSigned extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    //this.addConstraints(MIN_NUMBER_ONES_CONSTRAINT);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(c => this.choice(c));[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(umtParse(BACKGROUND));[m
[32m+[m[32m    const { n, bits, poly } = this.params;[m
[32m+[m[32m    this.addExplain(`[m
[32m+[m[32m      (#{_0}) is correct since \`${bits}\` is .$${poly}$ which is[m
[32m+[m[32m      ${n}.  Alternately, form the negative by flipping the bits[m
[32m+[m[32m      \`${bits}\` of the original number to \`${flip_bits(bits)}\`[m
[32m+[m[32m      which is \`${-n - 1}\` and adding one giving us \`${-n}\`. So[m
[32m+[m[32m      the original number is \`${n}\`.[m
[32m+[m[32m    `);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FromSigned;[m
[32m+[m[32mObject.assign(FromSigned, {[m
[32m+[m[32m  id: 'fromSigned',[m
[32m+[m[32m  title: 'Converting from Signed Binary to Decimal',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst N = 6;[m
[32m+[m[32mif (N > 8) throw 'code expects N <= 8';[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What is the decimal representation corresponding to the ${N}-bit signed[m
[32m+[m[32m  binary representation \`#{bits}\`?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m[41m  [m
[32m+[m[32m  { n: () => Rand.int(-(2**(N-1)), 0),[m
[32m+[m[32m    positive: () => Rand.int(1, 9),[m
[32m+[m[32m    negative: () => Rand.int(1, 9),[m
[32m+[m[32m    multiplier: () => Rand.choice([2, 4, ]),[m
[32m+[m[32m    divisor: () => Rand.choice([0.25, 0.5, ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { bits: ({n}) => bitString(n, N),[m
[32m+[m[32m    poly: ({n}) => bitPoly(n, -1, N),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst MIN_NUMBER_ONES_CONSTRAINT =[m[41m [m
[32m+[m[32m  ({n}) => ([m
[32m+[m[32m    n.toString(2).[m[41m      [m
[32m+[m[32m      split('').[m
[32m+[m[32m      reduce((count, b) => count + Number(b), 0)[m
[32m+[m[32m    > 2[m
[32m+[m[32m  );[m
[32m+[m[41m     [m
[32m+[m[32mfunction flip_bits(bits) {[m
[32m+[m[32m  return bits.replace(/[01]/g, c => (c === '0') ? '1' : '0');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  ({n}) => n,[m
[32m+[m[32m  ({n, positive}) => n + positive,[m
[32m+[m[32m  ({n, negative}) => n - negative,[m
[32m+[m[32m  ({n, multiplier}) => multiplier*n,[m
[32m+[m[32m  ({n, divisor}) => Math.floor(divisor*n),[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m  Each bit .$b_i$ in a 2's-complement signed binary number[m
[32m+[m[32m  .$b_{n-1}b_{n-2}\\ldots b_1b_0$ has weight .$2^i$.  Since .$b_{n-1}$[m
[32m+[m[32m  represents the sign bit, the value is .$-b_{n-1}\\times 2^{n - 1} +[m
[32m+[m[32m  b_{n-2}\\times 2^{n - 2} + \\ldots + b_1 \\times 2^1 + b_0 \\times[m
[32m+[m[32m  2^0 $[m
[32m+[m
[32m+[m[32m  An alternate way to figure out the value of a 2's-complement number[m
[32m+[m[32m  is to form the negative of that number and then negate the result.[m
[32m+[m[32m  Forming the negative of a 2's complement number can be done simply[m
[32m+[m[32m  by flipping the bits in the number followed by an increment.[m
[32m+[m
[32m+[m[32m  Note that with ${N}-bits, the represented integers range from[m
[32m+[m[32m  .$-2^{${N}-1}$ which is \`${-(2**(N-1))}\` to .$2^{${N}-1}-1$ which[m
[32m+[m[32m  is \`+${2**(N-1)-1}\`.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new FromSigned().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/from-unsigned.js b/exercises/questions/src/programming/from-unsigned.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1e1803a[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/from-unsigned.js[m
[36m@@ -0,0 +1,83 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-03 13:46:38 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst { bitString, bitPoly } = require('./bit-util');[m
[32m+[m
[32m+[m[32mclass FromUnsigned extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(MIN_NUMBER_ONES_CONSTRAINT);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(c => this.choice(c));[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(umtParse(BACKGROUND));[m
[32m+[m[32m    const { n } = this.params;[m
[32m+[m[32m    const bits = bitString(n);[m
[32m+[m[32m    const poly = bitPoly(n);[m
[32m+[m[32m    this.addExplain(`[m
[32m+[m[32m      (#{_0}) is correct since \`${bits}\` is .$${poly}$ which is ${n}.[m
[32m+[m[32m    `);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FromUnsigned;[m
[32m+[m[32mObject.assign(FromUnsigned, {[m
[32m+[m[32m  id: 'fromUnsigned',[m
[32m+[m[32m  title: 'Converting from Unsigned Binary to Decimal',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What is the decimal representation corresponding to the unsigned[m
[32m+[m[32m  binary representation \`#{bits}\`?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m[41m  [m
[32m+[m[32m  { n: () => Rand.int(16, 128),[m
[32m+[m[32m    positive: () => Rand.int(1, 9),[m
[32m+[m[32m    negative: () => Rand.int(1, 9),[m
[32m+[m[32m    multiplier: () => Rand.choice([2, 4, ]),[m
[32m+[m[32m    divisor: () => Rand.choice([0.25, 0.5, ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { bits: ({n}) => bitString(n),[m
[32m+[m[32m    poly: ({n}) => bitPoly(n),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst MIN_NUMBER_ONES_CONSTRAINT =[m[41m [m
[32m+[m[32m  ({n}) => ([m
[32m+[m[32m    n.toString(2).[m[41m      [m
[32m+[m[32m      split('').[m
[32m+[m[32m      reduce((count, b) => count + Number(b), 0)[m
[32m+[m[32m    > 2[m
[32m+[m[32m  );[m
[32m+[m[41m     [m
[32m+[m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  ({n}) => n,[m
[32m+[m[32m  ({n, positive}) => n + positive,[m
[32m+[m[32m  ({n, negative}) => n - negative,[m
[32m+[m[32m  ({n, multiplier}) => multiplier*n,[m
[32m+[m[32m  ({n, divisor}) => Math.floor(divisor*n),[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m  Each bit .$b_i$ in a binary number .$b_{n-1}b_{n-2}\\ldots b_1b_0$[m
[32m+[m[32m  has weight .$2^i$.  Hence .$b_{n-1}b_{n-2}\\ldots b_1b_0$ has value[m
[32m+[m[32m  .$b_{n-1}\\times 2^{n - 1} + b_{n-2}\\times 2^{n - 2} + \\ldots +[m[41m [m
[32m+[m[32m   b_1 \\times 2^1 + b_0 \\times 2^0 $[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new FromUnsigned().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/meta.js b/exercises/questions/src/programming/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3aff5bb[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/meta.js[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  id: 'programming',[m
[32m+[m[32m  title: 'C Programming',[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    require('./string-array-size'),[m
[32m+[m[32m    require('./from-unsigned'),[m
[32m+[m[32m    require('./to-unsigned'),[m
[32m+[m[32m    require('./oct-dec-hex'),[m
[32m+[m[32m    require('./bitwise-operators'),[m
[32m+[m[32m    require('./simple-masks'),[m
[32m+[m[32m    require('./bit-sets'),[m
[32m+[m[32m    require('./from-signed'),[m
[32m+[m[32m    require('./to-signed'),[m
[32m+[m[32m    require('./unsigned-overflow'),[m
[32m+[m[32m    require('./signed-overflow'),[m
[32m+[m[32m    require('./arith'),[m
[32m+[m[32m    require('./shift-arith'),[m
[32m+[m[32m    require('./array-pointer'),[m
[32m+[m[32m    require('./sizeof'),[m
[32m+[m[32m    require('./float-exp'),[m
[32m+[m[32m    require('./problem-fragments'),[m
[32m+[m[32m    require('./desc-to-decl'),[m
[32m+[m[32m    require('./decl-to-desc'),[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
[32m+[m
[1mdiff --git a/exercises/questions/src/programming/oct-dec-hex.js b/exercises/questions/src/programming/oct-dec-hex.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e4c34a5[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/oct-dec-hex.js[m
[36m@@ -0,0 +1,128 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-03 04:35:20 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass OctDecHex extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    this.choice([m
[32m+[m[32m      ({nums, vec }) =>[m
[32m+[m[41m    [m       [32mBASES.[m
[32m+[m[41m    [m       [32mmap((b, i) => b[1] + (nums[0]+vec[i]).toString(b[0])).[m
[32m+[m[41m    [m       [32mjoin(', '),[m
[32m+[m[32m    );[m
[32m+[m[32m    for (let i = 1; i < 5; i++) {[m
[32m+[m[32m      this.choice(({nums}) =>[m
[32m+[m         [32m  BASES.map(b => b[1] + nums[i].toString(b[0])).join(', '));[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    const { nums, vec } = this.params;[m
[32m+[m[32m    this.addExplain(umtParse(BACKGROUND));[m
[32m+[m[32m    this.addExplain(`[m
[32m+[m[32m      (#{_0}) is the answer since it contains inconsistent values.[m[41m  [m
[32m+[m[32m      ${errExplain(nums[0], vec)}[m
[32m+[m[32m    `);[m
[32m+[m[32m    for (const i of this.choiceOrder()) {[m
[32m+[m[32m      if (i === 0) continue; //skip answer[m
[32m+[m[32m      this.addExplain(`[m
[32m+[m[32m        All the values in choice (#{_${i}}) are consistent.[m
[32m+[m[32m        ${okExplain(nums[i])}[m
[32m+[m[32m      `);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = OctDecHex;[m
[32m+[m[32mObject.assign(OctDecHex, {[m
[32m+[m[32m  id: 'octDecHex',[m
[32m+[m[32m  title: 'Octal, Decimal and Hexadecimal Representations',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Which one of the following choices contains a value not equal[m
[32m+[m[32m  to the other two values?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst [LO, HI] = [16, 63];[m
[32m+[m[32mconst NUMS = Array.from({length: HI-LO+1}, (_, i) => i + LO);[m
[32m+[m[32mconst BASES = [ [8, '0'], [10, ''], [16, '0x'] ];[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { nums: () => Rand.choices(5, NUMS),[m
[32m+[m[32m    error: () => Rand.choice([2, 4, 6]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { vec: ({error}) =>[m
[32m+[m[32m      Rand.choice([[error, 0, 0], [0, error, 0], [0, 0, error]]),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m  Octal numbers are represented with a leading \`0\`.  Specifically,[m
[32m+[m[32m  the .$n$-octet octal number .$\\mathtt{0}o_{n-1}o_{n-2}\\ldots o_1o_0$[m
[32m+[m[32m  represents .$o_{n-1}\\times 8^{n-1} + o_{n-2}\\times 8^{n-2} +[m
[32m+[m[32m  \\ldots o_1\\times 8^1 + o_0\\times 8^0$.[m
[32m+[m
[32m+[m[32m  Hexadecimal numbers are represented with a leading \`0x\` or \`0X\`.[m
[32m+[m[32m  Specifically, the .$n$-hexet hexadecimal number[m
[32m+[m[32m  .$\\mathtt{0x}h_{n-1}h_{n-2}\\ldots h_1h_0$ represents .$h_{n-1}\\times[m
[32m+[m[32m  8^{n-1} + h_{n-2}\\times 8^{n-2} + \\ldots h_1\\times 8^1 +[m
[32m+[m[32m  h_0\\times 8^0$, where hexet \`0xa\` represents 10, \`0xb\` represents[m
[32m+[m[32m  11, .$\\ldots$ and \`0xf\` represents 15.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mfunction polyRepr(n, base) {[m
[32m+[m[32m  const prefix = (base === 16) ? '0x' : '';[m
[32m+[m[32m  return n.[m
[32m+[m[32m    toString(base).[m
[32m+[m[32m    split('').[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    map((e, i) => `\\mathtt{${prefix}${e}} \\times ${base}^{${i}}`).[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    join(' + ');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction okExplain(n) {[m
[32m+[m[32m  return `[m
[32m+[m[32m    Both \`0${n.toString(8)}\` .$ = ${polyRepr(n, 8)} = ${n}$ and[m
[32m+[m[32m    \`0x${n.toString(16)}\` .$ = ${polyRepr(n, 16)} = ${n}$.[m
[32m+[m[32m  `.trim();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction errExplain(n, errVec) {[m
[32m+[m[32m  const errIndex = errVec.findIndex(err => err !== 0);[m
[32m+[m[32m  const err = n + errVec[errIndex];[m
[32m+[m[32m  const errBase = ['oct', 'dec', 'hex'][errIndex];[m
[32m+[m[32m  switch (errBase) {[m
[32m+[m[32m  case 'oct':[m[41m [m
[32m+[m[32m    return `[m
[32m+[m[32m      \`0x${n.toString(16)}\` .$ = ${polyRepr(n, 16)} = ${n}$ which[m
[32m+[m[32m      is the same as the value of the decimal representation \`${n}\`, but[m[41m [m
[32m+[m[32m      \`0${err.toString(8)}\` which is .$${polyRepr(err, 8)} = ${err}$[m
[32m+[m[32m    `.trim();[m
[32m+[m[32m  case 'dec':[m
[32m+[m[32m    return `[m
[32m+[m[32m      Both \`0${n.toString(8)}\` .$ = ${polyRepr(n, 8)} = ${n}$ and[m
[32m+[m[32m      \`0x${n.toString(16)}\` .$ = ${polyRepr(n, 16)} = ${n}$ which[m
[32m+[m[32m      is different from the decimal value \`${err}\`.[m
[32m+[m[32m    `.trim();[m
[32m+[m[32m  case 'hex':[m
[32m+[m[32m    return `[m
[32m+[m[32m      \`0${n.toString(8)}\` .$ = ${polyRepr(n, 8)} = ${n}$ which[m
[32m+[m[32m      is the same as the value of the decimal representation \`${n}\`, but[m[41m [m
[32m+[m[32m      \`0${err.toString(16)}\` which is .$${polyRepr(err, 16)} = ${err}$[m
[32m+[m[32m    `.trim();[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new OctDecHex().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/problem-fragments.js b/exercises/questions/src/programming/problem-fragments.js[m
[1mnew file mode 100644[m
[1mindex 0000000..038c461[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/problem-fragments.js[m
[36m@@ -0,0 +1,214 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-10-22 21:30:43 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass ProblemFragments extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    this.choice(({fragments}) => FRAGMENTS[fragments[0]].problemFragment);[m
[32m+[m[32m    for (let i = 1; i < 5; i++) {[m
[32m+[m[32m      this.choice(({fragments}) => FRAGMENTS[fragments[i]].okFragment);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(this.params.explain);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ProblemFragments;[m
[32m+[m[32mObject.assign(ProblemFragments, {[m
[32m+[m[32m  id: 'problemFragments',[m
[32m+[m[32m  title: 'Problematic C Fragments',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assuming that all types, variables and functions in the following C code[m
[32m+[m[32m  fragments have been declared suitably, which one of them[m
[32m+[m[32m  looks problematic and should raise red flags when[m
[32m+[m[32m  performing a code review?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst FRAGMENTS = {[m
[32m+[m[32m  scanf: {[m
[32m+[m[32m    okFragment: '.~scanf("%d", &i);~',[m
[32m+[m[32m    problemFragment: '`scanf("%d", i);`',[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      since .~scanf()~ needs to return the values read to its[m
[32m+[m[32m      caller using its parameters, those parameters are usually[m
[32m+[m[32m      passed as pointers, indicated by an \`&\` as in \`&i\`.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  mallocStr: {[m
[32m+[m[32m    okFragment: '.~char *strCopy = malloc(strlen(str) + 1);~',[m
[32m+[m[32m    problemFragment: '.~char *strCopy = malloc(strlen(str));~',[m
[32m+[m[32m    explain: `[m
[32m+[m[32m       \`strlen()\` returns the number of characters in a string[m
[32m+[m[32m       without counting the \`'\\0'\` \`NUL\` character terminating[m
[32m+[m[32m       the string.  It is likely that the \`malloc()\` needs to[m
[32m+[m[32m       allocate space for the terminating \`NUL\` and the call[m[41m [m
[32m+[m[32m       should be \`malloc(strlen(str) + 1)\`[m
[32m+[m[32m   `,[m
[32m+[m[32m  },[m
[32m+[m[32m  mallocNoPtr: {[m
[32m+[m[32m    okFragment: '.~T *t = malloc(sizeof(T));~',[m
[32m+[m[32m    problemFragment: '.~T t = malloc(sizeof(T));~',[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      \`t\` should probably be declared as a pointer; this means[m
[32m+[m[32m      that the declaration should be \`T *t = malloc(sizeof(T))\`.[m
[32m+[m[32m      This fragment will not even compile unless \`T\`[m
[32m+[m[32m      has been .~typedef~'d to be a pointer.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  strcpy: {[m
[32m+[m[32m    okFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      char dest[strlen(src1) + strlen(src2) + 1];[m
[32m+[m[32m      strcpy(dest, src1);[m
[32m+[m[32m      strcat(dest, src2);[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    problemFragment: '.~strcpy(&str[3], str);~',[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      it appears to be an attempt to overwrite the suffix of a[m
[32m+[m[32m      string with the string.  There are two problems with this[m
[32m+[m[32m      code:[m
[32m+[m
[32m+[m[32m        # One would need to verify that there is memory allocated[m
[32m+[m[32m          beyond the end of \`str\` to accomodate the 3 extra characters.[m
[32m+[m
[32m+[m[32m        # The documentation for \`strcpy()\` specifically states[m
[32m+[m[32m          that the source and destination strings should not[m
[32m+[m[32m          overlap.[m
[32m+[m[32m     `,[m
[32m+[m[32m  },[m
[32m+[m[32m  unsignedNeg: {[m
[32m+[m[32m    okFragment: `[m
[32m+[m[32m      .~for (unsigned i = 0; i < n; i++) { s += (n - i)*a[i]; }~[m[41m [m
[32m+[m[32m      where \`n\`, \`s\` and \`a[]\` are suitably declared.[m
[32m+[m[32m    `,[m
[32m+[m[32m    problemFragment: `[m
[32m+[m[32m      .~for (unsigned i = n; i >= 0; i--) { s += (n - i)*a[i]; }~[m[41m [m
[32m+[m[32m      where \`n\`, \`s\` and \`a[]\` are suitably declared.[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      since \`i\` is declared unsigned, it can never be negative; hence[m
[32m+[m[32m      the loop condition will always be false and the loop cannot terminate.[m[41m [m
[32m+[m[32m     `,[m
[32m+[m[32m  },[m
[32m+[m[32m  prePost: {[m
[32m+[m[32m    okFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      int *arr;  //assume initialized somewhere[m
[32m+[m[32m      int index; //also assume initialized somewhere[m
[32m+[m[32m      ...[m
[32m+[m[32m      int read() { return arr[--index]; }[m
[32m+[m[32m      void write(int v) { arr[index++] = v; }[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    problemFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      int *arr;  //assume initialized somewhere[m
[32m+[m[32m      int index; //also assume initialized somewhere[m
[32m+[m[32m      ...[m
[32m+[m[32m      int read() { return arr[index--]; }[m
[32m+[m[32m      void write(int v) { arr[index++] = v; }[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m     both \`read()\` and \`write()\` use post-decrement and post-increment[m
[32m+[m[32m     operations; one should probably be a post-operator while the[m[41m [m
[32m+[m[32m     other should be a pre-operator.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  structHole: {[m
[32m+[m[32m    okFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      typedef struct {[m
[32m+[m[32m        int x;[m
[32m+[m[32m        int y;[m
[32m+[m[32m        char c1;[m
[32m+[m[32m        char c2;[m
[32m+[m[32m      } S;[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    problemFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      typedef struct {[m
[32m+[m[32m        int x;[m
[32m+[m[32m        char c1;[m
[32m+[m[32m        int y;[m
[32m+[m[32m        char c2;[m
[32m+[m[32m      } S;[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m     even though it may not be incorrect pe se, it probably makes[m[41m [m
[32m+[m[32m     inefficient use of memory because of the holes in the[m[41m [m
[32m+[m[32m     \`struct\` necessitated  by alignment requirements / preferences[m[41m [m
[32m+[m[32m     of typical architectures.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  missingBraces: {[m
[32m+[m[32m    okFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      while (f(i)) {[m
[32m+[m[32m        s += g(i);[m
[32m+[m[32m        i = h(i);[m
[32m+[m[32m      }[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    problemFragment: `[m
[32m+[m[32m      The fragment:[m
[32m+[m
[32m+[m[32m      ~~~[m
[32m+[m[32m      while (f(i))[m[41m [m
[32m+[m[32m        s += g(i);[m
[32m+[m[32m        i = h(i);[m
[32m+[m[32m      ~~~[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      the indentation and logic makes it seem that the \`i = h(i);\`[m[41m [m
[32m+[m[32m      statement should be part of the .~while~ block, but missing braces[m[41m [m
[32m+[m[32m      puts it outside the .~while~ block.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m[32mconst KEYS = Object.keys(FRAGMENTS);[m
[32m+[m[32m//console.log(KEYS, Rand.choices(5, KEYS));[m
[32m+[m
[32m+[m[32mconst EXPLAIN_PREFIX = '(#{_0}) is problematic because ';[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { fragments: () => Rand.choices(5, KEYS),[m[41m [m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    explain: ({fragments}) => EXPLAIN_PREFIX + FRAGMENTS[fragments[0]].explain,[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ProblemFragments().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/shift-arith.js b/exercises/questions/src/programming/shift-arith.js[m
[1mnew file mode 100644[m
[1mindex 0000000..b01d132[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/shift-arith.js[m
[36m@@ -0,0 +1,94 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-10-22 21:34:43 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass ShiftArith extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(isDistinctShifts);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({choices}) => `.~${choices[i]} * i~`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(explain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ShiftArith;[m
[32m+[m[32mObject.assign(ShiftArith, {[m
[32m+[m[32m  id: 'shiftArith',[m
[32m+[m[32m  title: 'Arithmetic using Shifts',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst MAX_SHIFT = 2;[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assuming that \`i\` is an .~unsigned~ having value greater than[m
[32m+[m[32m  ${1 << (MAX_SHIFT + 1)}, what will be the value of the expression[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m[32m  (i #{sh1} #{n1}) #{op1} (i #{sh2} #{n2}) #{op2} (i #{sh3} #{n3})[m
[32m+[m[32m  ~~~[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mfunction explain(params) {[m
[32m+[m[32m  const {[m
[32m+[m[32m    n1, sh1, sh1Sign, n2, sh2, sh2Sign, n3, sh3, sh3Sign, op1, op2, choices[m
[32m+[m[32m  } = params;[m
[32m+[m[32m  const [ f1, f2, f3 ] = [ 2**(sh1Sign*n1), 2**(sh2Sign*n2), 2**(sh3Sign*n3) ];[m
[32m+[m[32m  return `[m
[32m+[m[32m    .~(i ${sh1} ${n1})~ is .~(${f1} * i)~,[m
[32m+[m[32m    .~(i ${sh2} ${n2})~ is .~(${f2} * i)~,[m
[32m+[m[32m    .~(i ${sh3} ${n3})~ is .~(${f3} * i)~.[m[41m  [m
[32m+[m[32m    Hence .~(i ${sh1} ${n1}) ${op1} (i ${sh2} ${n2}) ${op2} (i ${sh3} ${n3})~[m
[32m+[m[32m    is .~(${f1} * i) ${op1} (${f2} * i) ${op2} (${f3} * i)~ which is[m
[32m+[m[32m    .~${choices[0]} * i~.[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction isDistinctShifts(params) {[m
[32m+[m[32m  const { n1, sh1Sign, n2, sh2Sign, n3, sh3Sign } = params;[m
[32m+[m[32m  return (new Set([ n1*sh1Sign, n2*sh2Sign, n3*sh3Sign ])).size === 3;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { op1Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    op2Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    sh1Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    sh2Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    sh3Sign: () => Rand.choice([ 1, -1 ]),[m
[32m+[m[32m    n1: () => Rand.int(0, MAX_SHIFT + 1),[m
[32m+[m[32m    n2: () => Rand.int(0, MAX_SHIFT + 1),[m
[32m+[m[32m    n3: () => Rand.int(0, MAX_SHIFT + 1),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    op1: ({op1Sign}) => (op1Sign > 0) ? '+' : '-',[m
[32m+[m[32m    op2: ({op2Sign}) => (op2Sign > 0) ? '+' : '-',[m
[32m+[m[32m    sh1: ({sh1Sign}) => (sh1Sign > 0) ? '<<' : '>>',[m
[32m+[m[32m    sh2: ({sh2Sign}) => (sh2Sign > 0) ? '<<' : '>>',[m
[32m+[m[32m    sh3: ({sh3Sign}) => (sh3Sign > 0) ? '<<' : '>>',[m
[32m+[m[32m    choices: ({op1Sign, op2Sign, sh1Sign, sh2Sign, sh3Sign, n1, n2, n3}) => [[m
[32m+[m[32m      2**(sh1Sign*n1) + op1Sign*2**(sh2Sign*n2) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*(n1 + 1)) + op1Sign*2**(sh2Sign*n2) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*(n1)) - op1Sign*2**(sh2Sign*n2) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*(n1)) + op1Sign*2**(sh2Sign*n2) - op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m      2**(sh1Sign*n1) + op1Sign*2**(sh2Sign*(n2 + 1)) + op2Sign*2**(sh3Sign*n3),[m
[32m+[m[32m    ],[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ShiftArith().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/signed-overflow.js b/exercises/questions/src/programming/signed-overflow.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ea10118[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/signed-overflow.js[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-04 01:48:52 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass SignedOverflow extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 4; i++) {[m
[32m+[m[32m      this.choice(({triples}) => `\`${triples[i][0]} + ${triples[i][1]}\``);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.noneOfTheAbove();[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  answerIndex() {[m
[32m+[m[32m    return (this.params.doOverflow) ? 0 : 4;[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = SignedOverflow;[m
[32m+[m[32mObject.assign(SignedOverflow, {[m
[32m+[m[32m  id: 'signedOverflow',[m
[32m+[m[32m  title: 'Overflow when Adding Signed Integers',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assuming \`#{n}\`-bit 2's-complement integers,[m
[32m+[m[32m  which one of the following additions will overflow?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { n: () => Rand.int(6, 9),[m
[32m+[m[32m    doOverflow: () => Rand.int(1, 10) <= 8,[m
[32m+[m[32m  },[m
[32m+[m[32m  { triples: ({n, doOverflow}) => makeTriples(n, doOverflow),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeExplain(question) {[m
[32m+[m[32m  const {n, doOverflow, triples} = question.params;[m
[32m+[m[32m  const [min, max] = [-(2**(n-1)), 2**(n-1) - 1];[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m      With \`${n}\`-bits, the representable range is [${min}, ${max}].[m
[32m+[m[32m    `;[m
[32m+[m[32m  for (const i of question.choiceOrder()) {[m
[32m+[m[32m    if (i === 4) break;[m
[32m+[m[32m    const [rands0, rands1, sum] = triples[i];[m
[32m+[m[32m    explain +=[m
[32m+[m[32m      `For (#{_${i}}), \`${rands0} + ${rands1} = ${sum}\` `;[m
[32m+[m[32m    if (sum < min || sum > max) {[m
[32m+[m[32m      explain += 'which overflows and is the *answer*; ';[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      explain += 'which is within range; ';[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  if (doOverflow) {[m
[32m+[m[32m    explain += 'Hence the answer is (#{_0})';[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    explain += `[m
[32m+[m[32m        Since none of the additions overflow, the answer is[m[41m [m
[32m+[m[32m        (#{_4}) *None of the above*.[m
[32m+[m[32m       `;[m
[32m+[m[32m  }[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makeTriples(n, doOverflow) {[m
[32m+[m[32m  const triples = [];[m
[32m+[m[32m  const [min, max] = [-(2**(n-1)), 2**(n-1) - 1];[m
[32m+[m[32m  while (triples.length < 4) {[m
[32m+[m[32m    const isPositiveSum = Rand.int(1, 11) <= 5;[m
[32m+[m[32m    const isOverflow = (triples.length === 0) && doOverflow;[m
[32m+[m[32m    let sum;[m
[32m+[m[32m    if (isOverflow) {[m
[32m+[m[32m      sum = isPositiveSum ? max + Rand.int(1, 6) : min - Rand.int(1, 6);[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      sum = isPositiveSum ? Rand.int(1, max + 1) : Rand.int(min, 1);[m
[32m+[m[32m    }[m
[32m+[m[32m    const rand0Range = isPositiveSum ? [sum - max, sum] : [sum+1, sum + max];[m
[32m+[m[32m    const rand0 = Rand.int(...rand0Range);[m
[32m+[m[32m    const rand1 = sum - rand0;[m
[32m+[m[32m    triples.push([rand0, rand1, sum]);[m
[32m+[m[32m  }[m
[32m+[m[32m  return triples;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new SignedOverflow().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/simple-masks.js b/exercises/questions/src/programming/simple-masks.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e4c8da5[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/simple-masks.js[m
[36m@@ -0,0 +1,153 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-05 23:45:17 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass SimpleMasks extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(params => params.choicePairs[i][0]);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    for (const i of this.choiceOrder()) {[m
[32m+[m[32m      const status = (i === 0) ? '*correct*' : 'incorrect';[m
[32m+[m[32m      const explain = `[m
[32m+[m[32m        (#{_${i}}) is ${status} because ${this.params.choicePairs[i][1]}[m
[32m+[m[32m      `;[m
[32m+[m[32m      this.addExplain(explain);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = SimpleMasks;[m
[32m+[m[32mObject.assign(SimpleMasks, {[m
[32m+[m[32m  id: 'simpleMasks',[m
[32m+[m[32m  title: 'Simple Masks',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst N = 8;[m
[32m+[m[32mconst N_ARTICLE = 'an'[m
[32m+[m[32mconst INDEXES = Array.from({length: N}, (_, i) => i);[m
[32m+[m
[32m+[m[32mconst VAR = 'value';[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assume that \`${VAR}\` is ${N_ARTICLE} ${N}-bit unsigned integer, and[m
[32m+[m[32m  that .$b_0$ refers to its least significant bit and .$b_{${N-1}}$[m
[32m+[m[32m  refers to its most significant bit.[m
[32m+[m
[32m+[m[32m  Which one of the following expressions will produce a non-zero[m
[32m+[m[32m  result iff *#{typeDescr}* of the bits .$#{bitDescr}$ are[m
[32m+[m[32m  \`#{result}\`?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { nBits: () => Rand.int(2, 5),[m
[32m+[m[32m    type: () => Rand.choice(['any', 'all']),[m
[32m+[m[32m    result: () => Rand.choice(['0', '1']),[m
[32m+[m[32m    maskShifts: () => [ 0, perturbShift(0.5), perturbShift(0.5),[m
[32m+[m                 [32mperturbShift(0.5), perturbShift(1) ],[m
[32m+[m[32m  },[m
[32m+[m[32m  { indexes: ({nBits}) => Rand.choices(nBits, INDEXES.slice(1, N-1)).[m
[32m+[m[32m                          sort((a, b) => b - a),[m
[32m+[m[32m  },[m
[32m+[m[32m  { bitDescr: ({indexes, type}) => bitDescr(indexes, type),[m
[32m+[m[32m    typeDescr: ({type, nBits}) => typeDescr(type, nBits),[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m  },[m
[32m+[m[32m  { choicePairs: (params) => [0,1,2,3,4].map(i => makeChoice(i, params)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction exprWithExplain(cmp, cmpRhs=0) {[m
[32m+[m[32m  return (params, key, index) => {[m
[32m+[m[32m    const [ type, result ] = key.split('_');[m
[32m+[m[32m    const {nBits, indexes, maskShifts} = params;[m
[32m+[m[32m    const mask = makeMask(indexes, maskShifts[index]);[m
[32m+[m[32m    const m = hex(mask);[m
[32m+[m[32m    const rhs = (cmpRhs < 0) ? m : cmpRhs;[m
[32m+[m[32m    const expr = `.~(${VAR} & ${m}) ${cmp} ${rhs}~`;[m
[32m+[m[32m    const explain = `[m
[32m+[m[32m      the expression ${expr} is non-zero iff *${typeDescr(type,[m
[32m+[m[32m      nBits)}* of the bits .$${maskDescr(mask, type)}$ are[m
[32m+[m[32m      \`${result}\`.[m
[32m+[m[32m    `;[m
[32m+[m[32m    return [expr, explain];[m
[32m+[m[32m  };[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction getFnKey(params, offset) {[m
[32m+[m[32m  const keys = EXPR_FN_KEYS;[m
[32m+[m[32m  const nKeys = keys.length;[m
[32m+[m[32m  let index;[m
[32m+[m[32m  if (offset >= nKeys) {[m
[32m+[m[32m    index = Rand.int(0, nKeys);[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    const {type, result} = params;[m
[32m+[m[32m    const key = `${type}_${result}`;[m
[32m+[m[32m    index = (keys.findIndex(f => f === key) + offset) % keys.length;[m
[32m+[m[32m  }[m
[32m+[m[32m  return keys[index];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makeChoice(index, params) {[m
[32m+[m[32m  const key = getFnKey(params, index);[m
[32m+[m[32m  const fn = EXPR_FNS[key];[m
[32m+[m[32m  return fn(params, key, index);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst EXPR_FNS = {[m
[32m+[m[32m  'all_0': exprWithExplain('==', 0),      //(value & mask) == 0[m
[32m+[m[32m  'all_1': exprWithExplain('==', -1),     //(value & mask) == mask[m
[32m+[m[32m  'any_0': exprWithExplain('!=', -1),     //(value & mask) != mask[m
[32m+[m[32m  'any_1': exprWithExplain('!=', 0),      //(value & mask) != 0[m
[32m+[m[32m};[m
[32m+[m[32mconst EXPR_FN_KEYS = Object.keys(EXPR_FNS);[m
[32m+[m[32mif (EXPR_FN_KEYS.length !== 4) throw 'code assumes 4 EXPR_FNS';[m
[32m+[m
[32m+[m[32mfunction hex(n) { return `0x${n.toString(16)}`; }[m
[32m+[m[32mfunction makeMask(indexes, shift) {[m
[32m+[m[32m  const baseMask = indexes.map(i => (1 << i)).reduce((acc, v) => (acc | v), 0);[m
[32m+[m[32m  return (shift >= 0) ? (baseMask << shift) : (baseMask >> -shift);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction bitDescr(indexes, type) {[m
[32m+[m[32m  function bit(n) { return `b_{${n}}`; }[m
[32m+[m[32m  const joiner = (type === 'all') ? 'and' : 'or';[m
[32m+[m[32m  return (indexes.slice(0, -1).map(i => bit(i)).join(', ')) +[m
[32m+[m[32m         `\\textrm{ ${joiner} }` + bit(indexes.slice(-1)[0]);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction maskDescr(mask, type) {[m
[32m+[m[32m  const indexes =[m
[32m+[m[32m    mask.toString(2).[m
[32m+[m[32m    split('').[m
[32m+[m[32m    reverse().[m
[32m+[m[32m    map((b, i) => b === '1' ? i : -1).[m
[32m+[m[32m    filter(i => i >= 0).[m
[32m+[m[32m    reverse();[m
[32m+[m[32m  return bitDescr(indexes, type);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction typeDescr(type, nBits) {[m
[32m+[m[32m  return (type === 'all' && nBits === 2) ? 'both' : type;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction perturbShift(p) {[m
[32m+[m[32m  return (Math.random() < p) ? ((Math.random() < 0.5 ? -1 : +1)) : 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new SimpleMasks().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/sizeof.js b/exercises/questions/src/programming/sizeof.js[m
[1mnew file mode 100644[m
[1mindex 0000000..9d844a4[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/sizeof.js[m
[36m@@ -0,0 +1,181 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-21 20:09:35 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Sizeof extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({sizeChoices}) => `\`${sizeChoices[i]}\`.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(explain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Sizeof;[m
[32m+[m[32mObject.assign(Sizeof, {[m
[32m+[m[32m  id: 'sizeof',[m
[32m+[m[32m  title: 'Size of a Structure',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assume that a pointers and .~long~'s occupy 8 bytes, an .~int~ occupies[m
[32m+[m[32m  4 bytes, a .~short~ occupies 2 bytes and a type must be aligned on an[m
[32m+[m[32m  address evenly divisible by its size.  Given the following declaration:[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  #{decl}[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  what is .~sizeof(struct S)~?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst TYPE_INFOS = {[m
[32m+[m[32m  'char ': {[m
[32m+[m[32m    size: 1,[m
[32m+[m[32m    var: i => `c${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'short ': {[m
[32m+[m[32m    size: 2,[m
[32m+[m[32m    var: i => `w${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'int ': {[m
[32m+[m[32m    size: 4,[m
[32m+[m[32m    var: i => `i${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'long ': {[m
[32m+[m[32m    size: 8,[m
[32m+[m[32m    var: i => `j${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'char *': {[m
[32m+[m[32m    size: 8,[m
[32m+[m[32m    var: i => `p${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'short *': {[m
[32m+[m[32m    size: 8,[m
[32m+[m[32m    var: i => `p${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'int *': {[m
[32m+[m[32m    size: 8,[m
[32m+[m[32m    var: i => `p${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'long *': {[m
[32m+[m[32m    size: 8,[m
[32m+[m[32m    var: i => `p${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'void *': {[m
[32m+[m[32m    size: 8,[m
[32m+[m[32m    var: i => `p${i}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  'char[3] ': {[m
[32m+[m[32m    size: 3,[m
[32m+[m[32m    var: i => `label${i}[3]`,[m
[32m+[m[32m    align: 1,[m
[32m+[m[32m  },[m
[32m+[m[32m  'char[5] ': {[m
[32m+[m[32m    size: 5,[m
[32m+[m[32m    var: i => `label${i}[5]`,[m
[32m+[m[32m    align: 1,[m
[32m+[m[32m  },[m
[32m+[m[32m  'char[7] ': {[m
[32m+[m[32m    size: 7,[m
[32m+[m[32m    var: i => `label${i}[7]`,[m
[32m+[m[32m    align: 1,[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m[32mconst TYPES = Object.keys(TYPE_INFOS);[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { nFields: () => Rand.int(4, 7),[m
[32m+[m[32m    labelLen: () => Rand.choice([3, 5, 7 ]),[m
[32m+[m[32m    perturbs: () => Rand.choices(4, [ -8, -4, 4, 8, 12, 16 ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { types: ({nFields, labelLen}) =>[m
[32m+[m[32m    Rand.permutation(Rand.choices(nFields, TYPES).[m
[32m+[m         [32m     concat([`char[${labelLen}] `])),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    decl: ({types}) => makeDecl(types),[m
[32m+[m[32m    offsets: ({types}) => makeOffsets(types),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    sizeChoices: ({offsets, perturbs}) => makeSizeChoices(offsets, perturbs),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst OFFSET_INDENT = 30;[m
[32m+[m[32mfunction makeDecl(types, offsets) {[m
[32m+[m[32m  let decls = '';[m
[32m+[m[32m  types.forEach((t, i) => {[m
[32m+[m[32m    const info = TYPE_INFOS[t];[m
[32m+[m[32m    const declType = t.replace(/\[\d+\]/g, '');[m
[32m+[m[32m    const declVar = info.var(i);[m
[32m+[m[32m    let decl = `    ${declType}${declVar};`;[m
[32m+[m[32m    if (offsets) {[m
[32m+[m[32m      decl += ' '.repeat(OFFSET_INDENT - decl.length);[m
[32m+[m[32m      decl += `//offset ${offsets[i]}`;[m
[32m+[m[32m      const hole = offsets[i + 1] - (offsets[i] + info.size);[m
[32m+[m[32m      if (hole > 0) decl += `; hole ${hole}`;[m
[32m+[m[32m    }[m
[32m+[m[32m    decls += decl + '\n';[m
[32m+[m[32m  });[m
[32m+[m[32m  return `struct S {\n${decls}};`;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makeOffsets(types) {[m
[32m+[m[32m  const offsets = [];[m
[32m+[m[32m  let offset = 0;[m
[32m+[m[32m  let maxAlign = 1;[m
[32m+[m[32m  for (const t of types) {[m
[32m+[m[32m    const info = TYPE_INFOS[t];[m
[32m+[m[32m    const align = info.align || info.size;[m
[32m+[m[32m    if (align > maxAlign) maxAlign = align;[m
[32m+[m[32m    if (offset%align !== 0) offset += align - offset%align;[m
[32m+[m[32m    offsets.push(offset);[m
[32m+[m[32m    offset += info.size;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (offset % maxAlign === 0) {[m
[32m+[m[32m    offsets.push(offset);[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    offsets.push(offset + maxAlign - offset%maxAlign);[m
[32m+[m[32m  }[m
[32m+[m[32m  return offsets;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makeSizeChoices(offsets, perturbs) {[m
[32m+[m[32m  const size = offsets.slice(-1)[0];[m
[32m+[m[32m  return [0].concat(perturbs).map(p => size + p);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explain({types, offsets}) {[m
[32m+[m[32m  const decl = makeDecl(types, offsets);[m
[32m+[m[32m  return `[m
[32m+[m[32m    (#{_0}) is correct since the declaration with offsets is:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    ${decl}[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m    Hence the .~sizeof(struct S)~ is \`${offsets.slice(-1)[0]}\`.[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Sizeof().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/string-array-size.js b/exercises/questions/src/programming/string-array-size.js[m
[1mnew file mode 100644[m
[1mindex 0000000..8005c8f[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/string-array-size.js[m
[36m@@ -0,0 +1,100 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-10-22 23:43:51 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass StringArraySize extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    this.choice(({size}) => `${size}`);[m
[32m+[m[32m    for (let i = 0; i < 4; i++) {[m
[32m+[m[32m      this.choice(({size, offsets}) => `${size + offsets[i]}`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    const { nBase, nEscapes, escapes, size } = this.params;[m
[32m+[m[32m    const escapes1 = escapes.concat(['\\0']);[m
[32m+[m[32m    const qesc = escapes1.map((e) => `\`${e}\``);[m
[32m+[m[32m    const escs = qesc.slice(0, -1).join(', ') + ' and ' + qesc.slice(-1)[0];[m
[32m+[m[32m    const qdesc = escapes1.map((e) => `\`${ESCAPES[e]}\``);[m
[32m+[m[32m    const desc = qdesc.slice(0, -1).join(', ') + ' and ' + qdesc.slice(-1)[0];[m
[32m+[m
[32m+[m[32m    this.addExplain(`[m
[32m+[m[32m      The array contains ${nBase} letters \`"${BASE.slice(0, nBase)}"\`[m
[32m+[m[32m      plus ${nEscapes + 1} explicit escape sequences ${escs}[m
[32m+[m[32m      specifying the single characters ${desc} respectively.[m
[32m+[m[32m      Additionally, it contains the implicit \`NUL\` character[m
[32m+[m[32m      terminating the string literal.  Hence .~sizeof(str)~ is[m
[32m+[m[32m      .$${nBase} + ${nEscapes + 1} + 1 = ${size}$.[m
[32m+[m[32m    `);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = StringArraySize;[m
[32m+[m[32mObject.assign(StringArraySize, {[m
[32m+[m[32m  id: 'stringArraySize',[m
[32m+[m[32m  title: 'Size of a Character Array',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Given the array declaration:[m
[32m+[m
[32m+[m[32m  \`\`\`[m
[32m+[m[32m  const char str[] = "#{str}";[m
[32m+[m[32m  \`\`\`[m
[32m+[m
[32m+[m[32m  what is .~sizeof(str)~?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst BASE = 'ABCDEFGHIJKL';[m
[32m+[m[32mconst ESCAPES = {[m
[32m+[m[32m  '\\t': 'tab',[m
[32m+[m[32m  '\\0': 'NUL',[m
[32m+[m[32m  '\\"': 'quote',[m
[32m+[m[32m  '\\n': 'newline',[m
[32m+[m[32m};[m
[32m+[m[32mconst ESCAPE_KEYS = Object.keys(ESCAPES);[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { nBase: () => Rand.int(BASE.length/2, BASE.length + 1),[m
[32m+[m[32m    nEscapes: () => Rand.int(1, 4),[m
[32m+[m[32m  },[m
[32m+[m[32m  { escapes: ({nEscapes}) =>[m[41m [m
[32m+[m[32m      Array.from({length: nEscapes},[m
[32m+[m[32m                 _ => ESCAPE_KEYS[Rand.int(0, ESCAPE_KEYS.length)]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { str: ({nBase, escapes}) => makeStr(nBase, escapes),[m
[32m+[m[32m    size: ({nBase, nEscapes}) => nBase + nEscapes + 1 + 1,[m
[32m+[m[32m    offsets: () => Rand.choices(4, [-3, -2, -1, 1, 2, 3 ]),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeStr(nBase, escapes) {[m
[32m+[m[32m  let str = '';[m
[32m+[m[32m  const len = Math.floor(nBase/escapes.length);[m
[32m+[m[32m  let index = 0;[m
[32m+[m[32m  for (let i = 0; i < escapes.length; i++) {[m
[32m+[m[32m    const segLen = len + Rand.int(-1, 2);[m
[32m+[m[32m    const index1 = (index + segLen < nBase) ? index + segLen : nBase;[m
[32m+[m[32m    str += BASE.substring(index, index1);[m
[32m+[m[32m    str += escapes[i];[m
[32m+[m[32m    index = index1;[m
[32m+[m[32m  }[m
[32m+[m[32m  if (index < nBase) str += BASE.substring(index, nBase);[m
[32m+[m[32m  return str + '\\0';[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new StringArraySize().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/to-signed.js b/exercises/questions/src/programming/to-signed.js[m
[1mnew file mode 100644[m
[1mindex 0000000..4871ad4[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/to-signed.js[m
[36m@@ -0,0 +1,103 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-03 17:19:29 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst { bitString, bitPoly } = require('./bit-util');[m
[32m+[m
[32m+[m[32mclass ToSigned extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    //this.addConstraints(MIN_NUMBER_ONES_CONSTRAINT);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(c => this.choice(c));[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(umtParse(BACKGROUND));[m
[32m+[m[32m    const { n, bits, poly } = this.params;[m
[32m+[m[32m    this.addExplain(`[m
[32m+[m[32m      (#{_0}) is correct since \`${bits}\` is .$${poly}$ which is[m
[32m+[m[32m      ${n}.  Alternately, form the negative by flipping the bits[m
[32m+[m[32m      \`${bits}\` of the original number to \`${flip_bits(bits)}\`[m
[32m+[m[32m      which is \`${-n - 1}\` and adding one giving us \`${-n}\`. So[m
[32m+[m[32m      the original number is \`${n}\`.[m
[32m+[m[32m    `);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ToSigned;[m
[32m+[m[32mObject.assign(ToSigned, {[m
[32m+[m[32m  id: 'toSigned',[m
[32m+[m[32m  title: 'Converting from Decimal to Signed Binary',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst N = 6;[m
[32m+[m[32mif (N > 8) throw 'code expects N <= 8';[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What is the ${N}-bit two's complement[m[41m [m
[32m+[m[32m  binary representation of the decimal number \`#{n}\`?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m[41m  [m
[32m+[m[32m  { n: () => Rand.int(-(2**(N-1)), 0),[m
[32m+[m[32m    positive: () => Rand.int(1, 9),[m
[32m+[m[32m    negative: () => Rand.int(1, 9),[m
[32m+[m[32m    multiplier: () => Rand.choice([2, 4, ]),[m
[32m+[m[32m    divisor: () => Rand.choice([0.25, 0.5, ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { bits: ({n}) => bitString(n, N),[m
[32m+[m[32m    poly: ({n}) => bitPoly(n, -1, N),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst MIN_NUMBER_ONES_CONSTRAINT =[m[41m [m
[32m+[m[32m  ({n}) => ([m
[32m+[m[32m    n.toString(2).[m[41m      [m
[32m+[m[32m      split('').[m
[32m+[m[32m      reduce((count, b) => count + Number(b), 0)[m
[32m+[m[32m    > 2[m
[32m+[m[32m  );[m
[32m+[m[41m     [m
[32m+[m[32mfunction flip_bits(bits) {[m
[32m+[m[32m  return bits.replace(/[01]/g, c => (c === '0') ? '1' : '0');[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  ({n}) => bitString(n, N),[m
[32m+[m[32m  ({n, positive}) => bitString(n + positive, N),[m
[32m+[m[32m  ({n, negative}) => bitString(n - negative, N),[m
[32m+[m[32m  ({n, multiplier}) => bitString(multiplier*n, N),[m
[32m+[m[32m  ({n, divisor}) => bitString(Math.floor(divisor*n), N),[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m  Each bit .$b_i$ in a 2's-complement signed binary number[m
[32m+[m[32m  .$b_{n-1}b_{n-2}\\ldots b_1b_0$ has weight .$2^i$.  Since .$b_{n-1}$[m
[32m+[m[32m  represents the sign bit, the value is .$-b_{n-1}\\times 2^{n - 1} +[m
[32m+[m[32m  b_{n-2}\\times 2^{n - 2} + \\ldots + b_1 \\times 2^1 + b_0 \\times[m
[32m+[m[32m  2^0 $[m
[32m+[m
[32m+[m[32m  An alternate way to figure out the value of a 2's-complement number[m
[32m+[m[32m  is to form the negative of that number and then negate the result.[m
[32m+[m[32m  Forming the negative of a 2's complement number can be done simply[m
[32m+[m[32m  by flipping the bits in the number followed by an increment.[m
[32m+[m
[32m+[m[32m  Note that with ${N}-bits, the represented integers range from[m
[32m+[m[32m  .$-2^{${N}-1}$ which is \`${-(2**(N-1))}\` to .$2^{${N}-1}-1$ which[m
[32m+[m[32m  is \`+${2**(N-1)-1}\`.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ToSigned().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/to-unsigned.js b/exercises/questions/src/programming/to-unsigned.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5645dff[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/to-unsigned.js[m
[36m@@ -0,0 +1,82 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-06 19:35:00 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m      require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mconst { bitString, bitPoly } = require('./bit-util');[m
[32m+[m
[32m+[m[32mclass ToUnsigned extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(MIN_NUMBER_ONES_CONSTRAINT);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    CHOICES.forEach(c => this.choice(c));[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(umtParse(BACKGROUND));[m
[32m+[m[32m    const { n } = this.params;[m
[32m+[m[32m    const bits = bitString(n);[m
[32m+[m[32m    const poly = bitPoly(n);[m
[32m+[m[32m    this.addExplain(`[m
[32m+[m[32m      (#{_0}) is correct since \`${bits}\` is .$${poly}$ which is ${n}.[m
[32m+[m[32m    `);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ToUnsigned;[m
[32m+[m[32mObject.assign(ToUnsigned, {[m
[32m+[m[32m  id: 'toUnsigned',[m
[32m+[m[32m  title: 'Converting to Unsigned Binary from Decimal',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What is the unsigned binary representation of the integer \`#{n}\`?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m[41m  [m
[32m+[m[32m  { n: () => Rand.int(16, 128),[m
[32m+[m[32m    positive: () => Rand.int(1, 9),[m
[32m+[m[32m    negative: () => Rand.int(1, 9),[m
[32m+[m[32m    multiplier: () => Rand.choice([2, 4, ]),[m
[32m+[m[32m    divisor: () => Rand.choice([0.25, 0.5, ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { bits: ({n}) => bitString(n),[m
[32m+[m[32m    poly: ({n}) => bitPoly(n),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst MIN_NUMBER_ONES_CONSTRAINT =[m[41m [m
[32m+[m[32m  ({n}) => ([m
[32m+[m[32m    n.toString(2).[m[41m      [m
[32m+[m[32m      split('').[m
[32m+[m[32m      reduce((count, b) => count + Number(b), 0)[m
[32m+[m[32m    > 2[m
[32m+[m[32m  );[m
[32m+[m[41m     [m
[32m+[m
[32m+[m[32mconst CHOICES = [[m
[32m+[m[32m  ({n}) => bitString(n),[m
[32m+[m[32m  ({n, positive}) => bitString(n + positive),[m
[32m+[m[32m  ({n, negative}) => bitString(n - negative),[m
[32m+[m[32m  ({n, multiplier}) => bitString(multiplier*n),[m
[32m+[m[32m  ({n, divisor}) => bitString(Math.floor(divisor*n)),[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mconst BACKGROUND = `[m
[32m+[m[32m  Each bit .$b_i$ in a binary number .$b_{n-1}b_{n-2}\\ldots b_1b_0$[m
[32m+[m[32m  has weight .$2^i$.  Hence .$b_{n-1}b_{n-2}\\ldots b_1b_0$ has value[m
[32m+[m[32m  .$b_{n-1}\\times 2^{n - 1} + b_{n-2}\\times 2^{n - 2} + \\ldots +[m[41m [m
[32m+[m[32m   b_1 \\times 2^1 + b_0 \\times 2^0 $[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ToUnsigned().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/programming/unsigned-overflow.js b/exercises/questions/src/programming/unsigned-overflow.js[m
[1mnew file mode 100644[m
[1mindex 0000000..65143fc[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/programming/unsigned-overflow.js[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-09-04 02:02:38 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass UnsignedOverflow extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 4; i++) {[m
[32m+[m[32m      this.choice(({triples}) => `\`${triples[i][0]} + ${triples[i][1]}\``);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.noneOfTheAbove();[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(makeExplain(this));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  answerIndex() {[m
[32m+[m[32m    return (this.params.doOverflow) ? 0 : 4;[m
[32m+[m[32m  }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = UnsignedOverflow;[m
[32m+[m[32mObject.assign(UnsignedOverflow, {[m
[32m+[m[32m  id: 'unsignedOverflow',[m
[32m+[m[32m  title: 'Overflow when Adding Unsigned Integers',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Assuming \`#{n}\`-bit unsigned integers,[m
[32m+[m[32m  which one of the following additions will overflow?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { n: () => Rand.int(6, 9),[m
[32m+[m[32m    doOverflow: () => Rand.int(1, 10) <= 8,[m
[32m+[m[32m  },[m
[32m+[m[32m  { triples: ({n, doOverflow}) => makeTriples(n, doOverflow),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeExplain(question) {[m
[32m+[m[32m  const {n, doOverflow, triples} = question.params;[m
[32m+[m[32m  const [min, max] = [0, 2**n - 1];[m
[32m+[m[32m  let explain = `[m
[32m+[m[32m      With \`${n}\`-bits, the representable range is [${min}, ${max}].[m
[32m+[m[32m    `;[m
[32m+[m[32m  for (const i of question.choiceOrder()) {[m
[32m+[m[32m    if (i === 4) break;[m
[32m+[m[32m    const [rands0, rands1, sum] = triples[i];[m
[32m+[m[32m    explain +=[m
[32m+[m[32m      `For (#{_${i}}), \`${rands0} + ${rands1} = ${sum}\` `;[m
[32m+[m[32m    if (sum > max) {[m
[32m+[m[32m      explain += 'which overflows and is the *answer*; ';[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      explain += 'which is within range; ';[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  if (doOverflow) {[m
[32m+[m[32m    explain += 'Hence the answer is (#{_0})';[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    explain += `[m
[32m+[m[32m        Since none of the additions overflow, the answer is[m[41m [m
[32m+[m[32m        (#{_4}) *None of the above*.[m
[32m+[m[32m       `;[m
[32m+[m[32m  }[m
[32m+[m[32m  return explain;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makeTriples(n, doOverflow) {[m
[32m+[m[32m  const triples = [];[m
[32m+[m[32m  const [min, max] = [0, 2**n - 1];[m
[32m+[m[32m  while (triples.length < 4) {[m
[32m+[m[32m    const isOverflow = (triples.length === 0) && doOverflow;[m
[32m+[m[32m    const sum = (isOverflow) ?  max + Rand.int(1, 6) : Rand.int(1, max + 1);[m
[32m+[m[32m    const rand0Range = [2, sum];[m
[32m+[m[32m    const rand0 = Rand.int(...rand0Range);[m
[32m+[m[32m    const rand1 = sum - rand0;[m
[32m+[m[32m    triples.push([rand0, rand1, sum]);[m
[32m+[m[32m  }[m
[32m+[m[32m  return triples;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new UnsignedOverflow().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/tools/makefiles.js b/exercises/questions/src/tools/makefiles.js[m
[1mnew file mode 100644[m
[1mindex 0000000..1c53407[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/tools/makefiles.js[m
[36m@@ -0,0 +1,208 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst assert = require('assert');[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-02-09 20:58:40 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Makefiles extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({alts}) => `${alts[i].join(', ')}.`);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[41m    [m
[32m+[m[32m    this.addExplain(this.explain());[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  explain() {[m
[32m+[m[32m    const { answer, topTarget, isFlexExplain } = this.params;[m
[32m+[m[32m    const qanswer = answer.map(t => `\`${t}\``);[m
[32m+[m[32m    const order = Array.from(qanswer).reverse();[m
[32m+[m[32m    let text = '';[m
[32m+[m[32m    if (topTarget.length > 0) {[m
[32m+[m[32m      text += `[m
[32m+[m[32m        The \`make\` command explicitly specifies a top-level[m[41m [m
[32m+[m[32m        target \`${topTarget}\`.[m
[32m+[m[32m      `;[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      text += `[m
[32m+[m[32m        Since the \`make\` command does not explicitly specify a target,[m
[32m+[m[32m        it defaults to the first target \`all\` in the \`Makefile\`[m
[32m+[m[32m        which depends on target ${order[0]}.[m
[32m+[m[32m      `;[m
[32m+[m[32m    }[m
[32m+[m[32m    text += `[m
[32m+[m[32m      Target ${order[0]} has a prerequisite target[m[41m [m
[32m+[m[32m      ${order.slice(1).join(', which has a prerequisite target ')}[m
[32m+[m[32m      which does not depend on anything. Since a target[m
[32m+[m[32m      can be built only after its prerequisites, the[m
[32m+[m[32m      targets are built in the order ${qanswer.join(', ')}[m
[32m+[m[32m      which is choice (#{_0}).[m
[32m+[m[32m    `;[m
[32m+[m[32m    text += (isFlexExplain) ? FLEX_MAKE : BISON_MAKE;[m
[32m+[m[32m    return text;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Makefiles;[m
[32m+[m[32mObject.assign(Makefiles, {[m
[32m+[m[32m  id: 'makefiles',[m
[32m+[m[32m  title: 'Makefiles',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  What will be the contents of the lines output by running[m[41m [m
[32m+[m[32m  \`make #{topTarget}\` on the following \`Makefile\`?[m
[32m+[m
[32m+[m[32m  \`\`\`[m
[32m+[m[32m  #{makefile}[m
[32m+[m[32m  \`\`\`[m
[32m+[m
[32m+[m[32m  *Note*: The \`echo\` command echoes its arguments on to standard[m[41m [m
[32m+[m[32m  output.  The \`@\` in front of the \`echo\` command prevents[m
[32m+[m[32m  \`make\` from displaying the command as it executes it.[m
[32m+[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst TARGET_NAMES = [[m
[32m+[m[32m  [ 'p', 'q', 'r', 's', ],[m
[32m+[m[32m  [ '10', '20', '30', '40', ],[m
[32m+[m[32m  [ 'A', 'B', 'C', 'D', ],[m
[32m+[m[32m];[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  { targets: () => Rand.choice(TARGET_NAMES),[m
[32m+[m[32m    topIndex: () => Rand.choice([0, 1]),[m
[32m+[m[32m    isEmptyTarget: () => Rand.choice([true, true, false]),[m
[32m+[m[32m    isFlexExplain: () => Rand.choice([true, false]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { depIndexes: ({targets}) => Rand.permutation(targets.length),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    depsMap: ({targets, depIndexes}) => dependencyMap(targets, depIndexes),[m
[32m+[m[32m    answer: ({targets, depIndexes, topIndex}) =>[m
[32m+[m[32m      depIndexes.slice(topIndex).reverse().map(i => targets[i]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { alts: ({targets, depIndexes, answer}) =>[m
[32m+[m[32m      makeAlts(targets, depIndexes, answer),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    makefile: ({targets, depsMap, depIndexes}) =>[m
[32m+[m[32m      makefile(targets, depsMap, depIndexes),[m
[32m+[m[32m    topTarget: ({topIndex, depIndexes, targets, isEmptyTarget}) =>[m
[32m+[m[32m      (!isEmptyTarget || topIndex > 0) ? targets[depIndexes[topIndex]] : '',[m
[32m+[m[32m  },[m[41m  [m
[32m+[m[32m];[m
[32m+[m
[32m+[m[32mfunction makeAlts(targets, depIndexes, answer) {[m
[32m+[m[32m  const alts = [ answer ];[m
[32m+[m[32m  if (answer.length < targets.length) {[m
[32m+[m[32m    assert(answer.length === targets.length - 1);[m
[32m+[m[32m    alts.push(Array.from(depIndexes).reverse().map(i => targets[i]));[m
[32m+[m[32m  }[m
[32m+[m[32m  const t0 = answer[0]; //try to start some answers with this element[m
[32m+[m[32m  const targets0 = targets.filter(t => t !== t0);[m
[32m+[m[32m  while (alts.length < 5) {[m
[32m+[m[32m    let isSeen, alt;[m
[32m+[m[32m    do {[m
[32m+[m[32m      const toss0 = (Rand.int(0, 2) < 1);[m
[32m+[m[32m      alt = toss0[m
[32m+[m [32m? [t0].concat(Rand.permutation(targets0))[m
[32m+[m [32m: Rand.permutation(targets);[m
[32m+[m[32m      if (answer.length !== alt.length) {[m
[32m+[m [32massert(answer.length === targets.length - 1,[m
[32m+[m [32m      `failed ${answer.length} === ${targets.length - 1}`);[m
[32m+[m [32mif (Rand.int(0, 2) < 1) { //shorten alt to answer.length[m
[32m+[m [32m  const rm = Rand.choice(alt);[m
[32m+[m [32m  alt = alt.filter(a => a !== rm);[m
[32m+[m [32m}[m
[32m+[m[32m      }[m[41m      [m
[32m+[m[32m      isSeen = alts.some(alt0 => alt0.every((a0, i) => alt[i] === a0));[m
[32m+[m[32m    } while (isSeen);[m
[32m+[m[32m    alts.push(alt);[m
[32m+[m[32m  }[m
[32m+[m[32m  return alts;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction dependencyMap(targets, depIndexes) {[m
[32m+[m[32m  const deps = {};[m
[32m+[m[32m  for (const [i, index] of depIndexes.entries()) {[m
[32m+[m[32m    const dep = (i < depIndexes.length - 1) ? targets[depIndexes[i + 1]] : '';[m
[32m+[m[32m    deps[targets[index]] = dep;[m
[32m+[m[32m  }[m
[32m+[m[32m  return deps;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction makefile(targets, depsMap, depIndexes) {[m
[32m+[m[32m  let make = `all:\t${targets[depIndexes[0]]}\n\n`;[m
[32m+[m[32m  for (const target of targets) {[m
[32m+[m[32m    make += `${target}:\t${depsMap[target]}\n`;[m
[32m+[m[32m    make += `\t@echo ${target}\n\n`;[m
[32m+[m[32m  }[m
[32m+[m[32m  return make;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst FLEX_MAKE = `[m
[32m+[m[32mA practical example of multi-level \`make\` dependencies is when using[m
[32m+[m[32ma scanner generator like \`flex\` for building a tokenizer.  A[m
[32m+[m[32m\`Makefile\` for a scanner may look like the following:[m
[32m+[m
[32m+[m[32m\`\`\`[m
[32m+[m[32mLEX =  flex[m
[32m+[m[32mCXX =  g++[m
[32m+[m[32mCXXFLAGS = -g -Wall[m
[32m+[m
[32m+[m[32mscanner:     scanner.o[m
[32m+[m[32m                $(CXX) $? -o $@[m
[32m+[m
[32m+[m[32mscanner.o:   scanner.cc scanner.hh[m
[32m+[m[32m                $(CXX) -c $(CXXFLAGS) $<[m[41m [m
[32m+[m
[32m+[m[32mscanner.cc:  scanner.l[m
[32m+[m         [32m$(LEX) --c++ $< -o$@[m
[32m+[m[32m\`\`\`[m
[32m+[m
[32m+[m[32mUsually, the above rules are built in to \`make\` and need not[m
[32m+[m[32mbe explicitly provided.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst BISON_MAKE = `[m
[32m+[m[32mA practical example of multi-level \`make\` dependencies is when using[m
[32m+[m[32ma parser generator like \`yacc\` or \`bison\` for building a parser.[m
[32m+[m[32mA \`Makefile\` for a parser may look like the following:[m
[32m+[m
[32m+[m[32m\`\`\`[m
[32m+[m[32mYACC =  bison[m
[32m+[m[32mCXX =  g++[m
[32m+[m[32mCXXFLAGS = -g -Wall[m
[32m+[m
[32m+[m[32mall:         parser[m
[32m+[m
[32m+[m[32mparser:              parser.o[m
[32m+[m[32m                $(CXX) $? -o $@[m
[32m+[m
[32m+[m[32mparser.o:    parser.cc parser.hh[m
[32m+[m[32m                $(CXX) -c $(CXXFLAGS) $<[m[41m [m
[32m+[m
[32m+[m[32mparser.cc:   parser.l[m
[32m+[m         [32m$(YACC) -L c++ $< -o $@[m
[32m+[m[32m\`\`\`[m
[32m+[m
[32m+[m[32mUsually, the above rules are built in to \`make\` and need not[m
[32m+[m[32mbe explicitly provided.[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Makefiles().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/tools/meta.js b/exercises/questions/src/tools/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..652ec6f[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/tools/meta.js[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  id: 'tools',[m
[32m+[m[32m  title: 'Tools',[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    require('./makefiles'),[m
[32m+[m[32m    require('./sh-metachars'),[m
[32m+[m[32m    require('./sh-quotes'),[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
[32m+[m
[1mdiff --git a/exercises/questions/src/tools/sh-metachars.js b/exercises/questions/src/tools/sh-metachars.js[m
[1mnew file mode 100644[m
[1mindex 0000000..a370811[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/tools/sh-metachars.js[m
[36m@@ -0,0 +1,130 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-03-29 15:48:03 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass ShMetaChars extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({alts}) => describe(alts[i]));[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(this.explain());[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  explain() {[m
[32m+[m[32m    const {alts} = this.params;[m
[32m+[m[32m    let text = '';[m
[32m+[m[32m    text += `[m
[32m+[m[32m      The answer is (#{_0}) since[m[41m [m
[32m+[m[32m      ${alts[0][1].toLowerCase()} ${alts[0][0]} is not[m[41m [m
[32m+[m[32m      special to the shell.[m
[32m+[m[32m    `;[m
[32m+[m[32m    for (const i of this.choiceOrder()) {[m
[32m+[m[32m      if (i === 0) continue;[m
[32m+[m[32m      const isMulti = (alts[i][0].indexOf('and') >= 0);[m
[32m+[m[32m      const verb = isMulti ? 'are' : 'is';[m
[32m+[m[32m      const subj = isMulti ? 'they are' : 'it is';[m
[32m+[m[32m      text += `[m
[32m+[m[32m        (#{_${i}}): ${alts[i][1]} ${alts[i][0]} ${verb}  special to the[m
[32m+[m[32m        shell since ${subj} used  ${alts[i][2]}.[m
[32m+[m[32m      `;[m
[32m+[m[32m    }[m
[32m+[m[32m    return text;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ShMetaChars;[m
[32m+[m[32mObject.assign(ShMetaChars, {[m
[32m+[m[32m  id: 'shMetaChars',[m
[32m+[m[32m  title: 'Shell MetaChars',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Which *one* of the following character is *not* special to a[m[41m [m
[32m+[m[32m  sh-based shell?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mfunction describe(c) { return `${c[1]} ${c[0]}.`; }[m
[32m+[m
[32m+[m[32mconst META_CHARS = [[m
[32m+[m[32m  ['`*`',[m[41m [m
[32m+[m[32m    'Asterisk',[m
[32m+[m[32m    `as a file globbing metachar when used outside quotes to match any[m
[32m+[m[32m     sequence of file-name characters (including the empty sequence)`,[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`?`',[m[41m [m
[32m+[m[32m    'Question mark',[m[41m [m
[32m+[m[32m    `as a file globbing metachar when used outside quotes to[m
[32m+[m[32m     match any single character`,[m
[32m+[m[32m  ],[m
[32m+[m[32m  ["`[` and ' `]`",[m[41m [m
[32m+[m[32m    'square brackets',[m
[32m+[m[32m    `as file globbing metachars when used outside quotes to[m[41m [m
[32m+[m[32m     match any character specified by the contents of the square brackets`,[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`|`',[m[41m [m
[32m+[m[32m    'Vertical bar',[m
[32m+[m[32m    'for piping the output of one command to another',[m
[32m+[m[32m  ],[m
[32m+[m[32m  ["`(` and `)`",[m[41m [m
[32m+[m[32m    'Parentheses',[m
[32m+[m[32m    `for running a command in a sub-shell`,[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`$`',[m[41m [m
[32m+[m[32m    'Dollar sign',[m
[32m+[m[32m    'for accessing the value of a shell or environment variable',[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`\\`',  'Backslash', 'used for quoting following character', ],[m
[32m+[m[32m  ['````',[m[41m [m
[32m+[m[32m    'backquote',[m
[32m+[m[32m    `to interpolate the output of the command within backquotes[m
[32m+[m[32m     into the current command`,[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`\'`',[m[41m [m
[32m+[m[32m    'Forward quote',[m
[32m+[m[32m    'to quote all the content within the forward quotes',[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`"`',[m[41m [m
[32m+[m[32m    'Double quote',[m
[32m+[m[32m    'to quote all file-globbing meta-chars within the double quotes',[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`&`',  'Ampersand', 'to run a command in the background' ],[m
[32m+[m[32m  ['`;`',[m[41m [m
[32m+[m[32m    'Semi-colon',[m
[32m+[m[32m    'to terminate a command, allowing multiple commands per line',[m
[32m+[m[32m  ],[m
[32m+[m[32m  ['`#`',  'Hash sign', 'to start a comment to end-of-line', ],[m
[32m+[m[32m  ['`<`',  'Less than', 'for input redirection', ],[m
[32m+[m[32m  ['`>`',  'Greater than', 'for output redirection', ],[m
[32m+[m[32m];[m
[32m+[m[32mconst NON_META_CHARS = [[m
[32m+[m[32m  ['`,`',  'Comma', ],[m
[32m+[m[32m  ['`^`',  'Up arrow', ],[m
[32m+[m[32m  ['`.`',  'Period', ],[m
[32m+[m[32m  ['`:`',  'Colon', ],[m
[32m+[m[32m  ['`@`',  'At sign', ],[m
[32m+[m[32m  ['`=`',  'Equal sign', ],[m
[32m+[m[32m  ['`/`',  'Forward slash', ],[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    alts: () => [ Rand.choice(NON_META_CHARS) ].[m
[32m+[m[32m      concat(Rand.choices(4, META_CHARS)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ShMetaChars().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/tools/sh-quotes.js b/exercises/questions/src/tools/sh-quotes.js[m
[1mnew file mode 100644[m
[1mindex 0000000..bd116f1[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/tools/sh-quotes.js[m
[36m@@ -0,0 +1,167 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2020-05-03 15:05:46 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass ShQuotes extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      const j = i;[m
[32m+[m[32m      this.choice(params => QUOTE_INFOS[params.alts[j]].desc(params) + '.');[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addQuestion(makeQuestion(this.params));[m
[32m+[m[32m    this.addExplain(QUOTE_INFOS[this.params.alts[0]].explain);[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  explain() {[m
[32m+[m[32m    const {alts} = this.params;[m
[32m+[m[32m    let text = '';[m
[32m+[m[32m    text += `[m
[32m+[m[32m      The answer is (#{_0}) since[m[41m [m
[32m+[m[32m      ${alts[0][1].toLowerCase()} ${alts[0][0]} is not[m[41m [m
[32m+[m[32m      special to the shell.[m
[32m+[m[32m    `;[m
[32m+[m[32m    for (const i of this.choiceOrder()) {[m
[32m+[m[32m      if (i === 0) continue;[m
[32m+[m[32m      const isMulti = (alts[i][0].indexOf('and') >= 0);[m
[32m+[m[32m      const verb = isMulti ? 'are' : 'is';[m
[32m+[m[32m      const subj = isMulti ? 'they are' : 'it is';[m
[32m+[m[32m      text += `[m
[32m+[m[32m        (#{_${i}}): ${alts[i][1]} ${alts[i][0]} ${verb}  special to the[m
[32m+[m[32m        shell since ${subj} used  ${alts[i][2]}.[m
[32m+[m[32m      `;[m
[32m+[m[32m    }[m
[32m+[m[32m    return text;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = ShQuotes;[m
[32m+[m[32mObject.assign(ShQuotes, {[m
[32m+[m[32m  id: 'shQuotes',[m
[32m+[m[32m  title: 'Shell Quotes',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mfunction quotes(quoteSpec) {[m
[32m+[m[32m  return ([m
[32m+[m[32m    (quoteSpec === 'q') ? [ "'", "'" ][m
[32m+[m[32m    : (quoteSpec === 'qq') ? [ '"', '"' ] : [ '$(', ')' ][m
[32m+[m[32m  );[m
[32m+[m[32m}[m
[32m+[m[32mfunction makeQuestion(params) {[m
[32m+[m[32m  const {prefix, suffix, vars, vals, cmd, q0, q1} = params;[m
[32m+[m[32m  const cmdDesc = (cmd === 'min') ? 'minimum' : 'maximum';[m
[32m+[m[32m  const [q0a, q0z] = quotes(q0);[m
[32m+[m[32m  const [q1a, q1z] = quotes(q1);[m
[32m+[m[32m  let text = '';[m
[32m+[m[32m  text += `[m
[32m+[m[32m    The command \`${cmd}\` outputs the *${cmdDesc}* of its arguments.[m
[32m+[m[32m    What will be the result of executing the following sequence of[m
[32m+[m[32m    commands in a bash shell?[m
[32m+[m[32m  `;[m
[32m+[m[32m  text += `[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    $ cmd=${cmd} ${vars[0]}=${vals[0]} ${vars[1]}=${vals[1]}[m
[32m+[m[32m    $ echo ${q0a}${prefix}${q1a}${suffix}${q1z}${q0z}[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst QUOTE_INFOS = {[m
[32m+[m[32m  q_qq: {[m
[32m+[m[32m    desc: ({cmd, vars, suffix}) => `[m
[32m+[m[32m      \`the $cmd of $${vars[0]} and $${vars[1]} is "${suffix}"\`[m
[32m+[m[32m   `,[m
[32m+[m[32m    explain: `The content within single-quotes \`'\` is never evaluated.`,[m
[32m+[m[32m  },[m
[32m+[m[32m  q_x: {[m
[32m+[m[32m    desc: ({cmd, vars, suffix}) => `[m
[32m+[m[32m     \`the $cmd of $${vars[0]} and $${vars[1]} is $(${suffix})\`[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `The content within single-quotes \`'\` is never evaluated.`[m
[32m+[m[32m  },[m
[32m+[m[32m  qq_q: {[m
[32m+[m[32m    desc: ({cmd, vals, suffix}) => `[m
[32m+[m[32m      \`the ${cmd} of ${vals[0]} and ${vals[1]} is '${suffix}'\`[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      The shell variables within the double quotes \`"\` are evaluated,[m
[32m+[m[32m      but the content within single-quotes \`'\` is never evaluated.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  qq_x: {[m
[32m+[m[32m    desc: ({cmd, vals, cmdVal}) => `[m
[32m+[m[32m      \`the ${cmd} of ${vals[0]} and ${vals[1]} is ${cmdVal}\`[m
[32m+[m[32m    `,[m
[32m+[m[32m    explain: `[m
[32m+[m[32m      The shell variables within the double quotes \`"\` are evaluated[m
[32m+[m[32m      and the result of evaluating the command within the \`$(\` and[m
[32m+[m[32m      \`)\` is interpolated into the output.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  x_q: {[m
[32m+[m[32m    desc: () => 'Most probably an error will occur',[m
[32m+[m[32m    explain: `[m
[32m+[m[32m     The shell will try to execute the content within the \`$(\` and[m
[32m+[m[32m      \`)\` as a command.  So unless \`the\` is a command, an[m
[32m+[m[32m      error will occur.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  x_qq: {[m
[32m+[m[32m    desc: () => 'Most probably an error will occur',[m
[32m+[m[32m    explain: `[m
[32m+[m[32m     The shell will try to execute the content within the \`$(\` and[m
[32m+[m[32m      \`)\` as a command.  So unless \`the\` is a command, an[m
[32m+[m[32m      error will occur.[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction makeAlts(key) {[m
[32m+[m[32m  let alts0 = [ 'q_qq', 'q_x', 'qq_q', 'qq_x' ];[m
[32m+[m[32m  const alts = [key];[m
[32m+[m[32m  if (key === 'x_q' || key === 'x_qq') {[m
[32m+[m[32m    return alts.concat(alts0);[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    alts0.splice(alts0.indexOf(key), 1);[m
[32m+[m[32m    return alts.concat(alts0).concat([Rand.choice(['x_q', 'x_qq'])]);[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m}[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    vars: () => Rand.choice([['i', 'j'], ['x', 'y'], ['a', 'b']]),[m
[32m+[m[32m    vals: () => [ Rand.int(1, 100), Rand.int(1, 100) ],[m
[32m+[m[32m    cmd: () => Rand.choice(['max', 'min']),[m
[32m+[m[32m    q0: () => Rand.choice([ 'q', 'qq', 'qq', 'qq', 'qq', 'x', 'x' ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    q1: ({q0}) => Rand.choice(q0 === 'q' ? [ 'qq', 'x'][m[41m [m
[32m+[m                 [32m      : q0 === 'x' ? [ 'qq', 'q' ] : [ 'q', 'x' ]),[m
[32m+[m[32m  },[m
[32m+[m[32m  { _type: 'nonRandom',[m
[32m+[m[32m    prefix: ({cmd, vars}) => `the $cmd of $${vars[0]} and $${vars[1]} is `,[m
[32m+[m[32m    suffix: ({cmd, vars}) => `${cmd} $${vars[0]} $${vars[1]}`,[m
[32m+[m[32m    cmdVal: ({cmd, vals}) =>[m
[32m+[m[32m      cmd === 'max' ? (vals[0] > vals[1] ? vals[0] : vals[1])[m
[32m+[m[32m    : (vals[0] < vals[1] ? vals[0] : vals[1]),[m
[32m+[m[32m    key: ({q0, q1}) => `${q0}_${q1}`,[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    alts: ({key}) => makeAlts(key),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new ShQuotes().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/x86/fns-asm.c b/exercises/questions/src/x86/fns-asm.c[m
[1mnew file mode 100644[m
[1mindex 0000000..1f798e3[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/fns-asm.c[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mint f0(int a, int b, int c) { return a + b + c; }[m
[32m+[m[32mint f1(int a, int b, int c) { return a - b - c; }[m
[32m+[m[32mint f2(int a, int b, int c) { return 2*a + 3*b + 4*c; }[m
[32m+[m[32mint f3(int a, int b, int c) { return a * b + c; }[m
[32m+[m[32mint f4(int a, int b, int c) { return a + b * c; }[m
[32m+[m[32mint f5(int a, int b, int c) { return a * c + b; }[m
[32m+[m[32mint f6(int a, int b, int c) { return b*b - 4*a*c; }[m
[32m+[m[32mint f7(int a, int b, int c) { return a + b - c; }[m
[32m+[m[32mint f8(int a, int b, int c) { return a - b + c; }[m
[32m+[m[32mint f9(int a, int b, int c) { return 5*a + 42 + b + c; }[m
[32m+[m[32mint f10(int a, int b, int c) { return 5*a + 42 - b + c; }[m
[32m+[m[32mint f11(int a, int b, int c) { return 5*a + 42 + b*c; }[m
[32m+[m[32mint f12(int a, int b, int c) { return 5*a + 42 - b*c; }[m
[32m+[m[32mint f13(int a, int b, int c) { return 9*a + 42 + b*c; }[m
[32m+[m[32mint f14(int a, int b, int c) { return 9*a + 42 - b*c; }[m
[32m+[m[32mint f15(int a, int b, int c) { return 9*a + 42 + b - c; }[m
[1mdiff --git a/exercises/questions/src/x86/fns-asm.js b/exercises/questions/src/x86/fns-asm.js[m
[1mnew file mode 100644[m
[1mindex 0000000..3f30fe9[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/fns-asm.js[m
[36m@@ -0,0 +1,284 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-10-23 19:55:30 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass FnsAsm extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    const dir =[m
[32m+[m[32m      (params && params.dir) || Rand.choice(['cToAsm', 'asmToC']);[m
[32m+[m[32m    this.addParamSpec({dir});[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    if (dir === 'cToAsm') {[m
[32m+[m[32m      this.addQuestion(C_TO_ASM_QUESTION);[m
[32m+[m[32m      for (let i = 0; i < 5; i++) {[m
[32m+[m [32mthis.choice(({cleanAsm})=> {[m
[32m+[m [32m  return `[m
[32m+[m[32m            The x86-64 instruction sequence:[m
[32m+[m
[32m+[m[32m            ~~~[m
[32m+[m[32m            ${cleanAsm[i]}[m
[32m+[m[32m            ~~~[m
[32m+[m
[32m+[m[32m          `});[m
[32m+[m[32m      } //for[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      this.addQuestion(ASM_TO_C_QUESTION);[m
[32m+[m[32m      for (let i = 0; i < 5; i++) {[m
[32m+[m [32mthis.choice(({cCodes}) => {[m
[32m+[m [32m  return `[m
[32m+[m[32m            The C Function:[m
[32m+[m
[32m+[m[32m            ~~~[m
[32m+[m[32m            ${cCodes[i]}[m
[32m+[m[32m            ~~~[m
[32m+[m[32m          `;[m
[32m+[m [32m});[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[41m    [m
[32m+[m[32m    this.addExplain(explain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FnsAsm;[m
[32m+[m[32mObject.assign(FnsAsm, {[m
[32m+[m[32m  id: 'fnsAsm',[m
[32m+[m[32m  title: 'Converting between C and Assembly',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst C_TO_ASM_QUESTION = `[m
[32m+[m[32m  Given the following C function:[m
[32m+[m
[32m+[m[32m  .code(lang=c)[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  #{cCodes[0]}[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  which of the following x86-64 assembly language sequences[m
[32m+[m[32m  implements it?[m
[32m+[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst ASM_TO_C_QUESTION = `[m
[32m+[m[32m  Which one of the following C functions correctly describes the[m
[32m+[m[32m  the following x86-44 instruction sequence?[m
[32m+[m
[32m+[m[32m  .code(lang=s)[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m[32m  #{cleanAsm[0]}[m
[32m+[m[32m  ~~~[m[41m  [m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[41m  [m
[32m+[m
[32m+[m[32mfunction explain({asmCodes}) {[m
[32m+[m[32m  return `[m
[32m+[m[32m    (#{_0}) is correct, as shown by the annotations on the x86 code[m
[32m+[m[32m    sequence:[m
[32m+[m
[32m+[m[32m    .code(lang=s)[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    ${asmCodes[0]}[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//Single fnsAsm instruction can compute these multiples[m
[32m+[m[32mconst FNS_ASM = {[m
[32m+[m[32m  f0: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a + b + c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                           #edi=a, esi=b, edx=c[m
[32m+[m [32maddl        %esi, %edi        #edi = a + b[m
[32m+[m [32mleal        (%rdi,%rdx), %eax #eax = a + b + c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f1: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a - b - c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                           #edi=a, esi=b, edx=c[m
[32m+[m [32msubl        %esi, %edi        #edi = a - b[m
[32m+[m [32mmovl        %edi, %eax        #eax = a - b[m
[32m+[m [32msubl        %edx, %eax        #eax = a - b - c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f2: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 2*a + 3*b + 4*c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        (%rsi,%rsi,2), %eax #eax = 3*b[m
[32m+[m [32mleal        (%rax,%rdi,2), %eax #eax = 2*a + 3*b[m
[32m+[m [32mleal        (%rax,%rdx,4), %eax #eax = 2*a + 3*b + 4*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f3: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a * b + c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32mimull       %esi, %edi          #edi = a*b[m
[32m+[m [32mleal        (%rdi,%rdx), %eax   #eax = a*b + c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f4: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a + b * c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32mimull       %edx, %esi          #esi = b*c[m
[32m+[m [32mleal        (%rsi,%rdi), %eax   #eax = a + b*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f5: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a * c + b; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32mimull       %edx, %edi          #edi=a*c[m
[32m+[m [32mleal        (%rdi,%rsi), %eax   #eax = a*c + b[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f6: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return b*b - 4*a*c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32mimull       %esi, %esi          #esi = b*b[m
[32m+[m [32msall        $2, %edi            #edi = 4*a[m
[32m+[m [32mimull       %edi, %edx          #edx = 4*a*c[m
[32m+[m [32mmovl        %esi, %eax          #eax = b*b[m
[32m+[m [32msubl        %edx, %eax          #eax = b*b - 4*a*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f7: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a + b - c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        (%rdi,%rsi), %eax   #eax = a + b[m
[32m+[m [32msubl        %edx, %eax          #eax = a + b - c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f8: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return a - b + c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                             #edi=a, esi=b, edx=c[m
[32m+[m [32msubl        %esi, %edi          #edi = a - b[m
[32m+[m [32mleal        (%rdi,%rdx), %eax   #eax = a - b + c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f9: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 5*a + 42 + b + c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %eax #eax = 5*a + 42[m
[32m+[m [32maddl        %esi, %eax            #eax = 5*a + 42 + b[m
[32m+[m [32maddl        %edx, %eax            #eax = 5*a + 42 + b + c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f10: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 5*a + 42 - b + c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %eax #eax = 5*a + 42[m
[32m+[m [32msubl        %esi, %eax            #eax = 5*a + 42 - b[m
[32m+[m [32maddl        %edx, %eax            #eax = 5*a + 42 - b + c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f11: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 5*a + 42 + b*c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %ecx #ecx = 5*a + 42[m
[32m+[m [32mimull       %edx, %esi            #esi = b*c[m
[32m+[m [32mleal        (%rcx,%rsi), %eax     #eax = 5*a + 42 + b*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f12: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 5*a + 42 - b*c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %eax #eax = 5*a + 42[m
[32m+[m [32mimull       %edx, %esi            #esi = b*c[m
[32m+[m [32msubl        %esi, %eax            #eax = 5*a + 42 - b*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f13: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 9*a + 42 + b*c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,8), %ecx #ecx = 9*a + 42[m
[32m+[m [32mimull       %edx, %esi            #esi = b*c[m
[32m+[m [32mleal        (%rcx,%rsi), %eax     #eax = 9*a + 42 + b*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f14: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 9*a + 42 - b*c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,8), %eax #eax = 9*a + 42[m
[32m+[m [32mimull       %edx, %esi            #esi = b*c[m
[32m+[m [32msubl        %esi, %eax            #eax = 9*a + 42 - b*c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m  f15: {[m
[32m+[m[32m    fn: `int f(int a, int b, int c) { return 9*a + 42 + b - c; }`,[m
[32m+[m[32m    asm: `[m
[32m+[m[32m     f:                               #edi=a, esi=b, edx=c[m
[32m+[m [32mleal        42(%rdi,%rdi,8), %eax #eax = 9*a + 42[m
[32m+[m [32maddl        %esi, %eax            #eax = 9*a + 42 + b[m
[32m+[m [32msubl        %edx, %eax            #eax = 9*a + 42 + b - c[m
[32m+[m [32mret[m
[32m+[m[32m    `,[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m[32mconst FNS = Object.keys(FNS_ASM);[m
[32m+[m
[32m+[m[32mfunction stripAnnotations(asm) { return asm.replace(/\#.+$/mg, ''); }[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    fns: () => Rand.choices(5, FNS),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    cCodes: ({fns}) => fns.map(f=>FNS_ASM[f].fn),[m
[32m+[m[32m    asmCodes: ({fns}) => fns.map(f=>FNS_ASM[f].asm),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    cleanAsm: ({asmCodes}) => asmCodes.map(asm=>stripAnnotations(asm)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new FnsAsm().qaText());[m
[32m+[m[32m}[m
[32m+[m
[1mdiff --git a/exercises/questions/src/x86/fns-asm.s b/exercises/questions/src/x86/fns-asm.s[m
[1mnew file mode 100644[m
[1mindex 0000000..8729050[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/fns-asm.s[m
[36m@@ -0,0 +1,1093 @@[m
[32m+[m [32m.file       "fns-asm.c"[m
[32m+[m [32m.text[m
[32m+[m[32m.Ltext0:[m
[32m+[m [32m.globl      f0[m
[32m+[m [32m.type       f0, @function[m
[32m+[m[32mf0:[m
[32m+[m[32m.LFB0:[m
[32m+[m [32m.file 1 "fns-asm.c"[m
[32m+[m [32m.loc 1 1 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL0:[m
[32m+[m [32m.loc 1 1 0[m
[32m+[m [32maddl        %esi, %edi[m
[32m+[m[32m.LVL1:[m
[32m+[m [32mleal        (%rdi,%rdx), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE0:[m
[32m+[m [32m.size       f0, .-f0[m
[32m+[m [32m.globl      f1[m
[32m+[m [32m.type       f1, @function[m
[32m+[m[32mf1:[m
[32m+[m[32m.LFB1:[m
[32m+[m [32m.loc 1 2 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL2:[m
[32m+[m [32m.loc 1 2 0[m
[32m+[m [32msubl        %esi, %edi[m
[32m+[m[32m.LVL3:[m
[32m+[m [32mmovl        %edi, %eax[m
[32m+[m [32msubl        %edx, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE1:[m
[32m+[m [32m.size       f1, .-f1[m
[32m+[m [32m.globl      f2[m
[32m+[m [32m.type       f2, @function[m
[32m+[m[32mf2:[m
[32m+[m[32m.LFB2:[m
[32m+[m [32m.loc 1 3 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL4:[m
[32m+[m [32m.loc 1 3 0[m
[32m+[m [32mleal        (%rsi,%rsi,2), %eax[m
[32m+[m [32mleal        (%rax,%rdi,2), %eax[m
[32m+[m [32mleal        (%rax,%rdx,4), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE2:[m
[32m+[m [32m.size       f2, .-f2[m
[32m+[m [32m.globl      f3[m
[32m+[m [32m.type       f3, @function[m
[32m+[m[32mf3:[m
[32m+[m[32m.LFB3:[m
[32m+[m [32m.loc 1 4 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL5:[m
[32m+[m [32m.loc 1 4 0[m
[32m+[m [32mimull       %esi, %edi[m
[32m+[m[32m.LVL6:[m
[32m+[m [32mleal        (%rdi,%rdx), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE3:[m
[32m+[m [32m.size       f3, .-f3[m
[32m+[m [32m.globl      f4[m
[32m+[m [32m.type       f4, @function[m
[32m+[m[32mf4:[m
[32m+[m[32m.LFB4:[m
[32m+[m [32m.loc 1 5 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL7:[m
[32m+[m [32m.loc 1 5 0[m
[32m+[m [32mimull       %edx, %esi[m
[32m+[m[32m.LVL8:[m
[32m+[m [32mleal        (%rsi,%rdi), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE4:[m
[32m+[m [32m.size       f4, .-f4[m
[32m+[m [32m.globl      f5[m
[32m+[m [32m.type       f5, @function[m
[32m+[m[32mf5:[m
[32m+[m[32m.LFB5:[m
[32m+[m [32m.loc 1 6 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL9:[m
[32m+[m [32m.loc 1 6 0[m
[32m+[m [32mimull       %edx, %edi[m
[32m+[m[32m.LVL10:[m
[32m+[m [32mleal        (%rdi,%rsi), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE5:[m
[32m+[m [32m.size       f5, .-f5[m
[32m+[m [32m.globl      f6[m
[32m+[m [32m.type       f6, @function[m
[32m+[m[32mf6:[m
[32m+[m[32m.LFB6:[m
[32m+[m [32m.loc 1 7 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL11:[m
[32m+[m [32m.loc 1 7 0[m
[32m+[m [32mimull       %esi, %esi[m
[32m+[m[32m.LVL12:[m
[32m+[m [32msall        $2, %edi[m
[32m+[m[32m.LVL13:[m
[32m+[m [32mimull       %edi, %edx[m
[32m+[m[32m.LVL14:[m
[32m+[m [32mmovl        %esi, %eax[m
[32m+[m [32msubl        %edx, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE6:[m
[32m+[m [32m.size       f6, .-f6[m
[32m+[m [32m.globl      f7[m
[32m+[m [32m.type       f7, @function[m
[32m+[m[32mf7:[m
[32m+[m[32m.LFB7:[m
[32m+[m [32m.loc 1 8 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL15:[m
[32m+[m [32m.loc 1 8 0[m
[32m+[m [32mleal        (%rdi,%rsi), %eax[m
[32m+[m [32msubl        %edx, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE7:[m
[32m+[m [32m.size       f7, .-f7[m
[32m+[m [32m.globl      f8[m
[32m+[m [32m.type       f8, @function[m
[32m+[m[32mf8:[m
[32m+[m[32m.LFB8:[m
[32m+[m [32m.loc 1 9 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL16:[m
[32m+[m [32m.loc 1 9 0[m
[32m+[m [32msubl        %esi, %edi[m
[32m+[m[32m.LVL17:[m
[32m+[m [32mleal        (%rdi,%rdx), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE8:[m
[32m+[m [32m.size       f8, .-f8[m
[32m+[m [32m.globl      f9[m
[32m+[m [32m.type       f9, @function[m
[32m+[m[32mf9:[m
[32m+[m[32m.LFB9:[m
[32m+[m [32m.loc 1 10 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL18:[m
[32m+[m [32m.loc 1 10 0[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %eax[m
[32m+[m [32maddl        %esi, %eax[m
[32m+[m [32maddl        %edx, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE9:[m
[32m+[m [32m.size       f9, .-f9[m
[32m+[m [32m.globl      f10[m
[32m+[m [32m.type       f10, @function[m
[32m+[m[32mf10:[m
[32m+[m[32m.LFB10:[m
[32m+[m [32m.loc 1 11 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL19:[m
[32m+[m [32m.loc 1 11 0[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %eax[m
[32m+[m [32msubl        %esi, %eax[m
[32m+[m [32maddl        %edx, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE10:[m
[32m+[m [32m.size       f10, .-f10[m
[32m+[m [32m.globl      f11[m
[32m+[m [32m.type       f11, @function[m
[32m+[m[32mf11:[m
[32m+[m[32m.LFB11:[m
[32m+[m [32m.loc 1 12 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL20:[m
[32m+[m [32m.loc 1 12 0[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %ecx[m
[32m+[m [32mimull       %edx, %esi[m
[32m+[m[32m.LVL21:[m
[32m+[m [32mleal        (%rcx,%rsi), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE11:[m
[32m+[m [32m.size       f11, .-f11[m
[32m+[m [32m.globl      f12[m
[32m+[m [32m.type       f12, @function[m
[32m+[m[32mf12:[m
[32m+[m[32m.LFB12:[m
[32m+[m [32m.loc 1 13 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL22:[m
[32m+[m [32m.loc 1 13 0[m
[32m+[m [32mleal        42(%rdi,%rdi,4), %eax[m
[32m+[m [32mimull       %edx, %esi[m
[32m+[m[32m.LVL23:[m
[32m+[m [32msubl        %esi, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE12:[m
[32m+[m [32m.size       f12, .-f12[m
[32m+[m [32m.globl      f13[m
[32m+[m [32m.type       f13, @function[m
[32m+[m[32mf13:[m
[32m+[m[32m.LFB13:[m
[32m+[m [32m.loc 1 14 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL24:[m
[32m+[m [32m.loc 1 14 0[m
[32m+[m [32mleal        42(%rdi,%rdi,8), %ecx[m
[32m+[m [32mimull       %edx, %esi[m
[32m+[m[32m.LVL25:[m
[32m+[m [32mleal        (%rcx,%rsi), %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE13:[m
[32m+[m [32m.size       f13, .-f13[m
[32m+[m [32m.globl      f14[m
[32m+[m [32m.type       f14, @function[m
[32m+[m[32mf14:[m
[32m+[m[32m.LFB14:[m
[32m+[m [32m.loc 1 15 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL26:[m
[32m+[m [32m.loc 1 15 0[m
[32m+[m [32mleal        42(%rdi,%rdi,8), %eax[m
[32m+[m [32mimull       %edx, %esi[m
[32m+[m[32m.LVL27:[m
[32m+[m [32msubl        %esi, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE14:[m
[32m+[m [32m.size       f14, .-f14[m
[32m+[m [32m.globl      f15[m
[32m+[m [32m.type       f15, @function[m
[32m+[m[32mf15:[m
[32m+[m[32m.LFB15:[m
[32m+[m [32m.loc 1 16 0[m
[32m+[m [32m.cfi_startproc[m
[32m+[m[32m.LVL28:[m
[32m+[m [32m.loc 1 16 0[m
[32m+[m [32mleal        42(%rdi,%rdi,8), %eax[m
[32m+[m [32maddl        %esi, %eax[m
[32m+[m [32msubl        %edx, %eax[m
[32m+[m [32mret[m
[32m+[m [32m.cfi_endproc[m
[32m+[m[32m.LFE15:[m
[32m+[m [32m.size       f15, .-f15[m
[32m+[m[32m.Letext0:[m
[32m+[m [32m.section    .debug_info,"",@progbits[m
[32m+[m[32m.Ldebug_info0:[m
[32m+[m [32m.long       0x46d[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.long       .Ldebug_abbrev0[m
[32m+[m [32m.byte       0x8[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.long       .LASF0[m
[32m+[m [32m.byte       0xc[m
[32m+[m [32m.long       .LASF1[m
[32m+[m [32m.long       .LASF2[m
[32m+[m [32m.quad       .Ltext0[m
[32m+[m [32m.quad       .Letext0-.Ltext0[m
[32m+[m [32m.long       .Ldebug_line0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f15"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x10[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB15[m
[32m+[m [32m.quad       .LFE15-.LFB15[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x10[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x10[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x10[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x4[m
[32m+[m [32m.byte       0x4[m
[32m+[m [32m.byte       0x5[m
[32m+[m [32m.string     "int"[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f14"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xf[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB14[m
[32m+[m [32m.quad       .LFE14-.LFB14[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0xbc[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xf[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xf[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST12[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xf[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f13"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xe[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB13[m
[32m+[m [32m.quad       .LFE13-.LFB13[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x101[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xe[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xe[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST11[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xe[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f12"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xd[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB12[m
[32m+[m [32m.quad       .LFE12-.LFB12[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x146[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xd[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xd[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST10[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xd[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f11"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xc[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB11[m
[32m+[m [32m.quad       .LFE11-.LFB11[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x18b[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xc[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xc[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST9[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xc[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f10"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xb[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB10[m
[32m+[m [32m.quad       .LFE10-.LFB10[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x1ce[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xb[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xb[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xb[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f9"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xa[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB9[m
[32m+[m [32m.quad       .LFE9-.LFB9[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x210[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xa[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xa[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0xa[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f8"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x9[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB8[m
[32m+[m [32m.quad       .LFE8-.LFB8[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x254[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x9[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST8[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x9[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x9[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f7"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x8[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB7[m
[32m+[m [32m.quad       .LFE7-.LFB7[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x296[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x8[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x8[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x8[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f6"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x7[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB6[m
[32m+[m [32m.quad       .LFE6-.LFB6[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x2de[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x7[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST5[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x7[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST6[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x7[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST7[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f5"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x6[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB5[m
[32m+[m [32m.quad       .LFE5-.LFB5[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x322[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x6[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST4[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x6[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x6[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f4"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x5[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB4[m
[32m+[m [32m.quad       .LFE4-.LFB4[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x366[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x5[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x5[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST3[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x5[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f3"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x4[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB3[m
[32m+[m [32m.quad       .LFE3-.LFB3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x3aa[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x4[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST2[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x4[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x4[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f2"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x3[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB2[m
[32m+[m [32m.quad       .LFE2-.LFB2[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x3ec[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x3[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x3[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x3[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.string     "f1"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x2[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB1[m
[32m+[m [32m.quad       .LFE1-.LFB1[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.long       0x430[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x2[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST1[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x2[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x2[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x6[m
[32m+[m [32m.string     "f0"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.quad       .LFB0[m
[32m+[m [32m.quad       .LFE0-.LFB0[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x9c[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.string     "a"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.long       .LLST0[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "b"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.string     "c"[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.long       0x70[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.section    .debug_abbrev,"",@progbits[m
[32m+[m[32m.Ldebug_abbrev0:[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.uleb128 0x11[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.uleb128 0x25[m
[32m+[m [32m.uleb128 0xe[m
[32m+[m [32m.uleb128 0x13[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0xe[m
[32m+[m [32m.uleb128 0x1b[m
[32m+[m [32m.uleb128 0xe[m
[32m+[m [32m.uleb128 0x11[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.uleb128 0x12[m
[32m+[m [32m.uleb128 0x7[m
[32m+[m [32m.uleb128 0x10[m
[32m+[m [32m.uleb128 0x17[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.uleb128 0x2e[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.uleb128 0x3f[m
[32m+[m [32m.uleb128 0x19[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0x8[m
[32m+[m [32m.uleb128 0x3a[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3b[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x27[m
[32m+[m [32m.uleb128 0x19[m
[32m+[m [32m.uleb128 0x49[m
[32m+[m [32m.uleb128 0x13[m
[32m+[m [32m.uleb128 0x11[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.uleb128 0x12[m
[32m+[m [32m.uleb128 0x7[m
[32m+[m [32m.uleb128 0x40[m
[32m+[m [32m.uleb128 0x18[m
[32m+[m [32m.uleb128 0x2117[m
[32m+[m [32m.uleb128 0x19[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.uleb128 0x13[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0x8[m
[32m+[m [32m.uleb128 0x3a[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3b[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x49[m
[32m+[m [32m.uleb128 0x13[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.uleb128 0x18[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x4[m
[32m+[m [32m.uleb128 0x24[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3e[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0x8[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.uleb128 0x5[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0x8[m
[32m+[m [32m.uleb128 0x3a[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3b[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x49[m
[32m+[m [32m.uleb128 0x13[m
[32m+[m [32m.uleb128 0x2[m
[32m+[m [32m.uleb128 0x17[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.uleb128 0x6[m
[32m+[m [32m.uleb128 0x2e[m
[32m+[m [32m.byte       0x1[m
[32m+[m [32m.uleb128 0x3f[m
[32m+[m [32m.uleb128 0x19[m
[32m+[m [32m.uleb128 0x3[m
[32m+[m [32m.uleb128 0x8[m
[32m+[m [32m.uleb128 0x3a[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x3b[m
[32m+[m [32m.uleb128 0xb[m
[32m+[m [32m.uleb128 0x27[m
[32m+[m [32m.uleb128 0x19[m
[32m+[m [32m.uleb128 0x49[m
[32m+[m [32m.uleb128 0x13[m
[32m+[m [32m.uleb128 0x11[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.uleb128 0x12[m
[32m+[m [32m.uleb128 0x7[m
[32m+[m [32m.uleb128 0x40[m
[32m+[m [32m.uleb128 0x18[m
[32m+[m [32m.uleb128 0x2117[m
[32m+[m [32m.uleb128 0x19[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.section    .debug_loc,"",@progbits[m
[32m+[m[32m.Ldebug_loc0:[m
[32m+[m[32m.LLST12:[m
[32m+[m [32m.quad       .LVL26-.Ltext0[m
[32m+[m [32m.quad       .LVL27-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.quad       .LVL27-.Ltext0[m
[32m+[m [32m.quad       .LFE14-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST11:[m
[32m+[m [32m.quad       .LVL24-.Ltext0[m
[32m+[m [32m.quad       .LVL25-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.quad       .LVL25-.Ltext0[m
[32m+[m [32m.quad       .LFE13-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST10:[m
[32m+[m [32m.quad       .LVL22-.Ltext0[m
[32m+[m [32m.quad       .LVL23-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.quad       .LVL23-.Ltext0[m
[32m+[m [32m.quad       .LFE12-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST9:[m
[32m+[m [32m.quad       .LVL20-.Ltext0[m
[32m+[m [32m.quad       .LVL21-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.quad       .LVL21-.Ltext0[m
[32m+[m [32m.quad       .LFE11-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST8:[m
[32m+[m [32m.quad       .LVL16-.Ltext0[m
[32m+[m [32m.quad       .LVL17-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.quad       .LVL17-.Ltext0[m
[32m+[m [32m.quad       .LFE8-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST5:[m
[32m+[m [32m.quad       .LVL11-.Ltext0[m
[32m+[m [32m.quad       .LVL13-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.quad       .LVL13-.Ltext0[m
[32m+[m [32m.quad       .LFE6-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST6:[m
[32m+[m [32m.quad       .LVL11-.Ltext0[m
[32m+[m [32m.quad       .LVL12-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.quad       .LVL12-.Ltext0[m
[32m+[m [32m.quad       .LFE6-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST7:[m
[32m+[m [32m.quad       .LVL11-.Ltext0[m
[32m+[m [32m.quad       .LVL14-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.quad       .LVL14-.Ltext0[m
[32m+[m [32m.quad       .LFE6-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x51[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST4:[m
[32m+[m [32m.quad       .LVL9-.Ltext0[m
[32m+[m [32m.quad       .LVL10-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.quad       .LVL10-.Ltext0[m
[32m+[m [32m.quad       .LFE5-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST3:[m
[32m+[m [32m.quad       .LVL7-.Ltext0[m
[32m+[m [32m.quad       .LVL8-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.quad       .LVL8-.Ltext0[m
[32m+[m [32m.quad       .LFE4-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x54[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST2:[m
[32m+[m [32m.quad       .LVL5-.Ltext0[m
[32m+[m [32m.quad       .LVL6-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.quad       .LVL6-.Ltext0[m
[32m+[m [32m.quad       .LFE3-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST1:[m
[32m+[m [32m.quad       .LVL2-.Ltext0[m
[32m+[m [32m.quad       .LVL3-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.quad       .LVL3-.Ltext0[m
[32m+[m [32m.quad       .LFE1-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m[32m.LLST0:[m
[32m+[m [32m.quad       .LVL0-.Ltext0[m
[32m+[m [32m.quad       .LVL1-.Ltext0[m
[32m+[m [32m.value      0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.quad       .LVL1-.Ltext0[m
[32m+[m [32m.quad       .LFE0-.Ltext0[m
[32m+[m [32m.value      0x4[m
[32m+[m [32m.byte       0xf3[m
[32m+[m [32m.uleb128 0x1[m
[32m+[m [32m.byte       0x55[m
[32m+[m [32m.byte       0x9f[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.section    .debug_aranges,"",@progbits[m
[32m+[m [32m.long       0x2c[m
[32m+[m [32m.value      0x2[m
[32m+[m [32m.long       .Ldebug_info0[m
[32m+[m [32m.byte       0x8[m
[32m+[m [32m.byte       0[m
[32m+[m [32m.value      0[m
[32m+[m [32m.value      0[m
[32m+[m [32m.quad       .Ltext0[m
[32m+[m [32m.quad       .Letext0-.Ltext0[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.quad       0[m
[32m+[m [32m.section    .debug_line,"",@progbits[m
[32m+[m[32m.Ldebug_line0:[m
[32m+[m [32m.section    .debug_str,"MS",@progbits,1[m
[32m+[m[32m.LASF1:[m
[32m+[m [32m.string     "fns-asm.c"[m
[32m+[m[32m.LASF0:[m
[32m+[m [32m.string     "GNU C11 7.4.0 -mtune=generic -march=x86-64 -g -Og -fstack-protector-strong"[m
[32m+[m[32m.LASF2:[m
[32m+[m [32m.string     "/home/umrigar/projects/cs220/exercises/questions/src/x86"[m
[32m+[m [32m.ident      "GCC: (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0"[m
[32m+[m [32m.section    .note.GNU-stack,"",@progbits[m
[1mdiff --git a/exercises/questions/src/x86/frame-offsets.js b/exercises/questions/src/x86/frame-offsets.js[m
[1mnew file mode 100644[m
[1mindex 0000000..ba7b841[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/frame-offsets.js[m
[36m@@ -0,0 +1,158 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-15 22:37:42 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass FrameOffsets extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({choices, names})=> `[m
[32m+[m [32m\`${names[0]}\` at offset ${choices[i][0]},[m[41m [m
[32m+[m[32m        \`${names[1]}\` at offset ${choices[i][1]} and[m[41m [m
[32m+[m [32m\`${names[2]}\` at offset ${choices[i][2]}.[m
[32m+[m[32m       `);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[41m    [m
[32m+[m[32m    this.addExplain(explain(this));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = FrameOffsets;[m
[32m+[m[32mObject.assign(FrameOffsets, {[m
[32m+[m[32m  id: 'frameOffsets',[m
[32m+[m[32m  title: 'Relative Offsets in X86-32 Frame',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32mRecall that the x86-32 calling convention uses a stack frame with[m
[32m+[m[32m\`ebp\` used as a frame pointer.  On entry to an x86-32 function,[m
[32m+[m[32mthe caller's frame pointer is pushed on to the stack and the[m
[32m+[m[32mcallee's new frame pointer is set to point to this saved word[m[41m [m
[32m+[m[32mon the stack.[m
[32m+[m
[32m+[m[32mWhich one of the following alternatives are plausible offsets from the[m
[32m+[m[32mframe pointer for #{descs[0]} \`#{names[0]}\`, #{descs[1]}[m
[32m+[m[32m\`#{names[1]}\` and #{descs[2]} \`#{names[2]}\`?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mfunction isOk(varType, offset) {[m
[32m+[m[32m  return (varType === 'arg') ? offset > 4 : offset < 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explainText(varType, name, offset) {[m
[32m+[m[32m  let text = `\`${name}\` at offset ${offset} `;[m
[32m+[m[32m  const isCorrect = isOk(varType, offset);[m
[32m+[m[32m  if (isCorrect) {[m
[32m+[m[32m    text += 'is feasible since the offset is ';[m
[32m+[m[32m    text += (varType === 'arg') ? `> 4` : `< 0`;[m
[32m+[m[32m  }[m
[32m+[m[32m  else {[m
[32m+[m[32m    text += 'is not feasible since the offset is ';[m
[32m+[m[32m    text += (varType === 'arg') ? `not greater-than 4` : `not less-than 0`;[m
[32m+[m[32m  }[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction explain(question) {[m
[32m+[m[32m  const {vars, names, choices} = question.params;[m
[32m+[m[32m  let text = `[m
[32m+[m[32m    When the function is entered, the return address is on top of the[m
[32m+[m[32m    stack.  After the frame pointer for the new frame is set up,[m
[32m+[m[32m    offset 0 from the new frame pointer will refer to the saved frame[m
[32m+[m[32m    pointer and offset 4 (the 32 in x86-32 means that all addresses[m
[32m+[m[32m    are 4 bytes) will refer to the return address.  All arguments must[m
[32m+[m[32m    be before the return address; i.e. they must be at positive[m
[32m+[m[32m    offsets greater-than 4 and all local variables must be at negative[m
[32m+[m[32m    offsets less-than-or-equal-to -4 from the frame pointer.[m
[32m+[m
[32m+[m[32m    (#{_0}) is *correct* since ${explainText(vars[0], names[0], choices[0][0])},[m
[32m+[m[32m    ${explainText(vars[1], names[1], choices[0][1])} and[m
[32m+[m[32m    ${explainText(vars[2], names[2], choices[0][2])}.[m
[32m+[m
[32m+[m[32m  `;[m
[32m+[m[32m  for (const i of question.choiceOrder()) {[m
[32m+[m[32m    if (i === 0) continue;[m
[32m+[m[32m    text += `(#{_${i}}) is incorrect since `;[m
[32m+[m[32m    const errIndexes =[m
[32m+[m[32m      [0, 1, 2].filter(e => !isOk(vars[e], choices[i][e]));[m
[32m+[m[32m    text += errIndexes.map(e => explainText(vars[e], names[e], choices[i][e])).[m
[32m+[m[32m      join(' and ') + '.\n\n';[m
[32m+[m[32m  }[m
[32m+[m[32m  return text;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst OFFSET_SETS = {[m
[32m+[m[32m  local: {[m
[32m+[m[32m    isOk: [ -4, -8, -12, -16 ],[m
[32m+[m[32m    isError: [0, 4, 8, 12, 16, 20 ],[m
[32m+[m[32m  },[m
[32m+[m[32m  arg: {[m
[32m+[m[32m    isOk: [ 8, 12, 16, 20 ],[m
[32m+[m[32m    isError: [ 0, 4, -4, -8, -12, -16 ],[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction offsetChoices(vars) {[m
[32m+[m[32m  const choices = [];[m
[32m+[m[32m  for (let i = 0; i < 5; i++) {[m
[32m+[m[32m    //errMask[bit i] === 1 iff var[i] offset is in error[m
[32m+[m[32m    const errMask = (i === 0) ? 0 : Rand.int(1, 8);[m
[32m+[m[32m    const offsetSets = [0, 1, 2].[m
[32m+[m[32m      map(e => {[m
[32m+[m [32mconst err = (errMask & (1 << e)) !== 0 ? 'isError' : 'isOk';[m
[32m+[m [32mreturn OFFSET_SETS[vars[e]][err];[m
[32m+[m[32m      });[m
[32m+[m[32m    let choice;[m
[32m+[m[32m    do {[m
[32m+[m[32m      choice = [];[m
[32m+[m[32m      offsetSets.forEach(s => choice.push(Rand.choice(s)));[m
[32m+[m[32m    } while ((new Set(choice)).size != 3); //offsets are distinct[m
[32m+[m[32m    choices.push(choice); //choiceQuestion framework ensures distinct choices[m
[32m+[m[32m  }[m
[32m+[m[32m  return choices;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst SUFFIXES = ['x', 'y', 'z', 'a', 'b', 'c'];[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    var0: () => Rand.choice(['arg', 'local']),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    vars: ({var0}) => Rand.permutation([m
[32m+[m[32m      (var0 === 'arg')[m
[32m+[m [32m? [ 'arg', 'local', 'local' ][m
[32m+[m [32m: [ 'local', 'arg', 'arg' ][m
[32m+[m[32m    ),[m[41m      [m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    choices: ({vars}) => offsetChoices(vars),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    descs: ({vars}) =>[m
[32m+[m[32m      vars.map((v) => (v == 'arg') ? 'argument ' : 'local variable'),[m
[32m+[m[32m    names: ({vars}) => {[m
[32m+[m[32m      let args = 1, locals = 1;[m
[32m+[m[32m      return vars.map(v => (v === 'arg')[m
[32m+[m         [32m      ? `arg_${SUFFIXES[args++]}`[m
[32m+[m         [32m      : `local_${SUFFIXES[locals++]}`);[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new FrameOffsets().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/x86/lea.js b/exercises/questions/src/x86/lea.js[m
[1mnew file mode 100644[m
[1mindex 0000000..131dbe9[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/lea.js[m
[36m@@ -0,0 +1,127 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-10-23 19:45:41 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass Lea extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    const dir =[m
[32m+[m[32m      (params && params.dir) || Rand.choice(['codeToValue', 'valueToCode']);[m
[32m+[m[32m    this.addParamSpec({dir});[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(({multipliers}) => (new Set(multipliers)).size == 5);[m
[32m+[m[32m    if (dir === 'codeToValue') {[m
[32m+[m[32m      this.addQuestion(CODE_TO_VALUE_QUESTION);[m
[32m+[m[32m      for (let i = 0; i < 5; i++) {[m
[32m+[m [32mthis.choice(({multipliers})=>`.$a_0\\times${multipliers[i]}$.`);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    else {[m
[32m+[m[32m      this.addQuestion(VALUE_TO_CODE_QUESTION);[m
[32m+[m[32m      for (let i = 0; i < 5; i++) {[m
[32m+[m [32mthis.choice(({codes}) => {[m
[32m+[m [32m  return `[m
[32m+[m[32m            The code sequence:[m
[32m+[m
[32m+[m[32m            ~~~[m
[32m+[m[32m            ${codes[i]}[m
[32m+[m[32m            ~~~[m
[32m+[m[32m          `;[m
[32m+[m [32m});[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[41m    [m
[32m+[m[32m    this.addExplain(explain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = Lea;[m
[32m+[m[32mObject.assign(Lea, {[m
[32m+[m[32m  id: 'lea',[m
[32m+[m[32m  title: 'Using lea Instruction for Computation',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mconst CODE_TO_VALUE_QUESTION = `[m
[32m+[m[32m  Given the following code sequence:[m
[32m+[m
[32m+[m[32m  .code(lang=s)[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  #{codes[0]}[m
[32m+[m
[32m+[m[32m  ~~~[m
[32m+[m
[32m+[m[32m  Assuming that the value of \`rax\` before executing the code[m
[32m+[m[32m  sequence is .$a_0$ and that there is no overflow, which one of the[m
[32m+[m[32m  following expressions describes the value of \`rax\` after execution[m
[32m+[m[32m  of the above code sequence?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst VALUE_TO_CODE_QUESTION = `[m
[32m+[m[32m  Assuming no overflow and that the initial value of \`rax\` is[m
[32m+[m[32m  .$a_0$, which one of the following code sequences will set the value[m
[32m+[m[32m  of \`rax\` to .$a_0 \\times #{multipliers[0]}$?[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mfunction explain({seqs}) {[m
[32m+[m[32m  let msg = `[m
[32m+[m[32m    (#{_0}) is correct, since the \`lea\` code sequence[m
[32m+[m[32m    performs the following computation:[m
[32m+[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  let m = 1;[m
[32m+[m[32m  for (const s of seqs[0]) {[m[41m [m
[32m+[m[32m    m *= Number(s);[m
[32m+[m[32m    msg += `${LEA_MULTIPLIERS[s]} # rax *= ${s}; i.e. rax = a0*${m}\n`;[m
[32m+[m[32m  }[m
[32m+[m[32m  msg += `[m
[32m+[m[32m    ~~~[m
[32m+[m[32m  `;[m
[32m+[m[32m  return msg;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//Single lea instruction can compute these multiples[m
[32m+[m[32mconst LEA_MULTIPLIERS = {[m
[32m+[m[32m  2: 'leaq (, %rax, 2), %rax',[m
[32m+[m[32m  3: 'leaq (%rax, %rax, 2), %rax',[m
[32m+[m[32m  4: 'leaq (, %rax, 4), %rax',[m
[32m+[m[32m  5: 'leaq (%rax, %rax, 4), %rax',[m
[32m+[m[32m  8: 'leaq (, %rax, 8), %rax',[m
[32m+[m[32m  9: 'leaq (%rax, %rax, 8), %rax',[m
[32m+[m[32m};[m
[32m+[m[32mconst MULTIPLIERS = Object.keys(LEA_MULTIPLIERS);[m
[32m+[m[32mconst [MIN_LEN, MAX_LEN] = [2, 3];[m
[32m+[m
[32m+[m[32mfunction seq() {[m
[32m+[m[32m  const len = Rand.int(MIN_LEN, MAX_LEN + 1);[m
[32m+[m[32m  return Array.from({length: len}).map(_ => Rand.choice(MULTIPLIERS));[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    seqs: () => Array.from({length: 5}).map(_=> seq()),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    multipliers:[m
[32m+[m[32m      ({seqs}) => seqs.map(s => s.reduce((acc, m)=>acc*Number(m), 1)),[m
[32m+[m[32m    codes:[m
[32m+[m[32m      ({seqs}) => seqs.map(s => s.map(m=>`  ${LEA_MULTIPLIERS[m]}\n`).join('')),[m
[32m+[m[32m  }[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new Lea().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/questions/src/x86/meta.js b/exercises/questions/src/x86/meta.js[m
[1mnew file mode 100644[m
[1mindex 0000000..33aa487[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/meta.js[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m  id: 'x86',[m
[32m+[m[32m  title: 'x86 Assembly Language',[m
[32m+[m[32m  nested: [[m
[32m+[m[32m    require('./lea'),[m
[32m+[m[32m    require('./fns-asm'),[m
[32m+[m[32m    require('./frame-offsets'),[m
[32m+[m[32m    require('./struct-access'),[m
[32m+[m[32m  ],[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32m/*[m
[32m+[m[32m  loop asm: sum(n), fact(n), sum-squares, product-squares, sum-odds, sum-evens,[m[41m [m
[32m+[m[32m            product-odds, product-evens, fibonacci[m
[32m+[m[32m */[m
[1mdiff --git a/exercises/questions/src/x86/struct-access.js b/exercises/questions/src/x86/struct-access.js[m
[1mnew file mode 100644[m
[1mindex 0000000..d42fd54[m
[1m--- /dev/null[m
[1m+++ b/exercises/questions/src/x86/struct-access.js[m
[36m@@ -0,0 +1,259 @@[m
[32m+[m[32m'use strict';[m
[32m+[m
[32m+[m[32mconst TIMESTAMP = 'Time-stamp: <2019-11-15 22:50:25 umrigar>';[m
[32m+[m
[32m+[m[32mconst {ChoiceQuestion, Rand, umtParse, emacsTimestampToMillis} =[m
[32m+[m[32m  require('gen-q-and-a');[m
[32m+[m
[32m+[m[32mclass StructAccess extends ChoiceQuestion {[m
[32m+[m
[32m+[m[32m  constructor(params) {[m
[32m+[m[32m    super(params);[m
[32m+[m[32m    this.addParamSpec(PARAMS);[m
[32m+[m[32m    this.addConstraints(({offsets}) => offsets.every(x => x[0] !== x[1]));[m
[32m+[m[32m    this.addQuestion(QUESTION);[m
[32m+[m[32m    for (let i = 0; i < 5; i++) {[m
[32m+[m[32m      this.choice(({info, offsets}) => `[m
[32m+[m[32m      .~p->${info.offsets[offsets[i][0]]} - p->${info.offsets[offsets[i][1]]}~.[m
[32m+[m[32m      `);[m
[32m+[m[32m    }[m
[32m+[m[32m    this.freeze();[m
[32m+[m[32m    this.addExplain(explain(this.params));[m
[32m+[m[32m    this.makeContent();[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mmodule.exports = StructAccess;[m
[32m+[m[32mObject.assign(StructAccess, {[m
[32m+[m[32m  id: 'structAccess',[m
[32m+[m[32m  title: 'Accessing Fields of a Structure',[m
[32m+[m[32m  timestamp: emacsTimestampToMillis(TIMESTAMP),[m
[32m+[m[32m  version: '1.0.0',[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32mfunction explain({info, offsets}) {[m
[32m+[m[32m  return `[m
[32m+[m[32m    The first instruction accesses .~p->${info.offsets[offsets[0][0]]}~[m
[32m+[m[32m    at offset \`${offsets[0][0]}\`; the second instruction accesses[m
[32m+[m[32m    .~p->${info.offsets[offsets[0][1]]}~ at offset \`${offsets[0][1]}\`;[m
[32m+[m[32m    hence the instruction sequence evaluates[m[41m [m
[32m+[m[32m    .~p->${info.offsets[offsets[0][0]]} - p->${info.offsets[offsets[0][1]]}~[m
[32m+[m[32m    which is choice (#{_0}).[m
[32m+[m[32m  `;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst QUESTION = `[m
[32m+[m[32m  Given the following C declaration:[m
[32m+[m
[32m+[m[32m  .code(lang=c)[m
[32m+[m
[32m+[m[32m   ~~~[m
[32m+[m
[32m+[m[32m   #{decl}[m
[32m+[m
[32m+[m[32m   ~~~[m
[32m+[m
[32m+[m[32m   Assuming \`sizeof(int)\` is 4 and that \`rdx\` contains a pointer[m
[32m+[m[32m   \`p\` to a \`#{type}\`, what does the value computed into \`eax\`[m
[32m+[m[32m   by the following code represent?[m
[32m+[m
[32m+[m[32m   .code(lang=s)[m
[32m+[m
[32m+[m[32m   ~~~[m
[32m+[m[32m   movl #{offsets[0][0]}(%rdx), %eax[m
[32m+[m[32m   subl #{offsets[0][1]}(%rdx), %eax[m
[32m+[m[32m   ~~~[m
[32m+[m[32m`;[m
[32m+[m
[32m+[m[32mconst TYPE_INFOS = {[m
[32m+[m
[32m+[m[32m  Sphere: {[m
[32m+[m[32m    isNormal: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m          int radius;[m
[32m+[m[32m        } Sphere;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `center[0]`,[m
[32m+[m [32m4: `center[1]`,[m
[32m+[m [32m8: `center[2]`,[m
[32m+[m [32m12:`radius`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m    isFlipped: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int radius;[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m        } Sphere;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `radius`,[m[41m [m
[32m+[m [32m4: `center[0]`,[m
[32m+[m [32m8: `center[1]`,[m
[32m+[m [32m12:`center[2]`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  Tetrahedron: {[m
[32m+[m[32m    isNormal: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m          int side;[m
[32m+[m[32m        } Tetrahedron;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `center[0]`,[m
[32m+[m [32m4: `center[1]`,[m
[32m+[m [32m8: `center[2]`,[m
[32m+[m [32m12:`side`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m    isFlipped: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int side;[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m        } Tetrahedron;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `side`,[m[41m [m
[32m+[m [32m4: `center[0]`,[m
[32m+[m [32m8: `center[1]`,[m
[32m+[m [32m12:`center[2]`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  Cuboid: {[m
[32m+[m[32m    isNormal: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m          int length, width, height;[m
[32m+[m[32m        } Cuboid;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `center[0]`,[m
[32m+[m [32m4: `center[1]`,[m
[32m+[m [32m8: `center[2]`,[m
[32m+[m [32m12:`length`,[m
[32m+[m [32m16:`width`,[m
[32m+[m [32m20:`height`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m    isFlipped: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int length, width, height;[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m        } Cuboid;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0:`length`,[m
[32m+[m [32m4: `width`,[m
[32m+[m [32m8: `height`,[m
[32m+[m [32m12: `center[0]`,[m
[32m+[m [32m16: `center[1]`,[m
[32m+[m [32m20: `center[2]`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m  },[m[41m [m
[32m+[m
[32m+[m[32m  Cylinder: {[m
[32m+[m[32m    isNormal: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m          int radius, height;[m
[32m+[m[32m        } Cylinder;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `center[0]`,[m
[32m+[m [32m4: `center[1]`,[m
[32m+[m [32m8: `center[2]`,[m
[32m+[m [32m12:`radius`,[m
[32m+[m [32m16:`height`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m    isFlipped: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int radius, height;[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m        } Cylinder;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0:`radius`,[m
[32m+[m [32m4: `height`,[m
[32m+[m [32m8: `center[0]`,[m
[32m+[m [32m12: `center[1]`,[m
[32m+[m [32m26: `center[2]`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m  },[m[41m [m
[32m+[m
[32m+[m[32m  Cone: {[m
[32m+[m[32m    isNormal: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m          int radius, height;[m
[32m+[m[32m        } Cone;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0: `center[0]`,[m
[32m+[m [32m4: `center[1]`,[m
[32m+[m [32m8: `center[2]`,[m
[32m+[m [32m12:`radius`,[m
[32m+[m [32m16:`height`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m    isFlipped: {[m
[32m+[m[32m      decl: `[m
[32m+[m[32m        typedef struct {[m
[32m+[m[32m          int radius, height;[m
[32m+[m[32m          int center[3];[m
[32m+[m[32m        } Cone;[m
[32m+[m[32m      `,[m
[32m+[m[32m      offsets: {[m
[32m+[m [32m0:`radius`,[m
[32m+[m [32m4: `height`,[m
[32m+[m [32m8: `center[0]`,[m
[32m+[m [32m12: `center[1]`,[m
[32m+[m [32m16: `center[2]`,[m
[32m+[m[32m      },[m
[32m+[m[32m    },[m[41m [m
[32m+[m[32m  },[m[41m [m
[32m+[m
[32m+[m[32m};[m
[32m+[m[32mconst TYPES = Object.keys(TYPE_INFOS);[m
[32m+[m
[32m+[m[32mconst PARAMS = [[m
[32m+[m[32m  {[m
[32m+[m[32m    type: () => Rand.choice(TYPES),[m
[32m+[m[32m    flip: () => Rand.choice(['isNormal', 'isFlipped']),[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    info: ({type, flip}) => TYPE_INFOS[type][flip][m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    _type: 'nonRandom',[m
[32m+[m[32m    decl: ({info}) => info.decl,[m
[32m+[m[32m  },[m
[32m+[m[32m  {[m
[32m+[m[32m    offsets: ({info}) =>[m
[32m+[m[32m      Rand.choices(5, Object.keys(info.offsets), Object.keys(info.offsets)),[m
[32m+[m[32m  },[m
[32m+[m[32m];[m
[32m+[m
[32m+[m
[32m+[m[32mif (process.argv[1] === __filename) {[m
[32m+[m[32m  console.log(new StructAccess().qaText());[m
[32m+[m[32m}[m
[1mdiff --git a/exercises/templates/index.html b/exercises/templates/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..cf05e35[m
[1m--- /dev/null[m
[1m+++ b/exercises/templates/index.html[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en-US">[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/icon?family=Material+Icons"[m
[32m+[m [32m  rel="stylesheet">[m
[32m+[m[32m    <link href="/cs220/assets/styles/article.css" rel="stylesheet"[m
[32m+[m [32m  type="text/css" />[m
[32m+[m[32m    <link href="/cs220/assets/styles/hl-fine_blue.css" rel="stylesheet"[m
[32m+[m [32m  type="text/css" />[m
[32m+[m[32m    <link href="/cs220/exercises/questions.css" rel="stylesheet"[m
[32m+[m [32m  type="text/css" />[m[41m [m
[32m+[m[32m    <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML" async=""></script>[m
[32m+[m[32m    <title>CS 220: Exercises</title>[m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m
[32m+[m[32m    <nav>[m
[32m+[m[32m      <ul>[m
[32m+[m [32m<li><a href="/cs220/index.html" class="material-icons">house</a></li>[m
[32m+[m [32m<li><a href="/cs220/docs/index.html">Docs</a></li>[m
[32m+[m [32m<li><a href="/cs220/exercises/index.html">Exercises</a></li>[m
[32m+[m [32m<li><a href="/cs220/hw/index.html">Homework</a></li>[m
[32m+[m [32m<li><a href="/cs220/labs/index.html">Labs</a></li>[m
[32m+[m [32m<li><a href="/cs220/misc/index.html">Misc</a></li>[m
[32m+[m [32m<li><a href="/cs220/projects/index.html">Projects</a></li>[m
[32m+[m [32m<li><a href="/cs220/slides/index.html">Slides</a></li>[m
[32m+[m [32m<li><a id="loginAction"></a></li>[m
[32m+[m[32m      </ul>[m
[32m+[m[32m    </nav>[m
[32m+[m[32m    <div class="content">[m
[32m+[m[32m      <section><h1>Exercises</h1>[m
[32m+[m [32m<div id="exercise">[m
[32m+[m [32m</div>[m
[32m+[m[32m      </section>[m
[32m+[m[32m    </div> <!-- #content -->[m
[32m+[m[32m    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>[m
[32m+[m[32m    <script src="/cs220/exercises/index.js"></script>[m
[32m+[m[32m    <script src="/cs220/assets/scripts/loginAction.js"></script>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/index.html b/index.html[m
[1mindex 68f2ba4..e8a0452 100644[m
[1m--- a/index.html[m
[1m+++ b/index.html[m
[36m@@ -22,7 +22,7 @@[m
     </nav>[m
     <div class="content">[m
       <section data-coord="index.umt:1:0"><h1 data-coord="index.umt:1:0">Latest Announcements</h1><dl data-coord="index.umt:4:0"><dt data-coord="index.umt:4:0">Aug 25</dt><dd data-coord="index.umt:5:0"><ol data-coord="index.umt:5:0"><li data-coord="index.umt:5:0"><p data-coord="index.umt:5:4">Please sign and submit your[m
[31m-<em data-coord="index.umt:6:13"><a href="misc/academic-honesty-statement/academic-honesty-statement.pdf" data-coord="index.umt:6:13">Academic Honesty Statement</a></em> using mycourses.[m
[32m+[m[32m<em data-coord="index.umt:6:13"><a href="misc/academic-honesty-statement/academic-honesty-statement.pdf" data-coord="index.umt:6:13">Academic Honesty Statement</a></em> using brightspace (under <samp data-coord="index.umt:6:67">Assignments</samp>).[m
 </p></li><li data-coord="index.umt:9:0"><p data-coord="index.umt:9:4">Tomorrow's <em data-coord="index.umt:9:38"><a href="labs/lab0/lab0.html" data-coord="index.umt:9:38">Lab 0</a></em> is available.[m
 Other formats: <a href="labs/lab0/lab0.pdf" data-coord="index.umt:9:101">PDF,</a>[m
 <a href="labs/lab0/lab0.umt" data-coord="index.umt:9:132">source.</a>[m
[1mdiff --git a/index.umt b/index.umt[m
[1mindex 01632fa..a0d602d 100644[m
[1m--- a/index.umt[m
[1m+++ b/index.umt[m
[36m@@ -4,7 +4,7 @@[m
 :Aug 25:[m
   # Please sign and submit your[m
     .<misc/academic-honesty-statement/academic-honesty-statement.pdf>[m
[31m-    "Academic Honesty Statement" using mycourses.[m
[32m+[m[32m    "Academic Honesty Statement" using brightspace (under `Assignments`).[m
 [m
   # Tomorrow's .<labs/lab0/lab0.html> "Lab 0" is available.[m
     Other formats: .<labs/lab0/lab0.pdf> PDF,[m
[1mdiff --git a/labs/lab0/lab0.html b/labs/lab0/lab0.html[m
[1mindex 8d3fb49..1844666 100644[m
[1m--- a/labs/lab0/lab0.html[m
[1m+++ b/labs/lab0/lab0.html[m
[36m@@ -182,150 +182,114 @@[m [myou share with your TA's.[m
 github repository on <samp data-coord="lab0.umt:290:91">remote.cs.binghamton.edu</samp>.[m
 </p></li></ul><p data-coord="lab0.umt:293:0">The rest of this lab provides step-by-step directions for setting up a github[m
 account.[m
[31m-</p><section data-coord="lab0.umt:296:0"><h3 data-coord="lab0.umt:296:0">Quick Start</h3><p data-coord="lab0.umt:299:0">If you know what you are doing, this <samp data-coord="lab0.umt:299:37">tl;dr</samp> section should largely suffice:[m
[31m-</p><ol data-coord="lab0.umt:301:0"><li data-coord="lab0.umt:301:0"><p data-coord="lab0.umt:301:4">Set up a personal github account and create a <samp data-coord="lab0.umt:301:50">i220a</samp> or <samp data-coord="lab0.umt:301:61">i220b</samp>[m
[31m-git repository, depending on the course section you are registered[m
[31m-for.  Choose the github options to generate a <samp data-coord="lab0.umt:301:190">.gitignore</samp> for the C[m
[31m-programming language and initialize your repository with a <samp data-coord="lab0.umt:301:276">README</samp>.[m
[31m-</p></li><li data-coord="lab0.umt:306:0"><p data-coord="lab0.umt:306:4">Set up TAs to have access to your repository:[m
[31m-</p><ul data-coord="lab0.umt:308:0"><li data-coord="lab0.umt:308:0"><p data-coord="lab0.umt:308:8">All students give access to Jerome for grading projects.[m
[31m-Github ID: <samp data-coord="lab0.umt:308:84">dherath</samp> [m
[31m-</p></li><li data-coord="lab0.umt:311:0"><p data-coord="lab0.umt:311:8"><strong data-coord="lab0.umt:311:8">Lab Section A51 Thu 10:05 - 11:30 and A52 11:40 - 1:05p</strong>: Zhen;[m
[31m-Github ID: <samp data-coord="lab0.umt:311:92">YesZhen</samp>[m
[31m-</p></li><li data-coord="lab0.umt:314:0"><p data-coord="lab0.umt:314:8"><strong data-coord="lab0.umt:314:8">Lab Section A52 Thu 11:40 - 1:05p</strong>:[m
[31m-Zhen; Github ID: <samp data-coord="lab0.umt:314:70">YesZhen</samp> [m
[31m-</p></li><li data-coord="lab0.umt:317:0"><p data-coord="lab0.umt:317:8"><strong data-coord="lab0.umt:317:8">Lab Section A53 1:15 - 2:40p</strong>:[m
[31m-Jerome; Github ID: <samp data-coord="lab0.umt:317:67">dherath</samp> [m
[31m-</p></li><li data-coord="lab0.umt:320:0"><p data-coord="lab0.umt:320:8"><strong data-coord="lab0.umt:320:8">Lab Section B51: Thu 2:50 - 4:15p</strong>:  Jerome;[m
[31m-Github ID: <samp data-coord="lab0.umt:320:73">dherath</samp> <br data-coord="lab0.umt:320:83"/>[m
[31m-</p></li><li data-coord="lab0.umt:323:0"><p data-coord="lab0.umt:323:8"><strong data-coord="lab0.umt:323:8">Lab Section B52: Thu 4:25 - 5:50p</strong>: Barak; Github[m
[31m-ID: <samp data-coord="lab0.umt:323:71">barakharari</samp> <br data-coord="lab0.umt:323:85"/>[m
[31m-</p></li><li data-coord="lab0.umt:326:0"><p data-coord="lab0.umt:326:8"><strong data-coord="lab0.umt:326:8">Lab Section B53: Thu 6:00-7:25p</strong>: Barak; Github[m
[31m-ID: <samp data-coord="lab0.umt:326:69">barakharari</samp> <br data-coord="lab0.umt:326:83"/>[m
[31m-</p></li></ul><p data-coord="lab0.umt:330:4">As there are many similar names and some people may have multiple[m
[31m-accounts, <strong data-coord="lab0.umt:330:84">make 100% sure that you have the correct github[m
[31m-    accounts</strong> (the above <em data-coord="lab0.umt:330:158">ID</em>'s must match).[m
[31m-</p><p data-coord="lab0.umt:334:4">Note that the Github ID's provided for each section are the Github[m
[31m-ID's for the TA supervising the lab as well as the TA grading projects[m
[31m-for that class section.[m
[31m-</p></li><li data-coord="lab0.umt:338:0"><p data-coord="lab0.umt:338:4">Clone your github repository into the <samp data-coord="lab0.umt:338:42">~/projects</samp> directory on your[m
[31m-workstation. Create a symlink to your cloned repository in your[m
[31m-home directory.[m
[31m-</p></li><li data-coord="lab0.umt:342:0"><p data-coord="lab0.umt:342:4">Use a <samp data-coord="lab0.umt:342:10">submit</samp> subdirectory within the cloned directory for[m
[31m-working on labs/projects.  If submitting late, email the TA for[m
[31m-that assignment.[m
[31m-</p></li></ol><p data-coord="lab0.umt:346:0">The following sub-sections explain each of the above steps in detail.[m
[31m-</p></section><section data-coord="lab0.umt:349:0"><h3 data-coord="lab0.umt:349:0">Setting Up A Git Hub Repository</h3><p data-coord="lab0.umt:352:0"><span id="github" data-coord="lab0.umt:352:10">Each</span> student needs to set up a <strong data-coord="lab0.umt:352:41">private</strong> git repository[m
[31m-called <samp data-coord="lab0.umt:352:73">i220a</samp> or <samp data-coord="lab0.umt:352:84">i220b</samp> (depending on the section you are registered[m
[31m-for) on github.  It will be referred to as <em data-coord="lab0.umt:352:180">i220X</em> in the sequel.[m
[32m+[m[32m</p><section data-coord="lab0.umt:351:0"><h3 data-coord="lab0.umt:351:0">Setting Up A Git Hub Repository</h3><p data-coord="lab0.umt:354:0"><span id="github" data-coord="lab0.umt:354:10">Each</span> student needs to set up a <strong data-coord="lab0.umt:354:41">private</strong> git repository[m
[32m+[m[32mcalled <samp data-coord="lab0.umt:354:73">i220a</samp> or <samp data-coord="lab0.umt:354:84">i220b</samp> (depending on the section you are registered[m
[32m+[m[32mfor) on github.  It will be referred to as <em data-coord="lab0.umt:354:180">i220X</em> in the sequel.[m
 This repository provides access to the CS 220 TAs and will be used[m
 for submitting projects and labs for grading.[m
[31m-</p><ol data-coord="lab0.umt:358:0"><li data-coord="lab0.umt:358:0"><p data-coord="lab0.umt:358:4">Go to <a href="https://github.com" data-coord="lab0.umt:358:32">github.com.</a>[m
[31m-</p></li><li data-coord="lab0.umt:360:0"><p data-coord="lab0.umt:360:4">Click on <samp data-coord="lab0.umt:360:13">Sign Up</samp>, and complete the form.  You may choose any[m
[31m-appropriate <strong data-coord="lab0.umt:360:83">Username</strong>, but it is strongly recommended that you[m
[31m-use the user-name associated with your <samp data-coord="lab0.umt:360:178">binghamton.edu</samp> email (if[m
[32m+[m[32m</p><ol data-coord="lab0.umt:360:0"><li data-coord="lab0.umt:360:0"><p data-coord="lab0.umt:360:4">Go to <a href="https://github.com" data-coord="lab0.umt:360:32">github.com.</a>[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:362:0"><p data-coord="lab0.umt:362:4">Click on <samp data-coord="lab0.umt:362:13">Sign Up</samp>, and complete the form.  You may choose any[m
[32m+[m[32mappropriate <strong data-coord="lab0.umt:362:83">Username</strong>, but it is strongly recommended that you[m
[32m+[m[32muse the user-name associated with your <samp data-coord="lab0.umt:362:178">binghamton.edu</samp> email (if[m
 it is available).[m
[31m-</p><p data-coord="lab0.umt:365:4">Please ensure that you provide your <samp data-coord="lab0.umt:365:40">binghamton.edu</samp> email address[m
[31m-in the <strong data-coord="lab0.umt:365:82">Email address</strong> field.  This may make it slightly easier[m
[32m+[m[32m</p><p data-coord="lab0.umt:367:4">Please ensure that you provide your <samp data-coord="lab0.umt:367:40">binghamton.edu</samp> email address[m
[32m+[m[32min the <strong data-coord="lab0.umt:367:82">Email address</strong> field.  This may make it slightly easier[m
 for the TA to associate your github account with your BU id.[m
[31m-</p></li><li data-coord="lab0.umt:369:0"><p data-coord="lab0.umt:369:4">Please complete all necessary steps to complete your registration[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:371:0"><p data-coord="lab0.umt:371:4">Please complete all necessary steps to complete your registration[m
 on github after satisfying their captcha and submitting the form.[m
[31m-</p></li><li data-coord="lab0.umt:372:0"><p data-coord="lab0.umt:372:4">Set up your account appropriately.  On the github page, access[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:374:0"><p data-coord="lab0.umt:374:4">Set up your account appropriately.  On the github page, access[m
 your account using the user icon on the top right of the page and[m
[31m-selecting <em data-coord="lab0.umt:372:151">Settings</em>.  Select <strong data-coord="lab0.umt:372:171">SSH and GPG keys" from the left[m
[31m-    hand menu, specify a </strong>New SSH key".[m
[31m-</p><p data-coord="lab0.umt:377:4">On your <samp data-coord="lab0.umt:377:12">remote.cs</samp> terminal <samp data-coord="lab0.umt:377:33">cat ~/.ssh/id_rsa.pub</samp> and then[m
[31m-copy-and-paste the output of that command into the provided <strong data-coord="lab0.umt:377:130">Key</strong>[m
[31m-box.  Set up a suitable title like <samp data-coord="lab0.umt:377:175">remote.cs</samp>.  Submit the form[m
[32m+[m[32mselecting <em data-coord="lab0.umt:374:151">Settings</em>.  Select <strong data-coord="lab0.umt:374:171">SSH and GPG keys</strong> from the left[m
[32m+[m[32mhand menu, specify a <strong data-coord="lab0.umt:374:229">New SSH key</strong>.[m
[32m+[m[32m</p><p data-coord="lab0.umt:379:4">On your <samp data-coord="lab0.umt:379:12">remote.cs</samp> terminal <samp data-coord="lab0.umt:379:33">cat ~/.ssh/id_rsa.pub</samp> and then[m
[32m+[m[32mcopy-and-paste the output of that command into the provided <strong data-coord="lab0.umt:379:130">Key</strong>[m
[32m+[m[32mbox.  Set up a suitable title like <samp data-coord="lab0.umt:379:175">remote.cs</samp>.  Submit the form[m
 to set up your new key.[m
[31m-</p></li><li data-coord="lab0.umt:382:0"><p data-coord="lab0.umt:382:4">To set up a repository for the course, click on the green <strong data-coord="lab0.umt:382:62">New</strong>[m
[31m-button on your <em data-coord="lab0.umt:382:109"><a href="https://github.com" data-coord="lab0.umt:382:109">github home page</a></em>.[m
[31m-</p><ol data-coord="lab0.umt:385:0"><li data-coord="lab0.umt:385:0"><p data-coord="lab0.umt:385:8">Fill in the repository name as <samp data-coord="lab0.umt:385:39">i220a</samp> or <samp data-coord="lab0.umt:385:50">i220b</samp> exactly[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:384:0"><p data-coord="lab0.umt:384:4">To set up a repository for the course, click on the green <strong data-coord="lab0.umt:384:62">New</strong>[m
[32m+[m[32mbutton on your <em data-coord="lab0.umt:384:109"><a href="https://github.com" data-coord="lab0.umt:384:109">github home page</a></em>.[m
[32m+[m[32m</p><ol data-coord="lab0.umt:387:0"><li data-coord="lab0.umt:387:0"><p data-coord="lab0.umt:387:8">Fill in the repository name as <samp data-coord="lab0.umt:387:39">i220a</samp> or <samp data-coord="lab0.umt:387:50">i220b</samp> exactly[m
 (this is absolutely essential).[m
[31m-</p></li><li data-coord="lab0.umt:388:0"><p data-coord="lab0.umt:388:8">Provide a suitable description for the repository.[m
[31m-</p></li><li data-coord="lab0.umt:390:0"><p data-coord="lab0.umt:390:8">Make sure that you set up your repository as <strong data-coord="lab0.umt:390:53">Private</strong>.[m
[31m-</p></li><li data-coord="lab0.umt:392:0"><p data-coord="lab0.umt:392:8">Select <samp data-coord="lab0.umt:392:15">Initialize this repository with a README</samp>.[m
[31m-</p></li><li data-coord="lab0.umt:394:0"><p data-coord="lab0.umt:394:8">Specify a <samp data-coord="lab0.umt:394:18">.gitignore</samp> file for <samp data-coord="lab0.umt:394:40">C</samp>.[m
[31m-</p></li></ol><p data-coord="lab0.umt:396:4">Hit the <strong data-coord="lab0.umt:396:12">Create repository</strong> button.[m
[31m-</p></li><li data-coord="lab0.umt:398:0"><p data-coord="lab0.umt:398:4">Go to your repository using the link you will now find on your[m
[31m-github homepage. Go to <samp data-coord="lab0.umt:398:94">Settings-&gt;Manage Access"-&gt;Collaborators</samp>[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:390:0"><p data-coord="lab0.umt:390:8">Provide a suitable description for the repository.[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:392:0"><p data-coord="lab0.umt:392:8">Make sure that you set up your repository as <strong data-coord="lab0.umt:392:53">Private</strong>.[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:394:0"><p data-coord="lab0.umt:394:8">Select <samp data-coord="lab0.umt:394:15">Initialize this repository with a README</samp>.[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:396:0"><p data-coord="lab0.umt:396:8">Specify a <samp data-coord="lab0.umt:396:18">.gitignore</samp> file for <samp data-coord="lab0.umt:396:40">C</samp>.[m
[32m+[m[32m</p></li></ol><p data-coord="lab0.umt:398:4">Hit the <strong data-coord="lab0.umt:398:12">Create repository</strong> button.[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:400:0"><p data-coord="lab0.umt:400:4">Go to your repository using the link you will now find on your[m
[32m+[m[32mgithub homepage. Go to <samp data-coord="lab0.umt:400:94">Settings-&gt;Manage Access-&gt;Collaborators</samp>[m
 from the navigation.  Depending on your lab section, add the[m
 following TAs as collaborators using the following github[m
 user-ids:[m
[31m-</p><ul data-coord="lab0.umt:404:0"><li data-coord="lab0.umt:404:0"><p data-coord="lab0.umt:404:8">All students give access to Jerome for grading projects.[m
[31m-Github ID: <samp data-coord="lab0.umt:404:84">dherath</samp> [m
[31m-</p></li><li data-coord="lab0.umt:407:0"><p data-coord="lab0.umt:407:8"><strong data-coord="lab0.umt:407:8">Lab Section A51 Thu 10:05 - 11:30 and A52 11:40 - 1:05p</strong>: Zhen;[m
[31m-Github ID: <samp data-coord="lab0.umt:407:92">YesZhen</samp>[m
[31m-</p></li><li data-coord="lab0.umt:410:0"><p data-coord="lab0.umt:410:8"><strong data-coord="lab0.umt:410:8">Lab Section A52 Thu 11:40 - 1:05p</strong>:[m
[31m-Zhen; Github ID: <samp data-coord="lab0.umt:410:70">YesZhen</samp> [m
[31m-</p></li><li data-coord="lab0.umt:413:0"><p data-coord="lab0.umt:413:8"><strong data-coord="lab0.umt:413:8">Lab Section A53 1:15 - 2:40p</strong>:[m
[31m-Jerome; Github ID: <samp data-coord="lab0.umt:413:67">dherath</samp> [m
[31m-</p></li><li data-coord="lab0.umt:416:0"><p data-coord="lab0.umt:416:8"><strong data-coord="lab0.umt:416:8">Lab Section B51: Thu 2:50 - 4:15p</strong>:  Jerome;[m
[31m-Github ID: <samp data-coord="lab0.umt:416:73">dherath</samp> <br data-coord="lab0.umt:416:83"/>[m
[31m-</p></li><li data-coord="lab0.umt:419:0"><p data-coord="lab0.umt:419:8"><strong data-coord="lab0.umt:419:8">Lab Section B52: Thu 4:25 - 5:50p</strong>: Barak; Github[m
[31m-ID: <samp data-coord="lab0.umt:419:71">barakharari</samp> <br data-coord="lab0.umt:419:85"/>[m
[31m-</p></li><li data-coord="lab0.umt:422:0"><p data-coord="lab0.umt:422:8"><strong data-coord="lab0.umt:422:8">Lab Section B53: Thu 6:00-7:25p</strong>: Barak; Github[m
[31m-ID: <samp data-coord="lab0.umt:422:69">barakharari</samp> <br data-coord="lab0.umt:422:83"/>[m
[31m-</p></li></ul><p data-coord="lab0.umt:426:4">As there are many similar names and some people may have multiple[m
[31m-accounts, <strong data-coord="lab0.umt:426:84">make 100% sure that you have the correct github[m
[31m-    accounts</strong> (the above <em data-coord="lab0.umt:426:158">ID</em>'s must match).[m
[31m-</p><p data-coord="lab0.umt:430:4">They will get access to your repository once they accept your[m
[32m+[m[32m</p><ul data-coord="lab0.umt:406:0"><li data-coord="lab0.umt:406:0"><p data-coord="lab0.umt:406:8">All students give access to Jerome for grading projects.[m
[32m+[m[32mGithub ID: <samp data-coord="lab0.umt:406:84">dherath</samp>[m[41m [m
[32m+[m[32m</p></li><li data-coord="lab0.umt:409:0"><p data-coord="lab0.umt:409:8"><strong data-coord="lab0.umt:409:8">Lab Section A51 Thu 10:05 - 11:30</strong>: Zhen;[m
[32m+[m[32mGithub ID: <samp data-coord="lab0.umt:409:70">YesZhen</samp>[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:412:0"><p data-coord="lab0.umt:412:8"><strong data-coord="lab0.umt:412:8">Lab Section A52 Thu 11:40 - 1:05p</strong>:[m
[32m+[m[32mZhen; Github ID: <samp data-coord="lab0.umt:412:70">YesZhen</samp>[m[41m [m
[32m+[m[32m</p></li><li data-coord="lab0.umt:415:0"><p data-coord="lab0.umt:415:8"><strong data-coord="lab0.umt:415:8">Lab Section A53 Thu 1:15 - 2:40p</strong>: Jerome;[m
[32m+[m[32mYou should already have given Jerome access.[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:418:0"><p data-coord="lab0.umt:418:8"><strong data-coord="lab0.umt:418:8">Lab Section B51: Thu 2:50 - 4:15p</strong>:  Jerome;[m
[32m+[m[32mYou should already have given Jerome access.[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:421:0"><p data-coord="lab0.umt:421:8"><strong data-coord="lab0.umt:421:8">Lab Section B52 Thu 4:25 - 5:50p</strong>: Barak; Github[m
[32m+[m[32mID: <samp data-coord="lab0.umt:421:70">barakharari</samp> <br data-coord="lab0.umt:421:84"/>[m
[32m+[m[32m</p></li><li data-coord="lab0.umt:424:0"><p data-coord="lab0.umt:424:8"><strong data-coord="lab0.umt:424:8">Lab Section B53 Thu 6:00 - 7:25p</strong>: Barak; Github[m
[32m+[m[32mID: <samp data-coord="lab0.umt:424:70">barakharari</samp> <br data-coord="lab0.umt:424:84"/>[m
[32m+[m[32m</p></li></ul><p data-coord="lab0.umt:428:4">As there are many similar names and some people may have multiple[m
[32m+[m[32maccounts, <strong data-coord="lab0.umt:428:84">make 100% sure that you have the correct github[m
[32m+[m[32m    accounts</strong> (the above <em data-coord="lab0.umt:428:158">ID</em>'s must match).[m
[32m+[m[32m</p><p data-coord="lab0.umt:432:4">They will get access to your repository once they accept your[m
 invitation to collaborate.[m
[31m-</p><p data-coord="lab0.umt:433:4">[Note that some lab sections require 2 TAs to get access[m
[31m-to your repository as one TA is responsible for grading[m
[31m-your lab while another TA is responsible for grading your[m
[31m-project.][m
[31m-</p></li></ol></section><section data-coord="lab0.umt:439:0"><h3 data-coord="lab0.umt:439:0">Initializing Your Repository on remote.cs</h3><p data-coord="lab0.umt:442:0">Clone your github repository into your <samp data-coord="lab0.umt:442:39">~/projects</samp> directory:[m
[31m-</p><p data-coord="lab0.umt:444:2"><samp data-coord="lab0.umt:444:2">$ mkdir -p ~/projects</samp> <br data-coord="lab0.umt:444:26"/>[m
[31m-<samp data-coord="lab0.umt:444:31">$ cd ~/projects</samp> <br data-coord="lab0.umt:444:49"/>[m
[31m-<samp data-coord="lab0.umt:444:54">$ git clone</samp> <em data-coord="lab0.umt:444:68">YOUR_GITHUB_PROJECT_URL</em> <br data-coord="lab0.umt:444:94"/>[m
[31m-</p><p data-coord="lab0.umt:448:0">You can copy and paste <samp data-coord="lab0.umt:448:23">YOUR_GITHUB_PROJECT_URL</samp> from your github[m
[31m-project page.  Click the green <strong data-coord="lab0.umt:448:97">Clone or download</strong> button and then[m
[31m-copy the <strong data-coord="lab0.umt:448:142">Clone with SSH</strong> url into your clipboard by using the copy[m
[31m-widget on the right of the url.[m
[31m-</p><p data-coord="lab0.umt:453:0">If you get an error when doing so, verify that you have correctly uploaded[m
[32m+[m[32m</p></li></ol></section><section data-coord="lab0.umt:436:0"><h3 data-coord="lab0.umt:436:0">Initializing Your Repository on remote.cs</h3><p data-coord="lab0.umt:439:0">Clone your github repository into your <samp data-coord="lab0.umt:439:39">~/projects</samp> directory:[m
[32m+[m[32m</p><p data-coord="lab0.umt:441:2"><samp data-coord="lab0.umt:441:2">$ mkdir -p ~/projects</samp> <br data-coord="lab0.umt:441:26"/>[m
[32m+[m[32m<samp data-coord="lab0.umt:441:31">$ cd ~/projects</samp> <br data-coord="lab0.umt:441:49"/>[m
[32m+[m[32m<samp data-coord="lab0.umt:441:54">$ git clone</samp> <em data-coord="lab0.umt:441:68">YOUR_GITHUB_PROJECT_URL</em> <br data-coord="lab0.umt:441:94"/>[m
[32m+[m[32m</p><p data-coord="lab0.umt:445:0">You can copy and paste <samp data-coord="lab0.umt:445:23">YOUR_GITHUB_PROJECT_URL</samp> from your github[m
[32m+[m[32mproject page.  Click the green <strong data-coord="lab0.umt:445:97">Code</strong>  button and then[m
[32m+[m[32mchoose <samp data-coord="lab0.umt:445:128">SSH</samp> to copy the ssh url into your clipboard by using the copy[m
[32m+[m[32mwidget on the right of the url.  Make sure you do not copy the <samp data-coord="lab0.umt:445:255">HTTPS</samp>[m
[32m+[m[32murl.[m
[32m+[m[32m</p><p data-coord="lab0.umt:451:0">If you get an error when doing so, verify that you have correctly uploaded[m
 your public ssh key to github.[m
[31m-</p><p data-coord="lab0.umt:457:0">Create a symlink to your github project in your home directory:[m
[31m-</p><pre data-coord="lab0.umt:460:0">    $ cd ~[m
[32m+[m[32m</p><p data-coord="lab0.umt:455:0">Create a symlink to your github project in your home directory:[m
[32m+[m[32m</p><pre data-coord="lab0.umt:458:0">    $ cd ~[m
     $ ln -s ~/projects/i220? .[m
[31m-</pre><p data-coord="lab0.umt:464:0">If you <samp data-coord="lab0.umt:464:7">cd</samp> over to your <samp data-coord="lab0.umt:464:25">i220X</samp> directory and do a <samp data-coord="lab0.umt:464:52">ls -a</samp> you should[m
[31m-see both the <samp data-coord="lab0.umt:464:84">README.md</samp> and <samp data-coord="lab0.umt:464:100">.gitignore</samp> files.  Feel free to add[m
[31m-names/patterns into <samp data-coord="lab0.umt:464:158">.gitignore</samp> file for files which should be[m
[32m+[m[32m</pre><p data-coord="lab0.umt:462:0">If you <samp data-coord="lab0.umt:462:7">cd</samp> over to your <samp data-coord="lab0.umt:462:25">i220X</samp> directory and do a <samp data-coord="lab0.umt:462:52">ls -a</samp> you should[m
[32m+[m[32msee both the <samp data-coord="lab0.umt:462:84">README.md</samp> and <samp data-coord="lab0.umt:462:100">.gitignore</samp> files.  Feel free to add[m
[32m+[m[32mnames/patterns into <samp data-coord="lab0.umt:462:158">.gitignore</samp> file for files which should be[m
 ignored by git.  For example, if you are using emacs as your text[m
[31m-editor, you may want to add in a line containing <samp data-coord="lab0.umt:464:317">*~</samp> to tell git to[m
[32m+[m[32meditor, you may want to add in a line containing <samp data-coord="lab0.umt:462:317">*~</samp> to tell git to[m
 ignore emacs backup files.[m
[31m-</p><p data-coord="lab0.umt:471:0">Make sure that all updates have been pushed over to github:[m
[32m+[m[32m</p><p data-coord="lab0.umt:469:0">Make sure that all updates have been pushed over to github:[m
 </p><pre>$ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220X[m
 $ git status <span class="hl kwb">-s</span> <span class="hl slc">#see if there are changes you want to commit</span>[m
 $ git commit <span class="hl kwb">-a -m</span> <span class="hl str">&apos;SOME COMMIT MSG&apos;</span> <span class="hl slc">#commit if necessary</span>[m
[31m-$ git push <span class="hl slc">#push changes to github</span></pre></section></section><section data-coord="lab0.umt:481:0"><h2 data-coord="lab0.umt:481:0">Winding Up and Submitting Your Lab</h2><p data-coord="lab0.umt:484:0">If you have completed all the previous steps, run the following commands[m
[32m+[m[32m$ git push <span class="hl slc">#push changes to github</span></pre></section></section><section data-coord="lab0.umt:479:0"><h2 data-coord="lab0.umt:479:0">Winding Up and Submitting Your Lab</h2><p data-coord="lab0.umt:482:0">If you have completed all the previous steps, run the following commands[m
 in the terminal which is being logged:[m
 </p><pre>$ <span class="hl kwc">ls</span> <span class="hl kwb">-dl</span> ~<span class="hl opt">/</span>cs220 ~<span class="hl opt">/</span>i220X[m
[31m-$ <span class="hl kwc">ls</span> <span class="hl kwb">-l</span> ~<span class="hl opt">/</span>.<span class="hl kwc">ssh</span> ~<span class="hl opt">/</span>cs220 ~<span class="hl opt">/</span>i220X </pre><p data-coord="lab0.umt:493:0">The output will let the TA assess whether you have completed the previous[m
[32m+[m[32m$ <span class="hl kwc">ls</span> <span class="hl kwb">-l</span> ~<span class="hl opt">/</span>.<span class="hl kwc">ssh</span> ~<span class="hl opt">/</span>cs220 ~<span class="hl opt">/</span>i220X </pre><p data-coord="lab0.umt:491:0">The output will let the TA assess whether you have completed the previous[m
 steps.[m
[31m-</p><p data-coord="lab0.umt:496:0">A common git workflow is to work on new program features in separate[m
[31m-git branches and merge each feature branch in to the <samp data-coord="lab0.umt:496:122">main</samp>[m
[32m+[m[32m</p><p data-coord="lab0.umt:494:0">A common git workflow is to work on new program features in separate[m
[32m+[m[32mgit branches and merge each feature branch in to the <samp data-coord="lab0.umt:494:122">main</samp>[m
 branch when the feature is complete.  This course will expose you to[m
 this workflow by regarding each lab and project as a separate feature[m
 and using a separate branch for developing each lab or project.[m
[31m-</p><p data-coord="lab0.umt:502:0">We could not follow this procedure for this lab, as part of the lab[m
[32m+[m[32m</p><p data-coord="lab0.umt:500:0">We could not follow this procedure for this lab, as part of the lab[m
 was setting up the github repository. However, better late than never:[m
 we will start a git branch for this lab:[m
 </p><pre>$ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220X[m
 $ git checkout <span class="hl kwb">-b</span> lab0 <span class="hl slc">#create a new branch</span>[m
[31m-$ mkdir <span class="hl kwb">-p</span> submit <span class="hl slc">#create a dir for submitting work to be graded</span></pre><p data-coord="lab0.umt:513:0">At this point, you have pretty much completed the lab, Terminate the[m
[31m-logging in the terminal being logged, by typing a <samp data-coord="lab0.umt:513:119">control-D</samp>[m
[31m-character (that is hold down the control key and <samp data-coord="lab0.umt:513:180">d</samp> key[m
[32m+[m[32m$ mkdir <span class="hl kwb">-p</span> submit <span class="hl slc">#create a dir for submitting work to be graded</span></pre><p data-coord="lab0.umt:511:0">At this point, you have pretty much completed the lab, Terminate the[m
[32m+[m[32mlogging in the terminal being logged, by typing a <samp data-coord="lab0.umt:511:119">control-D</samp>[m
[32m+[m[32mcharacter (that is hold down the control key and <samp data-coord="lab0.umt:511:180">d</samp> key[m
 simultaneously) to indicate the end of your session.  (Note that this[m
 is not a universal end-of-file character, it is merely interpreted as[m
 end-of-file by the terminal controller).[m
[31m-</p><p data-coord="lab0.umt:520:0">This should create your log in <samp data-coord="lab0.umt:520:31">~/tmp/lab0/lab0.LOG</samp>.  You can confirm[m
[31m-this by doing a <samp data-coord="lab0.umt:520:87">ls -l ~/tmp/lab0/lab0.LOG</samp> or by looking at the log[m
[32m+[m[32m</p><p data-coord="lab0.umt:518:0">This should create your log in <samp data-coord="lab0.umt:518:31">~/tmp/lab0/lab0.LOG</samp>.  You can confirm[m
[32m+[m[32mthis by doing a <samp data-coord="lab0.umt:518:87">ls -l ~/tmp/lab0/lab0.LOG</samp> or by looking at the log[m
 file using a text editor.[m
[31m-</p><p data-coord="lab0.umt:524:0">Move the <samp data-coord="lab0.umt:524:9">lab0</samp> directory over to your <samp data-coord="lab0.umt:524:39">i220X</samp> directory.[m
[32m+[m[32m</p><p data-coord="lab0.umt:522:0">Move the <samp data-coord="lab0.umt:522:9">lab0</samp> directory over to your <samp data-coord="lab0.umt:522:39">i220X</samp> directory.[m
 </p><pre>$ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220X[m
[31m-$ <span class="hl kwc">mv</span> ~<span class="hl opt">/</span>tmp<span class="hl opt">/</span>lab0 submit</pre><p data-coord="lab0.umt:532:0">Get ready to merge your <samp data-coord="lab0.umt:532:24">lab0</samp> branch by first merging any changes[m
[31m-from <samp data-coord="lab0.umt:532:72">main</samp> branch:[m
[32m+[m[32m$ <span class="hl kwc">mv</span> ~<span class="hl opt">/</span>tmp<span class="hl opt">/</span>lab0 submit</pre><p data-coord="lab0.umt:530:0">Get ready to merge your <samp data-coord="lab0.umt:530:24">lab0</samp> branch by first merging any changes[m
[32m+[m[32mfrom <samp data-coord="lab0.umt:530:72">main</samp> branch:[m
 </p><pre>$ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220X[m
 $ git branch <span class="hl kwb">-l</span> <span class="hl slc">#list all branches; curent branch, indicated by a *,</span>[m
                 <span class="hl slc">#should be lab0.</span>[m
[36m@@ -336,7 +300,9 @@[m [m$ git commit <span class="hl kwb">-a -m</span> <span class="hl str">&apos;comple[m
 <span class="hl str">$ git push -u origin lab0 #push lab0 branch to github</span>[m
 <span class="hl str">$ git checkout main #switch to main branch</span>[m
 <span class="hl str">$ git merge lab0 -m &apos;</span>merged lab0<span class="hl str">&apos; #merge in lab0 branch</span>[m
[31m-<span class="hl str">$ git push #submit lab</span></pre><p data-coord="lab0.umt:551:0">If you find a problem with your submission, you may directly update[m
[32m+[m[32m<span class="hl str">$ git push #submit lab</span></pre><p data-coord="lab0.umt:548:0">You should see your submission on github if you look at your repo[m
[32m+[m[32musing the browser GUI.[m
[32m+[m[32m</p><p data-coord="lab0.umt:551:0">If you find a problem with your submission, you may directly update[m
 your submission in the <samp data-coord="lab0.umt:551:91">submit</samp> directory, followed by a <samp data-coord="lab0.umt:551:125">commit</samp> and[m
 <samp data-coord="lab0.umt:551:138">push</samp>.  The timestamp of the latest commit and push within the[m
 <samp data-coord="lab0.umt:551:202">submit</samp> directory will count as the submission time for your project.[m
[1mdiff --git a/labs/lab0/lab0.pdf b/labs/lab0/lab0.pdf[m
[1mindex 0d72556..d19dbd9 100644[m
Binary files a/labs/lab0/lab0.pdf and b/labs/lab0/lab0.pdf differ
[1mdiff --git a/labs/lab0/lab0.umt b/labs/lab0/lab0.umt[m
[1mindex 58a0ee0..a4ec452 100644[m
[1m--- a/labs/lab0/lab0.umt[m
[1m+++ b/labs/lab0/lab0.umt[m
[36m@@ -293,6 +293,7 @@[m [mWe will also be using git for lab and project submissions:[m
 The rest of this lab provides step-by-step directions for setting up a github[m
 account.[m
 [m
[32m+[m[32m%%%[m
                       Quick Start[m
                       -----------[m
 [m
[36m@@ -345,6 +346,7 @@[m [mIf you know what you are doing, this `tl;dr` section should largely suffice:[m
 [m
 The following sub-sections explain each of the above steps in detail.[m
 [m
[32m+[m[32m%%%[m
 [m
                 Setting Up A Git Hub Repository[m
                 -------------------------------[m
[36m@@ -371,8 +373,8 @@[m [mfor submitting projects and labs for grading.[m
 [m
   # Set up your account appropriately.  On the github page, access[m
     your account using the user icon on the top right of the page and[m
[31m-    selecting "Settings".  Select *SSH and GPG keys" from the left[m
[31m-    hand menu, specify a *New SSH key".[m
[32m+[m[32m    selecting "Settings".  Select *SSH and GPG keys* from the left[m
[32m+[m[32m    hand menu, specify a *New SSH key*.[m
 [m
     On your `remote.cs` terminal `cat ~/.ssh/id_rsa.pub` and then[m
     copy-and-paste the output of that command into the provided *Key*[m
[36m@@ -396,7 +398,7 @@[m [mfor submitting projects and labs for grading.[m
     Hit the *Create repository* button.[m
 [m
   # Go to your repository using the link you will now find on your[m
[31m-    github homepage. Go to `Settings->Manage Access"->Collaborators`[m
[32m+[m[32m    github homepage. Go to `Settings->Manage Access->Collaborators`[m
     from the navigation.  Depending on your lab section, add the[m
     following TAs as collaborators using the following github[m
     user-ids:[m
[36m@@ -404,22 +406,22 @@[m [mfor submitting projects and labs for grading.[m
       + All students give access to Jerome for grading projects.[m
         Github ID: `dherath` [m
 [m
[31m-      + *Lab Section A51 Thu 10:05 - 11:30 and A52 11:40 - 1:05p*: Zhen;[m
[32m+[m[32m      + *Lab Section A51 Thu 10:05 - 11:30*: Zhen;[m
         Github ID: `YesZhen`[m
 [m
       + *Lab Section A52 Thu 11:40 - 1:05p*:[m
         Zhen; Github ID: `YesZhen` [m
 [m
[31m-      + *Lab Section A53 1:15 - 2:40p*:[m
[31m-        Jerome; Github ID: `dherath` [m
[32m+[m[32m      + *Lab Section A53 Thu 1:15 - 2:40p*: Jerome;[m
[32m+[m[32m        You should already have given Jerome access.[m
 [m
       + *Lab Section B51: Thu 2:50 - 4:15p*:  Jerome;[m
[31m-        Github ID: `dherath` .;[m
[32m+[m[32m        You should already have given Jerome access.[m
   [m
[31m-      + *Lab Section B52: Thu 4:25 - 5:50p*: Barak; Github[m
[32m+[m[32m      + *Lab Section B52 Thu 4:25 - 5:50p*: Barak; Github[m
         ID: `barakharari` .;[m
 [m
[31m-      + *Lab Section B53: Thu 6:00-7:25p*: Barak; Github[m
[32m+[m[32m      + *Lab Section B53 Thu 6:00 - 7:25p*: Barak; Github[m
         ID: `barakharari` .;[m
 [m
 [m
[36m@@ -430,11 +432,6 @@[m [mfor submitting projects and labs for grading.[m
     They will get access to your repository once they accept your[m
     invitation to collaborate.[m
 [m
[31m-    [Note that some lab sections require 2 TAs to get access[m
[31m-    to your repository as one TA is responsible for grading[m
[31m-    your lab while another TA is responsible for grading your[m
[31m-    project.][m
[31m-[m
 [m
                   Initializing Your Repository on remote.cs[m
                   -----------------------------------------[m
[36m@@ -446,9 +443,10 @@[m [mClone your github repository into your `~/projects` directory:[m
   `$ git clone` "YOUR_GITHUB_PROJECT_URL" .;[m
 [m
 You can copy and paste `YOUR_GITHUB_PROJECT_URL` from your github[m
[31m-project page.  Click the green *Clone or download* button and then[m
[31m-copy the *Clone with SSH* url into your clipboard by using the copy[m
[31m-widget on the right of the url.[m
[32m+[m[32mproject page.  Click the green *Code*  button and then[m
[32m+[m[32mchoose `SSH` to copy the ssh url into your clipboard by using the copy[m
[32m+[m[32mwidget on the right of the url.  Make sure you do not copy the `HTTPS`[m
[32m+[m[32murl.[m
 [m
 If you get an error when doing so, verify that you have correctly uploaded[m
 your public ssh key to github.[m
[36m@@ -547,6 +545,8 @@[m [m$ git merge lab0 -m 'merged lab0' #merge in lab0 branch[m
 $ git push #submit lab[m
 ```[m
 [m
[32m+[m[32mYou should see your submission on github if you look at your repo[m
[32m+[m[32musing the browser GUI.[m
 [m
 If you find a problem with your submission, you may directly update[m
 your submission in the `submit` directory, followed by a `commit` and[m
[1mdiff --git a/labs/working/working.html b/labs/working/working.html[m
[1mnew file mode 100644[m
[1mindex 0000000..7c0768c[m
[1m--- /dev/null[m
[1m+++ b/labs/working/working.html[m
[36m@@ -0,0 +1,138 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html lang="en-US">[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">[m
[32m+[m[32m    <link href="../../assets/styles/article.css" rel="stylesheet" type="text/css" />[m[41m [m
[32m+[m[32m    <title>CS 220: Working on Labs</title>[m
[32m+[m[32m    <link href="working/hl-fine_blue.css" rel="stylesheet"/>[m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m
[32m+[m[32m    <nav>[m
[32m+[m[32m      <ul>[m
[32m+[m [32m<li><a href="../../index.html" class="material-icons">house</a></li>[m
[32m+[m [32m<li><a href="../../docs/index.html">Docs</a></li>[m
[32m+[m [32m<li><a href="../../exercises/index.html">Exercises</a></li>[m
[32m+[m [32m<li><a href="../../hw/index.html">Homework</a></li>[m
[32m+[m [32m<li><a href="../../labs/index.html">Labs</a></li>[m
[32m+[m [32m<li><a href="../../misc/index.html">Misc</a></li>[m
[32m+[m [32m<li><a href="../../projects/index.html">Projects</a></li>[m
[32m+[m [32m<li><a href="../../slides/index.html">Slides</a></li>[m
[32m+[m [32m<li><a id="loginAction"></a></li>[m
[32m+[m[32m      </ul>[m
[32m+[m[32m    </nav>[m
[32m+[m[32m    <div class="content">[m
[32m+[m[32m      <section data-coord="working.umt:1:0"><h1 data-coord="working.umt:1:0">Working on Labs</h1><p data-coord="working.umt:4:0">This document provides the procedure you should use for recording and[m
[32m+[m[32msubmitting your labs to the TA.  It assumes that you have previously[m
[32m+[m[32m<em data-coord="working.umt:5:41"><a href="../lab0/lab0.html" data-coord="working.umt:5:41">set up your CS account</a></em> and have cloned the[m
[32m+[m[32m<samp data-coord="working.umt:6:17">cs220</samp> course repository and your <samp data-coord="working.umt:6:52">i220a</samp> or <samp data-coord="working.umt:6:63">i220b</samp> github[m
[32m+[m[32mrepository to your <samp data-coord="working.umt:7:31">remote.cs</samp> account.[m
[32m+[m[32m</p><p data-coord="working.umt:10:0">The following description uses <samp data-coord="working.umt:10:31">i220X</samp> to refer to your <samp data-coord="working.umt:10:56">i220a</samp> or[m
[32m+[m[32m<samp data-coord="working.umt:10:67">i220b</samp> directory and <samp data-coord="working.umt:10:89">labN</samp> to refer to the current lab, i.e. <samp data-coord="working.umt:10:130">lab1</samp>, <samp data-coord="working.umt:10:138">lab2</samp>,[m
[32m+[m[32metc.[m
[32m+[m[32m</p><p data-coord="working.umt:14:0">Try to use a full-featured terminal when logging in to <samp data-coord="working.umt:14:55">remote.cs</samp>.[m
[32m+[m[32m</p><ul data-coord="working.umt:16:0"><li data-coord="working.umt:16:0"><p data-coord="working.umt:16:4">If your workstation is running Windows, use[m
[32m+[m[32m<em data-coord="working.umt:16:121"><a href="https://docs.microsoft.com/en-us/windows/terminal/get-started" data-coord="working.umt:16:121">Windows Terminal</a></em> from the MS store.[m
[32m+[m[32m</p></li><li data-coord="working.umt:20:0"><p data-coord="working.umt:20:4">If your worstation is running OS/X or Linux, those operating[m
[32m+[m[32msystems come with decent terminal applications.[m
[32m+[m[32m</p></li></ul><p data-coord="working.umt:23:0">After logging on to <samp data-coord="working.umt:23:20">remote.cs</samp>:[m
[32m+[m[32m</p><ol data-coord="working.umt:25:0"><li data-coord="working.umt:25:0"><p data-coord="working.umt:25:4">Make sure that the shell you are using is a <samp data-coord="working.umt:25:48">sh</samp>-based shell like[m
[32m+[m[32m<samp data-coord="working.umt:25:74">bash</samp>. If the prompt contains a <samp data-coord="working.umt:25:107">$</samp>, then you are running a[m
[32m+[m[32m<samp data-coord="working.umt:25:139">sh</samp>-based shell. If the prompt contains a <samp data-coord="working.umt:25:182">%</samp>, then it is a[m
[32m+[m[32m<samp data-coord="working.umt:25:204">csh</samp>-based shell.  In most shells, you can check what shell you[m
[32m+[m[32mare using by looking at the output of the command <samp data-coord="working.umt:25:323">ps -p $$</samp>.[m
[32m+[m[32m</p><p data-coord="working.umt:31:4">If you are not running bash, you should permanently change your[m
[32m+[m[32mlogin shell to bash:[m
[32m+[m[32m</p><ol data-coord="working.umt:34:0"><li data-coord="working.umt:34:0"><p data-coord="working.umt:34:11">Visit the <em data-coord="working.umt:34:58"><a href="http://sysadmin.cs.binghamton.edu" data-coord="working.umt:34:58">CS SysAdmin Page</a></em>[m
[32m+[m[32m</p></li><li data-coord="working.umt:36:0"><p data-coord="working.umt:36:11">Follow links: <em data-coord="working.umt:36:25">Other Changes to your CS LDAP Account</em> -&gt; <em data-coord="working.umt:36:68">Account[m
[32m+[m[32m           Setup Services</em> -&gt; <em data-coord="working.umt:36:107">Request Other Changes to This Account</em>.[m
[32m+[m[32m</p></li><li data-coord="working.umt:39:0"><p data-coord="working.umt:39:11">Specify bash by typing the command <samp data-coord="working.umt:39:46">bash</samp>.[m
[32m+[m[32m</p></li></ol></li><li data-coord="working.umt:41:0"><p data-coord="working.umt:41:4">Ensure that your local copy of the <samp data-coord="working.umt:41:39">cs220</samp> course repository is[m
[32m+[m[32mup-to-date:[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>cs220[m
[32m+[m[32m    $ git pull</pre></li><li data-coord="working.umt:50:0"><p data-coord="working.umt:50:4">Create a directory for the lab you are working in your copy[m
[32m+[m[32mof your github respository:[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220X           <span class="hl slc">#go to clone of github repo</span>[m
[32m+[m[32m    $ git checkout <span class="hl kwb">-b</span> labN <span class="hl slc">#create a new branch; use correct # N</span>[m
[32m+[m[32m    $ mkdir <span class="hl kwb">-p</span> submit<span class="hl opt">/</span>labN <span class="hl slc">#create a dir for work to be graded</span>[m
[32m+[m[32m    $ <span class="hl kwb">cd</span> submit<span class="hl opt">/</span>labN       <span class="hl slc">#make newly created directory current</span></pre></li><li data-coord="working.umt:61:0"><p data-coord="working.umt:61:4">Usually, a lab will have an <samp data-coord="working.umt:61:32">exercises</samp> subdirectory.  Copy[m
[32m+[m[32mover that directory:[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220?<span class="hl opt">/</span>submit<span class="hl opt">/</span>labN[m
[32m+[m[32m    $ <span class="hl kwc">cp</span> <span class="hl kwb">-pr</span> ~<span class="hl opt">/</span>cs220<span class="hl opt">/</span>labs<span class="hl opt">/</span>labN<span class="hl opt">/</span>exercises .</pre><p data-coord="working.umt:70:4">If a lab does not have an <samp data-coord="working.umt:70:30">exercises</samp> directory, then[m
[32m+[m[32mrun the command <samp data-coord="working.umt:70:78">touch .dummy</samp> to create a dummy[m
[32m+[m[32mfile to ensure that git has something to commit for the[m
[32m+[m[32minitial push in the next step.[m
[32m+[m[32m</p></li><li data-coord="working.umt:75:0"><p data-coord="working.umt:75:4">Push this new branch to <samp data-coord="working.umt:75:28">github</samp>:[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220?<span class="hl opt">/</span>submit<span class="hl opt">/</span>labN[m
[32m+[m[32m    $ git add .[m
[32m+[m[32m    $ git commit <span class="hl kwb">-m</span> <span class="hl str">&apos;started labN&apos;</span>[m
[32m+[m[32m    $ git push <span class="hl kwb">-u</span> origin labN  <span class="hl slc">#track this branch at origin</span></pre></li><li data-coord="working.umt:85:0"><p data-coord="working.umt:85:4">Create a script file which will contain a log of your lab.  You[m
[32m+[m[32mwill be submitting this log to the TA in order to establish that[m
[32m+[m[32myou have completed the lab.  For example:[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220?<span class="hl opt">/</span>submit<span class="hl opt">/</span>labN[m
[32m+[m[32m    $ <span class="hl kwc">script</span> <span class="hl kwb">-a</span> labN.LOG   <span class="hl slc">#use appropriate lab number N</span>[m
[32m+[m[32m    Script started<span class="hl opt">,</span> <span class="hl kwc">file</span> is labN.LOG</pre><p data-coord="working.umt:96:4">Note that the <samp data-coord="working.umt:96:18">-a</samp> option appends to the log file if it is already[m
[32m+[m[32mpresent.  So if your script is interrupted for some reason, you[m
[32m+[m[32mcan use the above command to simply restart it while appending to[m
[32m+[m[32mthe same log file.[m
[32m+[m[32m</p></li><li data-coord="working.umt:101:0"><p data-coord="working.umt:101:4">Perform the required lab tasks within the above terminal.  All[m
[32m+[m[32minput and output to the terminal will also be logged in the above[m
[32m+[m[32mlog file.[m
[32m+[m[32m</p><p data-coord="working.umt:105:4">If you want to ensure that you do not lose work due to mistakes,[m
[32m+[m[32mor poor Internet connectivity, it is a good idea to periodically[m
[32m+[m[32mpush your work to github.[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220?<span class="hl opt">/</span>submit<span class="hl opt">/</span>labN[m
[32m+[m[32m       <span class="hl slc"># type a ^D to stop script</span>[m
[32m+[m[32m    $ git add .     <span class="hl slc">#add log + any new files you may have added</span>[m
[32m+[m[32m    $ git commit <span class="hl kwb">-m</span> <span class="hl str">&apos;completed MILESTONE&apos;</span> <span class="hl slc">#replace MILESTONE</span>[m
[32m+[m[32m    $ git push[m
[32m+[m[32m    $ <span class="hl kwc">script</span> <span class="hl kwb">-a</span> labN.LOG   <span class="hl slc">#restart script for subsequent work</span></pre><p data-coord="working.umt:119:4">If the terminal application you started from your workstation[m
[32m+[m[32msupports tabs, you can start another terminal within a second tab.[m
[32m+[m[32mYou can use this auxiliary terminal for listing command manuals or[m
[32m+[m[32mplaying around with commands without the output being logged.[m
[32m+[m[32m</p><p data-coord="working.umt:124:4">Within each terminal window you should be able to scroll through[m
[32m+[m[32myour command history using the up and down arrow keys.  You should[m
[32m+[m[32mbe able to use the tab key to get suggestions for possible[m
[32m+[m[32mcommands or filenames.[m
[32m+[m[32m</p></li><li data-coord="working.umt:129:0"><p data-coord="working.umt:129:4">When you have completed the lab, go to your main terminal window[m
[32m+[m[32mand type a <samp data-coord="working.umt:129:84">control-D</samp> character (that is hold down the control[m
[32m+[m[32mkey and <samp data-coord="working.umt:129:149">d</samp> key simultaneously) to indicate the end of your[m
[32m+[m[32msession.[m
[32m+[m[32m</p><p data-coord="working.umt:134:4">This should create your log in <samp data-coord="working.umt:134:35">~/i220X/submit/labN/labN.LOG</samp>.[m
[32m+[m[32mYou can confirm this by doing a <samp data-coord="working.umt:134:103">ls -l ~/i220X/labN/labN.LOG</samp> or by[m
[32m+[m[32mlooking at the log file using a text editor.[m
[32m+[m[32m</p></li><li data-coord="working.umt:138:0"><p data-coord="working.umt:138:4">Get ready to merge your <samp data-coord="working.umt:138:28">labN</samp> branch by first merging any changes[m
[32m+[m[32mfrom the <samp data-coord="working.umt:138:84">master</samp> branch:[m
[32m+[m[32m</p><pre>    $ <span class="hl kwb">cd</span> ~<span class="hl opt">/</span>i220X[m
[32m+[m[32m    $ git branch <span class="hl kwb">-l</span>       <span class="hl slc">#list all branches;</span>[m
[32m+[m[32m                          <span class="hl slc"># current branch has a *, should be labN.</span>[m
[32m+[m[32m    $ git checkout master <span class="hl slc">#goto master branch</span>[m
[32m+[m[32m    $ git pull            <span class="hl slc"># pull changes (if any)</span>[m
[32m+[m[32m    $ git checkout labN   <span class="hl slc">#back to labN branch              </span>[m
[32m+[m[32m    $ git merge <span class="hl kwb">-m</span> <span class="hl str">&apos;merged master&apos;</span> master  <span class="hl slc"># may not do anything</span></pre></li><li data-coord="working.umt:152:0"><p data-coord="working.umt:152:4">Add and submit your lab:[m
[32m+[m[32m</p><pre>    $ git status <span class="hl kwb">-s</span>       <span class="hl slc">#should show labN.LOG and other files</span>[m
[32m+[m[32m    $ git commit <span class="hl kwb">-a -m</span> <span class="hl str">&apos;completing labN&apos;</span>[m
[32m+[m[32m    $ git push            <span class="hl slc">#push labN branch to github</span>[m
[32m+[m[32m    $ git checkout master <span class="hl slc">#switch to master branch</span>[m
[32m+[m[32m    $ git merge labN <span class="hl kwb">-m</span> <span class="hl str">&apos;merged labN&apos;</span> <span class="hl slc">#merge in labN branch</span>[m
[32m+[m[32m    $ git push            <span class="hl slc">#submit lab</span></pre><p data-coord="working.umt:165:4">If you find a problem with your submission, you may directly[m
[32m+[m[32mupdate your submission in the <samp data-coord="working.umt:165:99">submit</samp> directory, followed by a[m
[32m+[m[32m<samp data-coord="working.umt:165:137">commit</samp> and <samp data-coord="working.umt:165:150">push</samp>.  The timestamp of the latest commit and push[m
[32m+[m[32mwithin the <samp data-coord="working.umt:165:218">submit/labN</samp> directory will count as the submission[m
[32m+[m[32mtime for your lab.[m
[32m+[m[32m</p><p data-coord="working.umt:171:4">You should feel free to create any other subdirectories within[m
[32m+[m[32myour <samp data-coord="working.umt:171:76">i220X</samp> directory.  The only directory which will be[m
[32m+[m[32mmonitored for submitted assignments is the <samp data-coord="working.umt:171:176">submit</samp> directory in[m
[32m+[m[32mthe <samp data-coord="working.umt:171:206">master</samp> branch.[m
[32m+[m[32m</p></li></ol><p data-coord="working.umt:176:0">Labs should normally be completed during your assigned time slot.  One[m
[32m+[m[32madvantage of doing so is that the TAs will be available to answer[m
[32m+[m[32mquestions.  Please see the <a href="../../slides/syllabus/syllabus.html#tas" data-coord="working.umt:176:207">syllabus</a> for the contact information for the TA responsible for your[m
[32m+[m[32mlab.[m
[32m+[m[32m</p><p data-coord="working.umt:182:0">The latest you can submit a lab assigned for a Thursday is midnight[m
[32m+[m[32mthe following Sunday.  Those days will not be counted towards your[m
[32m+[m[32mlate days quota.  No late days from your late days quota can be used[m
[32m+[m[32mfor lab submissions.[m
[32m+[m[32m</p></section>[m
[32m+[m[32m    </div> <!-- #content -->[m
[32m+[m[32m    <script src="../../assets/scripts/loginAction.js"></script>[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/labs/working/working.pdf b/labs/working/working.pdf[m
[1mnew file mode 100644[m
[1mindex 0000000..919b9c4[m
Binary files /dev/null and b/labs/working/working.pdf differ
[1mdiff --git a/labs/working/working.umt b/labs/working/working.umt[m
[1mnew file mode 100644[m
[1mindex 0000000..3bea3f0[m
[1m--- /dev/null[m
[1m+++ b/labs/working/working.umt[m
[36m@@ -0,0 +1,186 @@[m
[32m+[m[32m                 W o r k i n g   o n   L a b s[m
[32m+[m
[32m+[m
[32m+[m[32mThis document provides the procedure you should use for recording and[m
[32m+[m[32msubmitting your labs to the TA.  It assumes that you have previously[m
[32m+[m[32m.<../lab0/lab0.html> "set up your CS account" and have cloned the[m
[32m+[m[32m`cs220` course repository and your `i220a` or `i220b` github[m
[32m+[m[32mrepository to your `remote.cs` account.[m
[32m+[m
[32m+[m[32mThe following description uses `i220X` to refer to your `i220a` or[m
[32m+[m[32m`i220b` directory and `labN` to refer to the current lab, i.e. `lab1`, `lab2`,[m
[32m+[m[32metc.[m
[32m+[m
[32m+[m[32mTry to use a full-featured terminal when logging in to `remote.cs`.[m
[32m+[m
[32m+[m[32m  + If your workstation is running Windows, use[m
[32m+[m[32m    .<https://docs.microsoft.com/en-us/windows/terminal/get-started>[m
[32m+[m[32m    "Windows Terminal" from the MS store.[m
[32m+[m
[32m+[m[32m  + If your worstation is running OS/X or Linux, those operating[m
[32m+[m[32m    systems come with decent terminal applications.[m
[32m+[m
[32m+[m[32mAfter logging on to `remote.cs`:[m
[32m+[m
[32m+[m[32m  # Make sure that the shell you are using is a `sh`-based shell like[m
[32m+[m[32m    `bash`. If the prompt contains a `$`, then you are running a[m
[32m+[m[32m    `sh`-based shell. If the prompt contains a `%`, then it is a[m
[32m+[m[32m    `csh`-based shell.  In most shells, you can check what shell you[m
[32m+[m[32m    are using by looking at the output of the command `ps -p $$`.[m
[32m+[m
[32m+[m[32m    If you are not running bash, you should permanently change your[m
[32m+[m[32m    login shell to bash:[m
[32m+[m
[32m+[m[32m         # Visit the .<http://sysadmin.cs.binghamton.edu> "CS SysAdmin Page"[m
[32m+[m
[32m+[m[32m         # Follow links: "Other Changes to your CS LDAP Account" -> "Account[m
[32m+[m[32m           Setup Services" -> "Request Other Changes to This Account".[m
[32m+[m
[32m+[m[32m         # Specify bash by typing the command `bash`.[m
[32m+[m
[32m+[m[32m  # Ensure that your local copy of the `cs220` course repository is[m
[32m+[m[32m    up-to-date:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ~~~[m
[32m+[m[32m    $ cd ~/cs220[m
[32m+[m[32m    $ git pull[m
[32m+[m[32m    ~~~[m
[32m+[m
[32m+[m[32m  # Create a directory for the lab you are working in your copy[m
[32m+[m[32m    of your github respository:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ cd ~/i220X        #go to clone of github repo[m
[32m+[m[32m    $ git checkout -b labN #create a new branch; use correct # N[m
[32m+[m[32m    $ mkdir -p submit/labN #create a dir for work to be graded[m
[32m+[m[32m    $ cd submit/labN    #make newly created directory current[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m[32m  # Usually, a lab will have an `exercises` subdirectory.  Copy[m
[32m+[m[32m    over that directory:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ cd ~/i220?/submit/labN[m
[32m+[m[32m    $ cp -pr ~/cs220/labs/labN/exercises .[m
[32m+[m[32m    ```[m
[32m+[m[41m    [m
[32m+[m[32m    If a lab does not have an `exercises` directory, then[m
[32m+[m[32m    run the command `touch .dummy` to create a dummy[m
[32m+[m[32m    file to ensure that git has something to commit for the[m
[32m+[m[32m    initial push in the next step.[m
[32m+[m
[32m+[m[32m  # Push this new branch to `github`:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ cd ~/i220?/submit/labN[m
[32m+[m[32m    $ git add .[m
[32m+[m[32m    $ git commit -m 'started labN'[m
[32m+[m[32m    $ git push -u origin labN  #track this branch at origin[m
[32m+[m[32m    ```[m[41m    [m
[32m+[m
[32m+[m[32m  # Create a script file which will contain a log of your lab.  You[m
[32m+[m[32m    will be submitting this log to the TA in order to establish that[m
[32m+[m[32m    you have completed the lab.  For example:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ cd ~/i220?/submit/labN[m
[32m+[m[32m    $ script -a labN.LOG   #use appropriate lab number N[m
[32m+[m[32m    Script started, file is labN.LOG[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m[32m    Note that the `-a` option appends to the log file if it is already[m
[32m+[m[32m    present.  So if your script is interrupted for some reason, you[m
[32m+[m[32m    can use the above command to simply restart it while appending to[m
[32m+[m[32m    the same log file.[m
[32m+[m
[32m+[m[32m  # Perform the required lab tasks within the above terminal.  All[m
[32m+[m[32m    input and output to the terminal will also be logged in the above[m
[32m+[m[32m    log file.[m
[32m+[m
[32m+[m[32m    If you want to ensure that you do not lose work due to mistakes,[m
[32m+[m[32m    or poor Internet connectivity, it is a good idea to periodically[m
[32m+[m[32m    push your work to github.[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ cd ~/i220?/submit/labN[m
[32m+[m[32m       # type a ^D to stop script[m
[32m+[m[32m    $ git add .     #add log + any new files you may have added[m
[32m+[m[32m    $ git commit -m 'completed MILESTONE' #replace MILESTONE[m
[32m+[m[32m    $ git push[m
[32m+[m[32m    $ script -a labN.LOG   #restart script for subsequent work[m
[32m+[m[32m    ```[m[41m    [m
[32m+[m
[32m+[m[32m    If the terminal application you started from your workstation[m
[32m+[m[32m    supports tabs, you can start another terminal within a second tab.[m
[32m+[m[32m    You can use this auxiliary terminal for listing command manuals or[m
[32m+[m[32m    playing around with commands without the output being logged.[m
[32m+[m
[32m+[m[32m    Within each terminal window you should be able to scroll through[m
[32m+[m[32m    your command history using the up and down arrow keys.  You should[m
[32m+[m[32m    be able to use the tab key to get suggestions for possible[m
[32m+[m[32m    commands or filenames.[m
[32m+[m
[32m+[m[32m  # When you have completed the lab, go to your main terminal window[m
[32m+[m[32m    and type a `control-D` character (that is hold down the control[m
[32m+[m[32m    key and `d` key simultaneously) to indicate the end of your[m
[32m+[m[32m    session.[m
[32m+[m
[32m+[m[32m    This should create your log in `~/i220X/submit/labN/labN.LOG`.[m
[32m+[m[32m    You can confirm this by doing a `ls -l ~/i220X/labN/labN.LOG` or by[m
[32m+[m[32m    looking at the log file using a text editor.[m
[32m+[m
[32m+[m[32m  # Get ready to merge your `labN` branch by first merging any changes[m
[32m+[m[32m    from the `master` branch:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ cd ~/i220X[m
[32m+[m[32m    $ git branch -l       #list all branches;[m
[32m+[m[32m                          # current branch has a *, should be labN.[m
[32m+[m[32m    $ git checkout master #goto master branch[m
[32m+[m[32m    $ git pull            # pull changes (if any)[m
[32m+[m[32m    $ git checkout labN   #back to labN branch[m[41m             [m
[32m+[m[32m    $ git merge -m 'merged master' master  # may not do anything[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m[32m  # Add and submit your lab:[m
[32m+[m
[32m+[m[32m    .code(lang=sh)[m
[32m+[m[32m    ```[m
[32m+[m[32m    $ git status -s       #should show labN.LOG and other files[m
[32m+[m[32m    $ git commit -a -m 'completing labN'[m
[32m+[m[32m    $ git push            #push labN branch to github[m
[32m+[m[32m    $ git checkout master #switch to master branch[m
[32m+[m[32m    $ git merge labN -m 'merged labN' #merge in labN branch[m
[32m+[m[32m    $ git push            #submit lab[m
[32m+[m[32m    ```[m
[32m+[m
[32m+[m
[32m+[m[32m    If you find a problem with your submission, you may directly[m
[32m+[m[32m    update your submission in the `submit` directory, followed by a[m
[32m+[m[32m    `commit` and `push`.  The timestamp of the latest commit and push[m
[32m+[m[32m    within the `submit/labN` directory will count as the submission[m
[32m+[m[32m    time for your lab.[m
[32m+[m
[32m+[m[32m    You should feel free to create any other subdirectories within[m
[32m+[m[32m    your `i220X` directory.  The only directory which will be[m
[32m+[m[32m    monitored for submitted assignments is the `submit` directory in[m
[32m+[m[32m    the `master` branch.[m
[32m+[m
[32m+[m[32mLabs should normally be completed during your assigned time slot.  One[m
[32m+[m[32madvantage of doing so is that the TAs will be available to answer[m
[32m+[m[32mquestions.  Please see the .<../../slides/syllabus/syllabus.html#tas>[m
[32m+[m[32msyllabus for the contact information for the TA responsible for your[m
[32m+[m[32mlab.[m
[32m+[m
[32m+[m[32mThe latest you can submit a lab assigned for a Thursday is midnight[m
[32m+[m[32mthe following Sunday.  Those days will not be counted towards your[m
[32m+[m[32mlate days quota.  No late days from your late days quota can be used[m
[32m+[m[32mfor lab submissions.[m
[32m+[m
[1mdiff --git a/labs/working/working/hl-fine_blue.css b/labs/working/working/hl-fine_blue.css[m
[1mnew file mode 100644[m
[1mindex 0000000..78b2c08[m
[1m--- /dev/null[m
[1m+++ b/labs/working/working/hl-fine_blue.css[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m/* Style definition file generated by highlight 3.41, http://www.andre-simon.de/ */[m
[32m+[m[32m/* highlight theme: vim fine_blue */[m
[32m+[m[32mbody.hl      { background-color:#f8f8f8; }[m
[32m+[m[32mpre.hl       { color:#404048; background-color:#f8f8f8; font-size:10pt; font-family:'Courier New',monospace;}[m
[32m+[m[32m.hl.num { color:#2020ff; }[m
[32m+[m[32m.hl.esc { color:#005858; }[m
[32m+[m[32m.hl.str { color:#2020ff; }[m
[32m+[m[32m.hl.pps { color:#2020ff; }[m
[32m+[m[32m.hl.slc { color:#ff00c0; font-style:italic; }[m
[32m+[m[32m.hl.com { color:#ff00c0; font-style:italic; }[m
[32m+[m[32m.hl.ppc { color:#007387; }[m
[32m+[m[32m.hl.opt { color:#404048; }[m
[32m+[m[32m.hl.ipl { color:#8a5588; }[m
[32m+[m[32m.hl.lin { color:#aaaaaa; }[m
[32m+[m[32m.hl.kwa { color:#008858; font-weight:bold; }[m
[32m+[m[32m.hl.kwb { color:#7040ff; font-weight:bold; }[m
[32m+[m[32m.hl.kwc { color:#87002f; font-weight:bold; }[m
[32m+[m[32m.hl.kwd { color:#404048; font-weight:bold; }[m
[32m+[m
[1mdiff --git a/labs/working/working/hl-fine_blue.sty b/labs/working/working/hl-fine_blue.sty[m
[1mnew file mode 100644[m
[1mindex 0000000..b5b7793[m
[1m--- /dev/null[m
[1m+++ b/labs/working/working/hl-fine_blue.sty[m
[36m@@ -0,0 +1,19 @@[m
[32m+[m[32m% Style definition file generated by highlight 3.41, http://www.andre-simon.de/[m[41m [m
[32m+[m[32m% highlight theme: vim fine_blue[m
[32m+[m[32m\newcommand{\hlstd}[1]{\textcolor[rgb]{0.25,0.25,0.28}{#1}}[m
[32m+[m[32m\newcommand{\hlnum}[1]{\textcolor[rgb]{0.13,0.13,1}{#1}}[m
[32m+[m[32m\newcommand{\hlesc}[1]{\textcolor[rgb]{0,0.35,0.35}{#1}}[m
[32m+[m[32m\newcommand{\hlstr}[1]{\textcolor[rgb]{0.13,0.13,1}{#1}}[m
[32m+[m[32m\newcommand{\hlpps}[1]{\textcolor[rgb]{0.13,0.13,1}{#1}}[m
[32m+[m[32m\newcommand{\hlslc}[1]{\textcolor[rgb]{1,0,0.75}{\it{#1}}}[m
[32m+[m[32m\newcommand{\hlcom}[1]{\textcolor[rgb]{1,0,0.75}{\it{#1}}}[m
[32m+[m[32m\newcommand{\hlppc}[1]{\textcolor[rgb]{0,0.45,0.53}{#1}}[m
[32m+[m[32m\newcommand{\hlopt}[1]{\textcolor[rgb]{0.25,0.25,0.28}{#1}}[m
[32m+[m[32m\newcommand{\hlipl}[1]{\textcolor[rgb]{0.54,0.33,0.53}{#1}}[m
[32m+[m[32m\newcommand{\hllin}[1]{\textcolor[rgb]{0.67,0.67,0.67}{#1}}[m
[32m+[m[32m\newcommand{\hlkwa}[1]{\textcolor[rgb]{0,0.53,0.35}{\bf{#1}}}[m
[32m+[m[32m\newcommand{\hlkwb}[1]{\textcolor[rgb]{0.44,0.25,1}{\bf{#1}}}[m
[32m+[m[32m\newcommand{\hlkwc}[1]{\textcolor[rgb]{0.53,0,0.18}{\bf{#1}}}[m
[32m+[m[32m\newcommand{\hlkwd}[1]{\textcolor[rgb]{0.25,0.25,0.28}{\bf{#1}}}[m
[32m+[m[32m\definecolor{bgcolor}{rgb}{0.97,0.97,0.97}[m
[32m+[m
[1mdiff --git a/misc/academic-honesty-statement/academic-honesty-policy.html b/misc/academic-honesty-statement/academic-honesty-policy.html[m
[1mindex 8d0ee64..e383931 100644[m
[1m--- a/misc/academic-honesty-statement/academic-honesty-policy.html[m
[1m+++ b/misc/academic-honesty-statement/academic-honesty-policy.html[m
[36m@@ -12,7 +12,7 @@[m
        <li><a href="../../index.html" class="material-icons">house</a></li>[m
        <li><a href="../../docs/index.html">Docs</a></li>[m
        <li><a href="../../exercises/index.html">Exercises</a></li>[m
[31m-   <li><a href="../../hws/index.html">Homeworks</a></li>[m
[32m+[m [32m<li><a href="../../hw/index.html">Homework</a></li>[m
        <li><a href="../../labs/index.html">Labs</a></li>[m
        <li><a href="../../misc/index.html">Misc</a></li>[m
        <li><a href="../../projects/index.html">Projects</a></li>[m
[1mdiff --git a/misc/academic-honesty-statement/academic-honesty-policy.pdf b/misc/academic-honesty-statement/academic-honesty-policy.pdf[m
[1mindex c65408a..762a43a 100644[m
Binary files a/misc/academic-honesty-statement/academic-honesty-policy.pdf and b/misc/academic-honesty-statement/academic-honesty-policy.pdf differ
[1mdiff --git a/misc/academic-honesty-statement/academic-honesty-statement.html b/misc/academic-honesty-statement/academic-honesty-statement.html[m
[1mindex 986d0fa..6b85efc 100644[m
[1m--- a/misc/academic-honesty-statement/academic-honesty-statement.html[m
[1m+++ b/misc/academic-honesty-statement/academic-honesty-statement.html[m
[36m@@ -12,7 +12,7 @@[m
        <li><a href="../../index.html" class="material-icons">house</a></li>[m
        <li><a href="../../docs/index.html">Docs</a></li>[m
        <li><a href="../../exercises/index.html">Exercises</a></li>[m
[31m-   <li><a href="../../hws/index.html">Homeworks</a></li>[m
[32m+[m [32m<li><a href="../../hw/index.html">Homework</a></li>[m
        <li><a href="../../labs/index.html">Labs</a></li>[m
        <li><a href="../../misc/index.html">Misc</a></li>[m
        <li><a href="../../projects/index.html">Projects</a></li>[m
[1mdiff --git a/misc/academic-honesty-statement/academic-honesty-statement.pdf b/misc/academic-honesty-statement/academic-honesty-statement.pdf[m
[1mindex 8849007..8596e55 100644[m
Binary files a/misc/academic-honesty-statement/academic-honesty-statement.pdf and b/misc/academic-honesty-statement/academic-honesty-statement.pdf differ
[1mdiff --git a/misc/fail2ban/fail2ban.html b/misc/fail2ban/fail2ban.html[m
[1mindex ace167d..7cd3a28 100644[m
[1m--- a/misc/fail2ban/fail2ban.html[m
[1m+++ b/misc/fail2ban/fail2ban.html[m
[36m@@ -3,7 +3,7 @@[m
   <head>[m
     <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">[m
     <link href="../../assets/styles/article.css" rel="stylesheet" type="text/css" /> [m
[31m-    <title>CS 544: Fail2ban Connectivity Issues</title>[m
[32m+[m[32m    <title>CS 220: Fail2ban Connectivity Issues</title>[m
     <link href="https://unpkg.com/purecss@1.0.0/build/pure-min.css" [m
        rel="stylesheet"/>[m
 <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML" async=""></script>    [m
[36m@@ -15,7 +15,8 @@[m
        <li><a href="../../index.html" class="material-icons">house</a></li>[m
        <li><a href="../../docs/index.html">Docs</a></li>[m
        <li><a href="../../exercises/index.html">Exercises</a></li>[m
[31m-   <li><a href="../../hws/index.html">Homeworks</a></li>[m
[32m+[m [32m<li><a href="../../hw/index.html">Homework</a></li>[m
[32m+[m [32m<li><a href="../../labs/index.html">Labs</a></li>[m
        <li><a href="../../misc/index.html">Misc</a></li>[m
        <li><a href="../../projects/index.html">Projects</a></li>[m
        <li><a href="../../slides/index.html">Slides</a></li>[m
[1mdiff --git a/misc/fail2ban/fail2ban.pdf b/misc/fail2ban/fail2ban.pdf[m
[1mindex 75b3531..5835203 100644[m
Binary files a/misc/fail2ban/fail2ban.pdf and b/misc/fail2ban/fail2ban.pdf differ
[1mdiff --git a/misc/grading-guidelines/grading-guidelines.html b/misc/grading-guidelines/grading-guidelines.html[m
[1mindex 1b7b649..666fc60 100644[m
[1m--- a/misc/grading-guidelines/grading-guidelines.html[m
[1m+++ b/misc/grading-guidelines/grading-guidelines.html[m
[36m@@ -121,69 +121,74 @@[m [mfollowing:[m
 </p><p data-coord="grading-guidelines.umt:146:2">e) Log of the program execution.[m
 </p><p data-coord="grading-guidelines.umt:148:0">Additionally it may also contain listings of portions of the students[m
 programs with the grader's comments added.[m
[31m-</p></section><section data-coord="grading-guidelines.umt:152:0"><h2 data-coord="grading-guidelines.umt:152:0">Recording Grades</h2><p data-coord="grading-guidelines.umt:155:0">Before assignments are returned to the student, the grader should[m
[32m+[m[32m</p></section><section data-coord="grading-guidelines.umt:152:0"><h2 data-coord="grading-guidelines.umt:152:0">Returning Graded Work</h2><p data-coord="grading-guidelines.umt:155:0">Graded work should be returned to students, usually within 2 weeks[m
[32m+[m[32mafter the late submission deadline, either via brightspaceor github.[m
[32m+[m[32mBesides the points obtained, the graded work should also include[m
[32m+[m[32mindications of why points were lost.  This can be via annotations or a[m
[32m+[m[32mseparate text file.[m
[32m+[m[32m</p></section><section data-coord="grading-guidelines.umt:162:0"><h2 data-coord="grading-guidelines.umt:162:0">Recording Grades</h2><p data-coord="grading-guidelines.umt:165:0">Before assignments are returned to the student, the grader should[m
 record those grades electronically.  It is advisable to use a[m
 spreadsheet like Google Sheets, Excel, or Open-Office to maintain the[m
 master copy of the grades for the class.  After the master copy has[m
 been updated, the changes can be uploaded over to BrightSpace so that[m
 they can be accessed by students.[m
[31m-</p><p data-coord="grading-guidelines.umt:162:0">It is important to ensure that the spreadsheet distinguishes between[m
[32m+[m[32m</p><p data-coord="grading-guidelines.umt:172:0">It is important to ensure that the spreadsheet distinguishes between[m
 assignments which were not turned in and those for which a zero grade[m
 was obtained.  The former should not be used in computing course[m
 statistics whereas the latter should be used.[m
[31m-</p></section><section data-coord="grading-guidelines.umt:167:0"><h2 data-coord="grading-guidelines.umt:167:0">Accreditation Requirements</h2><p data-coord="grading-guidelines.umt:170:0">For accreditation purposes, it is necessary to track the work done by[m
[32m+[m[32m</p></section><section data-coord="grading-guidelines.umt:177:0"><h2 data-coord="grading-guidelines.umt:177:0">Accreditation Requirements</h2><p data-coord="grading-guidelines.umt:180:0">For accreditation purposes, it is necessary to track the work done by[m
 students.  Specifically, if a question on a homework or exam is[m
[31m-marked <samp data-coord="grading-guidelines.umt:170:141">[RECORD]</samp>, then the grader should record the grade obtained for that[m
[32m+[m[32mmarked <samp data-coord="grading-guidelines.umt:180:141">[RECORD]</samp>, then the grader should record the grade obtained for that[m
 question individually for each student.[m
[31m-</p></section><section data-coord="grading-guidelines.umt:176:0"><h2 data-coord="grading-guidelines.umt:176:0">Assignment of Final Grades</h2><p data-coord="grading-guidelines.umt:179:0">Letter grades will be assigned strictly monotonically based on the overall[m
[32m+[m[32m</p></section><section data-coord="grading-guidelines.umt:186:0"><h2 data-coord="grading-guidelines.umt:186:0">Assignment of Final Grades</h2><p data-coord="grading-guidelines.umt:189:0">Letter grades will be assigned strictly monotonically based on the overall[m
 grades with major input from the grader.  If at all possible, students whose[m
 overall grades differ by a very tiny amount will receive the same letter[m
 grade.[m
[31m-</p><p data-coord="grading-guidelines.umt:184:0">Assignment of final grades will be done during a meeting after all[m
[32m+[m[32m</p><p data-coord="grading-guidelines.umt:194:0">Assignment of final grades will be done during a meeting after all[m
 work has been graded.  For this meeting, the grader should provide a tab[m
 containing a summary of all the class grades (details of grades for[m
 individual assignments can be on other tabs).  Headings on the summary[m
 tab should be fixed so that they are always visible as the content of[m
 the tab are scrolled.  This tab should contain the following columns:[m
[31m-</p><ol data-coord="grading-guidelines.umt:191:0"><li data-coord="grading-guidelines.umt:191:0"><p data-coord="grading-guidelines.umt:191:4">A single column for the student name titled <samp data-coord="grading-guidelines.umt:191:48">Student Name</samp>.  Each[m
[31m-entry should be of the form <em data-coord="grading-guidelines.umt:191:102">Last</em><samp data-coord="grading-guidelines.umt:191:108">,</samp> <em data-coord="grading-guidelines.umt:191:112">First</em>.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:194:0"><p data-coord="grading-guidelines.umt:194:4">A single column for the students B-number titled <samp data-coord="grading-guidelines.umt:194:53">B-Number</samp>.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:196:0"><p data-coord="grading-guidelines.umt:196:4">A single column for the grade for each project assigned titled[m
[31m-<samp data-coord="grading-guidelines.umt:196:71">prj</samp><em data-coord="grading-guidelines.umt:196:76">N</em> for <em data-coord="grading-guidelines.umt:196:84">N</em> in 1, 2...[m
[31m-</p></li><li data-coord="grading-guidelines.umt:199:0"><p data-coord="grading-guidelines.umt:199:4">A single column the grade for for each homework assigned titled[m
[31m-<samp data-coord="grading-guidelines.umt:199:72">hw</samp><em data-coord="grading-guidelines.umt:199:76">N</em> for <em data-coord="grading-guidelines.umt:199:84">N</em> in 1, 2...[m
[31m-</p></li><li data-coord="grading-guidelines.umt:202:0"><p data-coord="grading-guidelines.umt:202:4">A single column for the grade for each quiz assigned <samp data-coord="grading-guidelines.umt:202:57">qz</samp><em data-coord="grading-guidelines.umt:202:61">N</em> for[m
[31m-<em data-coord="grading-guidelines.umt:202:73">N</em> in 1, 2...[m
[31m-</p></li><li data-coord="grading-guidelines.umt:205:0"><p data-coord="grading-guidelines.umt:205:4">A single column for each exam titled <samp data-coord="grading-guidelines.umt:205:41">exam1</samp>, <samp data-coord="grading-guidelines.umt:205:50">exam2</samp> and <samp data-coord="grading-guidelines.umt:205:62">exam3</samp>.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:207:0"><p data-coord="grading-guidelines.umt:207:4">A single column for the overall project grade out of 100, titled[m
[31m-<samp data-coord="grading-guidelines.umt:207:73">PrjAvg</samp> with lowest project dropped as per the course grading[m
[32m+[m[32m</p><ol data-coord="grading-guidelines.umt:201:0"><li data-coord="grading-guidelines.umt:201:0"><p data-coord="grading-guidelines.umt:201:4">A single column for the student name titled <samp data-coord="grading-guidelines.umt:201:48">Student Name</samp>.  Each[m
[32m+[m[32mentry should be of the form <em data-coord="grading-guidelines.umt:201:102">Last</em><samp data-coord="grading-guidelines.umt:201:108">,</samp> <em data-coord="grading-guidelines.umt:201:112">First</em>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:204:0"><p data-coord="grading-guidelines.umt:204:4">A single column for the students B-number titled <samp data-coord="grading-guidelines.umt:204:53">B-Number</samp>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:206:0"><p data-coord="grading-guidelines.umt:206:4">A single column for the grade for each project assigned titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:206:71">prj</samp><em data-coord="grading-guidelines.umt:206:76">N</em> for <em data-coord="grading-guidelines.umt:206:84">N</em> in 1, 2...[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:209:0"><p data-coord="grading-guidelines.umt:209:4">A single column the grade for for each homework assigned titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:209:72">hw</samp><em data-coord="grading-guidelines.umt:209:76">N</em> for <em data-coord="grading-guidelines.umt:209:84">N</em> in 1, 2...[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:212:0"><p data-coord="grading-guidelines.umt:212:4">A single column for the grade for each quiz assigned <samp data-coord="grading-guidelines.umt:212:57">qz</samp><em data-coord="grading-guidelines.umt:212:61">N</em> for[m
[32m+[m[32m<em data-coord="grading-guidelines.umt:212:73">N</em> in 1, 2...[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:215:0"><p data-coord="grading-guidelines.umt:215:4">A single column for each exam titled <samp data-coord="grading-guidelines.umt:215:41">exam1</samp>, <samp data-coord="grading-guidelines.umt:215:50">exam2</samp> and <samp data-coord="grading-guidelines.umt:215:62">exam3</samp>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:217:0"><p data-coord="grading-guidelines.umt:217:4">A single column for the overall project grade out of 100, titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:217:73">PrjAvg</samp> with lowest project dropped as per the course grading[m
 policy.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:211:0"><p data-coord="grading-guidelines.umt:211:4">A single column for the overall homework grade out of 100, titled[m
[31m-<samp data-coord="grading-guidelines.umt:211:74">HwAvg</samp> with lowest homework dropped as per the course grading[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:221:0"><p data-coord="grading-guidelines.umt:221:4">A single column for the overall homework grade out of 100, titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:221:74">HwAvg</samp> with lowest homework dropped as per the course grading[m
 policy.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:215:0"><p data-coord="grading-guidelines.umt:215:4">A single column for the overall quiz grade out of 100, titled[m
[31m-<samp data-coord="grading-guidelines.umt:215:70">QzAvg</samp> with lowest quiz dropped as per the course grading[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:225:0"><p data-coord="grading-guidelines.umt:225:4">A single column for the overall quiz grade out of 100, titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:225:70">QzAvg</samp> with lowest quiz dropped as per the course grading[m
 policy.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:219:0"><p data-coord="grading-guidelines.umt:219:4">A single column for the overall exam grade out of 100, titled[m
[31m-<samp data-coord="grading-guidelines.umt:219:70">ExAvg</samp> with lowest exam dropped as per the course grading[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:229:0"><p data-coord="grading-guidelines.umt:229:4">A single column for the overall exam grade out of 100, titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:229:70">ExAvg</samp> with lowest exam dropped as per the course grading[m
 policy.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:223:0"><p data-coord="grading-guidelines.umt:223:4">A single column for the overall course grade out of 100 titled[m
[31m-<samp data-coord="grading-guidelines.umt:223:71">Total</samp> weighted as per the weights specified in the course[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:233:0"><p data-coord="grading-guidelines.umt:233:4">A single column for the overall course grade out of 100 titled[m
[32m+[m[32m<samp data-coord="grading-guidelines.umt:233:71">Total</samp> weighted as per the weights specified in the course[m
 grading policy.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:227:0"><p data-coord="grading-guidelines.umt:227:4">A single column for the assigned letter grade titled <samp data-coord="grading-guidelines.umt:227:57">Grade</samp>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:237:0"><p data-coord="grading-guidelines.umt:237:4">A single column for the assigned letter grade titled <samp data-coord="grading-guidelines.umt:237:57">Grade</samp>.[m
 This column will be completed during the meeting.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:230:0"><p data-coord="grading-guidelines.umt:230:4">During the meeting, the cutoffs used will be recorded in the[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:240:0"><p data-coord="grading-guidelines.umt:240:4">During the meeting, the cutoffs used will be recorded in the[m
 spreadsheet, possibly on a separate tab.[m
[31m-</p></li></ol><p data-coord="grading-guidelines.umt:233:0">There should be a row for each student with the rows set up in[m
[32m+[m[32m</p></li></ol><p data-coord="grading-guidelines.umt:243:0">There should be a row for each student with the rows set up in[m
 alternating colors so that they are easy to scan.  These rows should[m
[31m-be sorted in descending order by the <samp data-coord="grading-guidelines.umt:233:169">Total</samp> column.[m
[31m-</p><p data-coord="grading-guidelines.umt:237:0">Additionally, at the bottom of the sheet there should be rows giving[m
[32m+[m[32mbe sorted in descending order by the <samp data-coord="grading-guidelines.umt:243:169">Total</samp> column.[m
[32m+[m[32m</p><p data-coord="grading-guidelines.umt:247:0">Additionally, at the bottom of the sheet there should be rows giving[m
 course statistics for each individual column:[m
[31m-</p><ol data-coord="grading-guidelines.umt:240:0"><li data-coord="grading-guidelines.umt:240:0"><p data-coord="grading-guidelines.umt:240:4">Number submitted titled <samp data-coord="grading-guidelines.umt:240:28">Number</samp>.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:242:0"><p data-coord="grading-guidelines.umt:242:4">Maximum grade titled <samp data-coord="grading-guidelines.umt:242:25">Max</samp>.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:244:0"><p data-coord="grading-guidelines.umt:244:4">Average grade titled <samp data-coord="grading-guidelines.umt:244:25">Average</samp>.[m
[31m-</p></li><li data-coord="grading-guidelines.umt:246:0"><p data-coord="grading-guidelines.umt:246:4">Minimum grade titled <samp data-coord="grading-guidelines.umt:246:25">Min</samp>.[m
[31m-</p></li></ol><p data-coord="grading-guidelines.umt:248:0">A printout should be provided before the meeting of this tab in[m
[32m+[m[32m</p><ol data-coord="grading-guidelines.umt:250:0"><li data-coord="grading-guidelines.umt:250:0"><p data-coord="grading-guidelines.umt:250:4">Number submitted titled <samp data-coord="grading-guidelines.umt:250:28">Number</samp>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:252:0"><p data-coord="grading-guidelines.umt:252:4">Maximum grade titled <samp data-coord="grading-guidelines.umt:252:25">Max</samp>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:254:0"><p data-coord="grading-guidelines.umt:254:4">Average grade titled <samp data-coord="grading-guidelines.umt:254:25">Average</samp>.[m
[32m+[m[32m</p></li><li data-coord="grading-guidelines.umt:256:0"><p data-coord="grading-guidelines.umt:256:4">Minimum grade titled <samp data-coord="grading-guidelines.umt:256:25">Min</samp>.[m
[32m+[m[32m</p></li></ol><p data-coord="grading-guidelines.umt:258:0">A printout should be provided before the meeting of this tab in[m
 landscape mode with the fonts and column widths adjusted so that all[m
 columns fit within a single sheet.  If that is impossible and students[m
 can be uniquely identified by their names drop the B-number column.[m
[1mdiff --git a/misc/grading-guidelines/grading-guidelines.pdf b/misc/grading-guidelines/grading-guidelines.pdf[m
[1mindex 8e2e9eb..87d4176 100644[m
Binary files a/misc/grading-guidelines/grading-guidelines.pdf and b/misc/grading-guidelines/grading-guidelines.pdf differ
[1mdiff --git a/misc/grading-guidelines/grading-guidelines.umt b/misc/grading-guidelines/grading-guidelines.umt[m
[1mindex e2e3f46..1c84a71 100644[m
[1m--- a/misc/grading-guidelines/grading-guidelines.umt[m
[1m+++ b/misc/grading-guidelines/grading-guidelines.umt[m
[36m@@ -149,6 +149,16 @@[m [mAdditionally it may also contain listings of portions of the students[m
 programs with the grader's comments added.[m
 [m
 [m
[32m+[m [41m      [m    [32m       Returning Graded Work[m
[32m+[m         [32m       =====================[m
[32m+[m
[32m+[m[32mGraded work should be returned to students, usually within 2 weeks[m
[32m+[m[32mafter the late submission deadline, either via brightspaceor github.[m
[32m+[m[32mBesides the points obtained, the graded work should also include[m
[32m+[m[32mindications of why points were lost.  This can be via annotations or a[m
[32m+[m[32mseparate text file.[m
[32m+[m
[32m+[m
                        Recording Grades[m
                        ================[m
 [m
[1mdiff --git a/misc/index.html b/misc/index.html[m
[1mindex aa5da55..41f1d12 100644[m
[1m--- a/misc/index.html[m
[1m+++ b/misc/index.html[m
[36m@@ -32,13 +32,12 @@[m [mthis course.[m
 </p></li></ul><ul data-coord="index.umt:27:0"><li data-coord="index.umt:27:0"><p data-coord="index.umt:27:4"><em data-coord="index.umt:27:48"><a href="gui-remote-access/gui-remote-access.html" data-coord="index.umt:27:48">GUI Remote Access</a></em>[m
 Other formats: <a href="gui-remote-access/gui-remote-access.pdf" data-coord="index.umt:27:130">PDF,</a>[m
 <a href="gui-remote-access/gui-remote-access.umt" data-coord="index.umt:27:182">source.</a>[m
[31m-</p></li><li data-coord="index.umt:31:0"><p data-coord="index.umt:31:4"><a href="./doodles" data-coord="index.umt:31:17">Doodles:</a> material hacked in class.[m
[31m-</p></li><li data-coord="index.umt:33:0"><p data-coord="index.umt:33:4"><em data-coord="index.umt:33:32"><a href="./fail2ban/fail2ban.html" data-coord="index.umt:33:32">Fail2Ban Connectivity Issues</a></em>.[m
[31m-<a href="./fail2ban/fail2ban.pdf" data-coord="index.umt:33:95">PDF.</a>[m
[31m-</p></li><li data-coord="index.umt:36:0"><p data-coord="index.umt:36:4"><em data-coord="index.umt:36:50"><a href="grading-guidelines/grading-guidelines.html" data-coord="index.umt:36:50">Grading Guidelines</a></em> provided[m
[32m+[m[32m</p></li></ul><ul data-coord="index.umt:35:0"><li data-coord="index.umt:35:0"><p data-coord="index.umt:35:4"><em data-coord="index.umt:35:32"><a href="./fail2ban/fail2ban.html" data-coord="index.umt:35:32">Fail2Ban Connectivity Issues</a></em>.[m
[32m+[m[32m<a href="./fail2ban/fail2ban.pdf" data-coord="index.umt:35:95">PDF.</a>[m
[32m+[m[32m</p></li><li data-coord="index.umt:38:0"><p data-coord="index.umt:38:4"><em data-coord="index.umt:38:50"><a href="grading-guidelines/grading-guidelines.html" data-coord="index.umt:38:50">Grading Guidelines</a></em> provided[m
 to the TA/grader which may also be useful for students too.[m
[31m-( <em data-coord="index.umt:36:197"><a href="./grading-guidelines/grading-guidelines.umt" data-coord="index.umt:36:197">text</a></em>,[m
[31m-<em data-coord="index.umt:36:256"><a href="./grading-guidelines/grading-guidelines.pdf" data-coord="index.umt:36:256">PDF</a></em>).[m
[32m+[m[32m( <em data-coord="index.umt:38:197"><a href="./grading-guidelines/grading-guidelines.umt" data-coord="index.umt:38:197">text</a></em>,[m
[32m+[m[32m<em data-coord="index.umt:38:256"><a href="./grading-guidelines/grading-guidelines.pdf" data-coord="index.umt:38:256">PDF</a></em>).[m
 </p></li></ul></section>[m
     </div> <!-- #content -->[m
     <script src="../assets/scripts/loginAction.js"></script>[m
[1mdiff --git a/misc/index.umt b/misc/index.umt[m
[1mindex 70e3733..8d198bb 100644[m
[1m--- a/misc/index.umt[m
[1m+++ b/misc/index.umt[m
[36m@@ -28,7 +28,9 @@[m [mthis course.[m
     Other formats: .<gui-remote-access/gui-remote-access.pdf> PDF,[m
     .<gui-remote-access/gui-remote-access.umt> source.[m
 [m
[32m+[m[32m  %%%[m
   + .<./doodles> Doodles: material hacked in class.[m
[32m+[m[32m  %%%[m
 [m
   + .<./fail2ban/fail2ban.html> "Fail2Ban Connectivity Issues".[m
     .<./fail2ban/fail2ban.pdf> PDF.[m
[1mdiff --git a/slides/intro/intro.html b/slides/intro/intro.html[m
[1mindex a255bab..724523c 100644[m
[1m--- a/slides/intro/intro.html[m
[1m+++ b/slides/intro/intro.html[m
[36m@@ -12,7 +12,7 @@[m
        <li><a href="../../index.html" class="material-icons">house</a></li>[m
        <li><a href="../../docs/index.html">Docs</a></li>[m
        <li><a href="../../exercises/index.html">Exercises</a></li>[m
[31m-   <li><a href="../../hws/index.html">Homeworks</a></li>[m
[32m+[m [32m<li><a href="../../hw/index.html">Homework</a></li>[m
        <li><a href="../../misc/index.html">Misc</a></li>[m
        <li><a href="../../projects/index.html">Projects</a></li>[m
        <li><a href="../../slides/index.html">Slides</a></li>[m
[1mdiff --git a/slides/intro/intro.pdf b/slides/intro/intro.pdf[m
[1mindex 91a148b..f6312ea 100644[m
Binary files a/slides/intro/intro.pdf and b/slides/intro/intro.pdf differ
[1mdiff --git a/slides/syllabus/syllabus.html b/slides/syllabus/syllabus.html[m
[1mindex 2689d43..cf8db0c 100644[m
[1m--- a/slides/syllabus/syllabus.html[m
[1m+++ b/slides/syllabus/syllabus.html[m
[36m@@ -12,7 +12,7 @@[m
        <li><a href="../../index.html" class="material-icons">house</a></li>[m
        <li><a href="../../docs/index.html">Docs</a></li>[m
        <li><a href="../../exercises/index.html">Exercises</a></li>[m
[31m-   <li><a href="../../hws/index.html">Homeworks</a></li>[m
[32m+[m [32m<li><a href="../../hw/index.html">Homework</a></li>[m
        <li><a href="../../misc/index.html">Misc</a></li>[m
        <li><a href="../../projects/index.html">Projects</a></li>[m
        <li><a href="../../slides/index.html">Slides</a></li>[m
[36m@@ -54,217 +54,222 @@[m
 </p><p data-coord="syllabus.umt:14:10">I will always try to reply to email within 24 hours (often[m
 much sooner).  To ensure prompt attention, always used the[m
 <samp data-coord="syllabus.umt:14:148">umrigar+cs220</samp> email address.[m
[31m-</p></section><section class="umt-slide" data-coord="syllabus.umt:20:0"><h2 data-coord="syllabus.umt:20:0">Zoom Office Hours</h2><ul data-coord="syllabus.umt:23:0"><li data-coord="syllabus.umt:23:0"><p data-coord="syllabus.umt:23:4">Office hours will be open; i.e. students can enter and leave[m
[31m-the zoom meeting as they please.[m
[31m-</p></li><li data-coord="syllabus.umt:26:0"><p data-coord="syllabus.umt:26:4">If you need to talk over a possible answer to an assignment, show[m
[31m-me some code or discuss a personal situation, please let me know;[m
[31m-I will turn on zoom's waiting room feature.[m
[31m-</p></li><li data-coord="syllabus.umt:30:0"><p data-coord="syllabus.umt:30:4">If there are no other students in the zoom meeting room, I may not[m
[32m+[m[32m</p></section><section class="umt-slide" data-coord="syllabus.umt:20:0"><h2 data-coord="syllabus.umt:20:0">Zoom Office Hours</h2><ul data-coord="syllabus.umt:23:0"><li data-coord="syllabus.umt:23:0"><p data-coord="syllabus.umt:23:4">Office hours will be set up with a waiting room; i.e. students can[m
[32m+[m[32mfeel free to share their work with me.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:26:0"><p data-coord="syllabus.umt:26:4">If I feel that what is being discussed is of general interest and[m
[32m+[m[32mthere are students in the waiting room, I may go ahead and let them in.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:29:0"><p data-coord="syllabus.umt:29:4">If there are no other students in the zoom meeting room, I may not[m
 notice your arrival right away.  Please say something to grab my[m
 attention and give me a couple of minutes to respond.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:35:0"><h2 data-coord="syllabus.umt:35:0">Teaching Assistants</h2><ul data-coord="syllabus.umt:38:0"><li data-coord="syllabus.umt:38:0"><p data-coord="syllabus.umt:38:4"><strong id="tas" data-coord="syllabus.umt:38:11">Barak Harari</strong>: <br data-coord="syllabus.umt:38:27"/> <em id="barak" data-coord="syllabus.umt:38:43">Email</em>: <a href="mailto:bharari1@binghamton.edu" data-coord="syllabus.umt:38:86">bharari1@binghamton.edu</a> <br data-coord="syllabus.umt:38:110"/>[m
[31m-<em data-coord="syllabus.umt:38:117">Zoom Link</em>: <a href="https://binghamton.zoom.us/j/99387704853" data-coord="syllabus.umt:38:174">zoom.</a> <br data-coord="syllabus.umt:38:180"/>[m
[31m-<em data-coord="syllabus.umt:38:187">Github ID</em>: <samp data-coord="syllabus.umt:38:200">barakharari</samp> <br data-coord="syllabus.umt:38:214"/>[m
[31m-<em data-coord="syllabus.umt:38:221">Zoom Office Hours</em>: Wed 4:30 - 5:30p.[m
[31m-</p></li><li data-coord="syllabus.umt:44:0"><p data-coord="syllabus.umt:44:4"><strong data-coord="syllabus.umt:44:4">Jerome D Herath</strong>: <br data-coord="syllabus.umt:44:23"/> <em id="jerome" data-coord="syllabus.umt:44:40">Email</em>: <a href="mailto:jherath1@binghamton.edu" data-coord="syllabus.umt:44:83">jherath1@binghamton.edu</a> <br data-coord="syllabus.umt:44:107"/>[m
[31m-<em data-coord="syllabus.umt:44:114">Zoom Link</em>: <a href="https://binghamton.zoom.us/j/92067773105" data-coord="syllabus.umt:44:171">zoom.</a> <br data-coord="syllabus.umt:44:177"/>[m
[31m-<em data-coord="syllabus.umt:44:184">Github ID</em>: <samp data-coord="syllabus.umt:44:197">dherath</samp> <br data-coord="syllabus.umt:44:207"/>[m
[31m-<em data-coord="syllabus.umt:44:214">Zoom Office Hours</em>: Tue, 5:00 - 6:00p.[m
[31m-</p></li><li data-coord="syllabus.umt:50:0"><p data-coord="syllabus.umt:50:4"><strong data-coord="syllabus.umt:50:4">Zhen Lin</strong>: <br data-coord="syllabus.umt:50:16"/> <em id="zhen" data-coord="syllabus.umt:50:31">Email</em>: <a href="mailto:zlin89@binghamton.edu" data-coord="syllabus.umt:50:72">zlin89@binghamton.edu</a> <br data-coord="syllabus.umt:50:94"/>[m
[31m-<em data-coord="syllabus.umt:50:101">Zoom Link</em>: <a href="https://binghamton.zoom.us/j/5511092872" data-coord="syllabus.umt:50:157">zoom.</a> <br data-coord="syllabus.umt:50:163"/>[m
[31m-<em data-coord="syllabus.umt:50:170">Github ID</em>: <samp data-coord="syllabus.umt:50:183">YesZhen</samp> <br data-coord="syllabus.umt:50:193"/>[m
[31m-<em data-coord="syllabus.umt:50:200">Zoom Office Hours</em>: Wed 3:30 - 4:30p. [m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:57:0"><h2 data-coord="syllabus.umt:57:0">CS 220A TA Responsibilities</h2><p data-coord="syllabus.umt:60:0">TA's responsible for <strong data-coord="syllabus.umt:60:21">all</strong> CS 220A grading.  [m
[31m-</p><ul data-coord="syllabus.umt:62:0"><li data-coord="syllabus.umt:62:0"><p data-coord="syllabus.umt:62:4"><strong data-coord="syllabus.umt:62:4">Homework Grading</strong>: <a href="#zhen" data-coord="syllabus.umt:62:33">Zhen</a> [m
[31m-</p></li><li data-coord="syllabus.umt:64:0"><p data-coord="syllabus.umt:64:4"><strong data-coord="syllabus.umt:64:4">Midterm + Final Grading</strong>: <a href="#zhen" data-coord="syllabus.umt:64:40">Zhen</a> <br data-coord="syllabus.umt:64:45"/>[m
[31m-</p></li><li data-coord="syllabus.umt:66:0"><p data-coord="syllabus.umt:66:4"><strong data-coord="syllabus.umt:66:4">Project Grading</strong>: <a href="#jerome" data-coord="syllabus.umt:66:34">Jerome;</a> Github ID: <samp data-coord="syllabus.umt:66:53">dherath</samp> [m
[31m-</p></li><li data-coord="syllabus.umt:68:0"><p data-coord="syllabus.umt:68:4"><strong data-coord="syllabus.umt:68:4">Lab Section A51 Thu 10:05 - 11:30 and A52 11:40 - 1:05p</strong>:[m
[31m-<a href="#zhen" data-coord="syllabus.umt:68:76">Zhen;</a> Github ID: <samp data-coord="syllabus.umt:68:93">YesZhen</samp> [m
[31m-</p></li><li data-coord="syllabus.umt:71:0"><p data-coord="syllabus.umt:71:4"><strong data-coord="syllabus.umt:71:4">Lab Section A52 Thu 11:40 - 1:05p</strong>:[m
[31m-<a href="#zhen" data-coord="syllabus.umt:71:54">Zhen;</a> Github ID: <samp data-coord="syllabus.umt:71:71">YesZhen</samp> [m
[31m-</p></li><li data-coord="syllabus.umt:74:0"><p data-coord="syllabus.umt:74:4"><strong data-coord="syllabus.umt:74:4">Lab Section A53 1:15 - 2:40p</strong>:[m
[31m-<a href="#jerome" data-coord="syllabus.umt:74:51">Jerome;</a> Github ID: <samp data-coord="syllabus.umt:74:70">dherath</samp> [m
[31m-</p></li></ul><p data-coord="syllabus.umt:78:0">All questions regarding grading on an assignment[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:34:0"><h2 data-coord="syllabus.umt:34:0">Teaching Assistants</h2><ul data-coord="syllabus.umt:37:0"><li data-coord="syllabus.umt:37:0"><p data-coord="syllabus.umt:37:4"><strong id="tas" data-coord="syllabus.umt:37:11">Barak Harari</strong>: <br data-coord="syllabus.umt:37:27"/> <em id="barak" data-coord="syllabus.umt:37:43">Email</em>: <a href="mailto:bharari1@binghamton.edu" data-coord="syllabus.umt:37:86">bharari1@binghamton.edu</a> <br data-coord="syllabus.umt:37:110"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:37:117">Zoom Link</em>: <a href="https://binghamton.zoom.us/j/99387704853" data-coord="syllabus.umt:37:174">zoom.</a> <br data-coord="syllabus.umt:37:180"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:37:187">Github ID</em>: <samp data-coord="syllabus.umt:37:200">barakharari</samp> <br data-coord="syllabus.umt:37:214"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:37:221">Zoom Office Hours</em>: Wed 4:30 - 5:30p.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:43:0"><p data-coord="syllabus.umt:43:4"><strong data-coord="syllabus.umt:43:4">Jerome D Herath</strong>: <br data-coord="syllabus.umt:43:23"/> <em id="jerome" data-coord="syllabus.umt:43:40">Email</em>: <a href="mailto:jherath1@binghamton.edu" data-coord="syllabus.umt:43:83">jherath1@binghamton.edu</a> <br data-coord="syllabus.umt:43:107"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:43:114">Zoom Link</em>: <a href="https://binghamton.zoom.us/j/92067773105" data-coord="syllabus.umt:43:171">zoom.</a> <br data-coord="syllabus.umt:43:177"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:43:184">Github ID</em>: <samp data-coord="syllabus.umt:43:197">dherath</samp> <br data-coord="syllabus.umt:43:207"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:43:214">Zoom Office Hours</em>: Tue, 5:00 - 6:00p.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:49:0"><p data-coord="syllabus.umt:49:4"><strong data-coord="syllabus.umt:49:4">Zhen Lin</strong>: <br data-coord="syllabus.umt:49:16"/> <em id="zhen" data-coord="syllabus.umt:49:31">Email</em>: <a href="mailto:zlin89@binghamton.edu" data-coord="syllabus.umt:49:72">zlin89@binghamton.edu</a> <br data-coord="syllabus.umt:49:94"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:49:101">Zoom Link</em>: <a href="https://binghamton.zoom.us/j/5511092872" data-coord="syllabus.umt:49:157">zoom.</a> <br data-coord="syllabus.umt:49:163"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:49:170">Github ID</em>: <samp data-coord="syllabus.umt:49:183">YesZhen</samp> <br data-coord="syllabus.umt:49:193"/>[m
[32m+[m[32m<em data-coord="syllabus.umt:49:200">Zoom Office Hours</em>: Wed 3:30 - 4:30p.[m[41m [m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:56:0"><h2 data-coord="syllabus.umt:56:0">CS 220A TA Responsibilities</h2><p data-coord="syllabus.umt:59:0">TA's responsible for <strong data-coord="syllabus.umt:59:21">all</strong> CS 220A grading.[m[41m  [m
[32m+[m[32m</p><ul data-coord="syllabus.umt:61:0"><li data-coord="syllabus.umt:61:0"><p data-coord="syllabus.umt:61:4"><strong data-coord="syllabus.umt:61:4">Homework Grading</strong>: <a href="#zhen" data-coord="syllabus.umt:61:33">Zhen</a>[m[41m [m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:63:0"><p data-coord="syllabus.umt:63:4"><strong data-coord="syllabus.umt:63:4">Midterm + Final Grading</strong>: <a href="#zhen" data-coord="syllabus.umt:63:40">Zhen</a> <br data-coord="syllabus.umt:63:45"/>[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:65:0"><p data-coord="syllabus.umt:65:4"><strong data-coord="syllabus.umt:65:4">Project Grading</strong>: <a href="#jerome" data-coord="syllabus.umt:65:34">Jerome;</a> Github ID: <samp data-coord="syllabus.umt:65:53">dherath</samp>[m[41m [m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:67:0"><p data-coord="syllabus.umt:67:4"><strong data-coord="syllabus.umt:67:4">Lab Section A51 Thu 10:05 - 11:30 and A52 11:40 - 1:05p</strong>:[m
[32m+[m[32m<a href="#zhen" data-coord="syllabus.umt:67:76">Zhen;</a> Github ID: <samp data-coord="syllabus.umt:67:93">YesZhen</samp>[m[41m [m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:70:0"><p data-coord="syllabus.umt:70:4"><strong data-coord="syllabus.umt:70:4">Lab Section A52 Thu 11:40 - 1:05p</strong>:[m
[32m+[m[32m<a href="#zhen" data-coord="syllabus.umt:70:54">Zhen;</a> Github ID: <samp data-coord="syllabus.umt:70:71">YesZhen</samp>[m[41m [m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:73:0"><p data-coord="syllabus.umt:73:4"><strong data-coord="syllabus.umt:73:4">Lab Section A53 1:15 - 2:40p</strong>:[m
[32m+[m[32m<a href="#jerome" data-coord="syllabus.umt:73:51">Jerome;</a> Github ID: <samp data-coord="syllabus.umt:73:70">dherath</samp>[m[41m [m
[32m+[m[32m</p></li></ul><p data-coord="syllabus.umt:77:0">All questions regarding grading on an assignment[m
 should first be addressed to the TA responsible for that assignment.[m
[31m-</p></section><section class="umt-slide" data-coord="syllabus.umt:82:0"><h2 data-coord="syllabus.umt:82:0">CS 220B TA Responsibilities</h2><p data-coord="syllabus.umt:85:0">TA's responsible for <strong data-coord="syllabus.umt:85:21">all</strong> CS 220B grading.[m
[31m-</p><ul data-coord="syllabus.umt:87:0"><li data-coord="syllabus.umt:87:0"><p data-coord="syllabus.umt:87:4"><strong data-coord="syllabus.umt:87:4">Homework Grading</strong>: <a href="#barak" data-coord="syllabus.umt:87:34">Barak</a>[m
[31m-</p></li><li data-coord="syllabus.umt:89:0"><p data-coord="syllabus.umt:89:4"><strong data-coord="syllabus.umt:89:4">Midterm + Final Grading</strong>: <a href="#barak" data-coord="syllabus.umt:89:41">Barak</a> <br data-coord="syllabus.umt:89:47"/>[m
[31m-</p></li><li data-coord="syllabus.umt:91:0"><p data-coord="syllabus.umt:91:4"><strong data-coord="syllabus.umt:91:4">Project Grading</strong>: <a href="#jerome" data-coord="syllabus.umt:91:34">Jerome;</a> Github ID: <samp data-coord="syllabus.umt:91:53">dherath</samp> [m
[31m-</p></li><li data-coord="syllabus.umt:93:0"><p data-coord="syllabus.umt:93:4"><strong data-coord="syllabus.umt:93:4">Lab Section B51: Thu 2:50 - 4:15p</strong>: <a href="#jerome" data-coord="syllabus.umt:93:52">Jerome;</a>[m
[31m-Github ID: <samp data-coord="syllabus.umt:93:75">dherath</samp> <br data-coord="syllabus.umt:93:85"/>[m
[31m-</p></li><li data-coord="syllabus.umt:96:0"><p data-coord="syllabus.umt:96:4"><strong data-coord="syllabus.umt:96:4">Lab Section B52: Thu 4:25 - 5:50p</strong>: <a href="#barak" data-coord="syllabus.umt:96:51">Barak;</a> Github[m
[31m-ID: <samp data-coord="syllabus.umt:96:73">barakharari</samp> <br data-coord="syllabus.umt:96:87"/>[m
[31m-</p></li><li data-coord="syllabus.umt:99:0"><p data-coord="syllabus.umt:99:4"><strong data-coord="syllabus.umt:99:4">Lab Section B53: Thu 6:00-7:25p</strong>: <a href="#barak" data-coord="syllabus.umt:99:49">Barak;</a> Github[m
[31m-ID: <samp data-coord="syllabus.umt:99:71">barakharari</samp> <br data-coord="syllabus.umt:99:85"/>[m
[31m-</p></li></ul><p data-coord="syllabus.umt:102:0">All questions regarding grading on an assignment[m
[32m+[m[32m</p></section><section class="umt-slide" data-coord="syllabus.umt:81:0"><h2 data-coord="syllabus.umt:81:0">CS 220B TA Responsibilities</h2><p data-coord="syllabus.umt:84:0">TA's responsible for <strong data-coord="syllabus.umt:84:21">all</strong> CS 220B grading.[m
[32m+[m[32m</p><ul data-coord="syllabus.umt:86:0"><li data-coord="syllabus.umt:86:0"><p data-coord="syllabus.umt:86:4"><strong data-coord="syllabus.umt:86:4">Homework Grading</strong>: <a href="#barak" data-coord="syllabus.umt:86:34">Barak</a>[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:88:0"><p data-coord="syllabus.umt:88:4"><strong data-coord="syllabus.umt:88:4">Midterm + Final Grading</strong>: <a href="#barak" data-coord="syllabus.umt:88:41">Barak</a> <br data-coord="syllabus.umt:88:47"/>[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:90:0"><p data-coord="syllabus.umt:90:4"><strong data-coord="syllabus.umt:90:4">Project Grading</strong>: <a href="#jerome" data-coord="syllabus.umt:90:34">Jerome;</a> Github ID: <samp data-coord="syllabus.umt:90:53">dherath</samp>[m[41m [m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:92:0"><p data-coord="syllabus.umt:92:4"><strong data-coord="syllabus.umt:92:4">Lab Section B51: Thu 2:50 - 4:15p</strong>: <a href="#jerome" data-coord="syllabus.umt:92:52">Jerome;</a>[m
[32m+[m[32mGithub ID: <samp data-coord="syllabus.umt:92:75">dherath</samp> <br data-coord="syllabus.umt:92:85"/>[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:95:0"><p data-coord="syllabus.umt:95:4"><strong data-coord="syllabus.umt:95:4">Lab Section B52: Thu 4:25 - 5:50p</strong>: <a href="#barak" data-coord="syllabus.umt:95:51">Barak;</a> Github[m
[32m+[m[32mID: <samp data-coord="syllabus.umt:95:73">barakharari</samp> <br data-coord="syllabus.umt:95:87"/>[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:98:0"><p data-coord="syllabus.umt:98:4"><strong data-coord="syllabus.umt:98:4">Lab Section B53: Thu 6:00-7:25p</strong>: <a href="#barak" data-coord="syllabus.umt:98:49">Barak;</a> Github[m
[32m+[m[32mID: <samp data-coord="syllabus.umt:98:71">barakharari</samp> <br data-coord="syllabus.umt:98:85"/>[m
[32m+[m[32m</p></li></ul><p data-coord="syllabus.umt:101:0">All questions regarding grading on an assignment[m
 should first be addressed to the TA responsible for that assignment.[m
[31m-</p></section><section class="umt-slide" data-coord="syllabus.umt:109:0"><h2 data-coord="syllabus.umt:109:0">Texts</h2><p data-coord="syllabus.umt:113:0">Randall E. Bryant and David R. O'Halloran, <em data-coord="syllabus.umt:113:43">Computer Systems: A Programmer's[m
[31m-Perspective</em>, 3rd Edition, Prentice-Hall, 2015. <strong data-coord="syllabus.umt:113:125">Recommended</strong>.[m
[31m-</p><p data-coord="syllabus.umt:116:0">Brian Kernighan and Dennis M. Ritchie, <em data-coord="syllabus.umt:116:39">The C Programming Language</em>, 2nd[m
[31m-Edition, Prentice-Hall, 1988. Known as K&amp;R2.  <strong data-coord="syllabus.umt:116:119">Recommended</strong>[m
[31m-</p></section><section class="umt-slide" data-coord="syllabus.umt:121:0"><h2 data-coord="syllabus.umt:121:0">Evaluation</h2><ul data-coord="syllabus.umt:124:0"><li data-coord="syllabus.umt:124:0"><p data-coord="syllabus.umt:124:4">Weekly tutorial labs.[m
[31m-</p></li><li data-coord="syllabus.umt:126:0"><p data-coord="syllabus.umt:126:4">Pop quizzes will test on material covered recently.[m
[31m-</p></li><li data-coord="syllabus.umt:128:0"><p data-coord="syllabus.umt:128:4">4-5 projects.[m
[31m-</p></li><li data-coord="syllabus.umt:130:0"><p data-coord="syllabus.umt:130:4">4-5 homeworks.[m
[31m-</p></li><li data-coord="syllabus.umt:132:0"><p data-coord="syllabus.umt:132:4">Midterm: During regular class time at a time to be announced,[m
[31m-</p></li><li data-coord="syllabus.umt:134:0"><p data-coord="syllabus.umt:134:4">Final: During exam week at time determined by the university.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:137:0"><h2 data-coord="syllabus.umt:137:0">Grading</h2><pre data-coord="syllabus.umt:141:0">      Labs (each missed lab: -1):    10%[m
[32m+[m[32m</p></section><section class="umt-slide" data-coord="syllabus.umt:108:0"><h2 data-coord="syllabus.umt:108:0">Texts</h2><p data-coord="syllabus.umt:112:0">Randall E. Bryant and David R. O'Halloran, <em data-coord="syllabus.umt:112:43">Computer Systems: A Programmer's[m
[32m+[m[32mPerspective</em>, 3rd Edition, Prentice-Hall, 2015. <strong data-coord="syllabus.umt:112:125">Recommended</strong>.[m
[32m+[m[32m</p><p data-coord="syllabus.umt:115:0">Brian Kernighan and Dennis M. Ritchie, <em data-coord="syllabus.umt:115:39">The C Programming Language</em>, 2nd[m
[32m+[m[32mEdition, Prentice-Hall, 1988. Known as K&amp;R2.  <strong data-coord="syllabus.umt:115:119">Recommended</strong>[m
[32m+[m[32m</p></section><section class="umt-slide" data-coord="syllabus.umt:120:0"><h2 data-coord="syllabus.umt:120:0">Evaluation</h2><ul data-coord="syllabus.umt:123:0"><li data-coord="syllabus.umt:123:0"><p data-coord="syllabus.umt:123:4">Weekly tutorial labs.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:125:0"><p data-coord="syllabus.umt:125:4">Pop quizzes will test on material covered recently.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:127:0"><p data-coord="syllabus.umt:127:4">4-5 projects.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:129:0"><p data-coord="syllabus.umt:129:4">4-5 homework assignments.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:131:0"><p data-coord="syllabus.umt:131:4">Midterm: During regular class time at a time to be announced,[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:133:0"><p data-coord="syllabus.umt:133:4">Final: During exam week at time determined by the university.[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:136:0"><h2 data-coord="syllabus.umt:136:0">Grading</h2><pre data-coord="syllabus.umt:140:0">      Labs (each missed lab: -1):    10%[m
       Pop Quizzes (lowest dropped):  11%[m
       Projects (lowest dropped)      24%[m
       Homeworks (lowest dropped)     20% [m
       Midterm:                       15%[m
       Final:                         20%[m
[31m-</pre></section><section class="umt-slide" data-coord="syllabus.umt:150:0"><h2 data-coord="syllabus.umt:150:0">Letter Grade Assignment</h2><ul data-coord="syllabus.umt:153:0"><li data-coord="syllabus.umt:153:0"><p data-coord="syllabus.umt:153:6">Letter grades will be assigned strictly monotonically based on[m
[32m+[m[32m</pre></section><section class="umt-slide" data-coord="syllabus.umt:149:0"><h2 data-coord="syllabus.umt:149:0">Letter Grade Assignment</h2><ul data-coord="syllabus.umt:152:0"><li data-coord="syllabus.umt:152:0"><p data-coord="syllabus.umt:152:6">Letter grades will be assigned strictly monotonically based on[m
 the numeric course grade.[m
[31m-</p></li><li data-coord="syllabus.umt:156:0"><p data-coord="syllabus.umt:156:6">A letter grade of A will be given only for consistent superior work.[m
[31m-</p></li><li data-coord="syllabus.umt:158:0"><p data-coord="syllabus.umt:158:6">You will get an F only if you miss turning in a lot of work[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:155:0"><p data-coord="syllabus.umt:155:6">A letter grade of A will be given only for consistent superior work.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:157:0"><p data-coord="syllabus.umt:157:6">You will get an F only if you miss turning in a lot of work[m
 or submit consistently very poor quality work.[m
[31m-</p></li><li data-coord="syllabus.umt:161:0"><p data-coord="syllabus.umt:161:6">TA <em data-coord="syllabus.umt:161:71"><a href="../../misc/grading-guidelines/grading-guidelines.pdf" data-coord="syllabus.umt:161:71">Grading Guidelines</a></em> are available.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:164:0"><h2 data-coord="syllabus.umt:164:0">Academic Honesty</h2><p data-coord="syllabus.umt:167:2">Cheating of any type will be penalized heavily.[m
[31m-</p><ul data-coord="syllabus.umt:169:0"><li data-coord="syllabus.umt:169:0"><p data-coord="syllabus.umt:169:6">Minimal penalty: letter grade dropped by one slot: i.e. an[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:160:0"><p data-coord="syllabus.umt:160:6">If you have an issue with the grading of a particular[m
[32m+[m[32massignment, it is <strong data-coord="syllabus.umt:160:84">imperative</strong> that you see the TA responsible[m
[32m+[m[32mfor that assignment before the final exam.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:164:0"><p data-coord="syllabus.umt:164:6">All letter grades are final unless there is some kind of clerical[m
[32m+[m[32merror.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:167:0"><p data-coord="syllabus.umt:167:6">TA <em data-coord="syllabus.umt:167:71"><a href="../../misc/grading-guidelines/grading-guidelines.pdf" data-coord="syllabus.umt:167:71">Grading Guidelines</a></em> are available.[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:170:0"><h2 data-coord="syllabus.umt:170:0">Academic Honesty</h2><p data-coord="syllabus.umt:173:2">Cheating of any type will be penalized heavily.[m
[32m+[m[32m</p><ul data-coord="syllabus.umt:175:0"><li data-coord="syllabus.umt:175:0"><p data-coord="syllabus.umt:175:6">Minimal penalty: letter grade dropped by one slot: i.e. an[m
 A becomes an A-, a B- becomes a C+, etc.  You will also need[m
 to sign a Watson college document which will be added to your[m
 file.[m
[31m-</p></li><li data-coord="syllabus.umt:174:0"><p data-coord="syllabus.umt:174:6">Permissible to collaborate to understand course material,[m
[31m-homework questions or project assignments. <strong data-coord="syllabus.umt:174:113">Not permissible to[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:180:0"><p data-coord="syllabus.umt:180:6">Permissible to collaborate to understand course material,[m
[32m+[m[32mhomework questions or project assignments. <strong data-coord="syllabus.umt:180:113">Not permissible to[m
       discuss solutions.</strong>[m
[31m-</p><ul data-coord="syllabus.umt:178:0"><li data-coord="syllabus.umt:178:0"><p data-coord="syllabus.umt:178:8">If you feel you may have inadvertently crossed the line, then[m
[32m+[m[32m</p><ul data-coord="syllabus.umt:184:0"><li data-coord="syllabus.umt:184:0"><p data-coord="syllabus.umt:184:8">If you feel you may have inadvertently crossed the line, then[m
 let us know; will not be considered cheating.[m
[31m-</p></li><li data-coord="syllabus.umt:181:0"><p data-coord="syllabus.umt:181:8">If submitting an assignment late after the solution has been[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:187:0"><p data-coord="syllabus.umt:187:8">If submitting an assignment late after the solution has been[m
 posted, you should obviously not be looking at the solution.[m
[31m-</p></li></ul></li><li data-coord="syllabus.umt:184:0"><p data-coord="syllabus.umt:184:6">All registered students must sign and complete an[m
[31m-<em data-coord="syllabus.umt:184:140"><a href="../../misc/academic-honesty-statement/academic-honesty-statement.pdf" data-coord="syllabus.umt:184:140">Academic Honesty Statement.</a></em>[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:188:0"><h2 data-coord="syllabus.umt:188:0">Mask Policy</h2><p data-coord="syllabus.umt:191:0">The university requires masks when indoors:[m
[31m-</p><ul data-coord="syllabus.umt:193:0"><li data-coord="syllabus.umt:193:0"><p data-coord="syllabus.umt:193:4">If you forget your face covering or it does not meet these[m
[32m+[m[32m</p></li></ul></li><li data-coord="syllabus.umt:190:0"><p data-coord="syllabus.umt:190:6">All registered students must sign and complete an[m
[32m+[m[32m<em data-coord="syllabus.umt:190:140"><a href="../../misc/academic-honesty-statement/academic-honesty-statement.pdf" data-coord="syllabus.umt:190:140">Academic Honesty Statement.</a></em>[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:194:0"><h2 data-coord="syllabus.umt:194:0">Mask Policy</h2><p data-coord="syllabus.umt:197:0">The university requires masks when indoors:[m
[32m+[m[32m</p><ul data-coord="syllabus.umt:199:0"><li data-coord="syllabus.umt:199:0"><p data-coord="syllabus.umt:199:4">If you forget your face covering or it does not meet these[m
 requirements, you will be asked to leave the room immediately. You[m
 may not return until you meet the requirement.  If there is a[m
 pop quiz during that class, you will miss the quiz.[m
[31m-</p></li><li data-coord="syllabus.umt:198:0"><p data-coord="syllabus.umt:198:4">If a student does not comply with the requirements, the remainder[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:204:0"><p data-coord="syllabus.umt:204:4">If a student does not comply with the requirements, the remainder[m
 of the class session will be canceled. The dean’s office will be[m
 notified and will work with the Student Records office to issue a[m
 failing grade (“F”) for the course regardless of when in the[m
 semester the incident occurs. The dean’s office will also inform[m
 the Office of Student Conduct.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:206:0"><h2 data-coord="syllabus.umt:206:0">Labs</h2><ul data-coord="syllabus.umt:209:0"><li data-coord="syllabus.umt:209:0"><p data-coord="syllabus.umt:209:4">Labs will be largely tutorial in nature.[m
[31m-</p></li><li data-coord="syllabus.umt:211:0"><p data-coord="syllabus.umt:211:4">Some labs will explore the topics covered in class in greater[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:212:0"><h2 data-coord="syllabus.umt:212:0">Labs</h2><ul data-coord="syllabus.umt:215:0"><li data-coord="syllabus.umt:215:0"><p data-coord="syllabus.umt:215:4">Labs will be largely tutorial in nature.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:217:0"><p data-coord="syllabus.umt:217:4">Some labs will explore the topics covered in class in greater[m
 depth.[m
[31m-</p></li><li data-coord="syllabus.umt:214:0"><p data-coord="syllabus.umt:214:4">Some labs will cover material like the Unix command-line or git[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:220:0"><p data-coord="syllabus.umt:220:4">Some labs will cover material like the Unix command-line or git[m
 which are not strictly related to the subject matter of this[m
 course.  This is in the spirit of MIT's[m
[31m-<em data-coord="syllabus.umt:214:215"><a href="https://missing.csail.mit.edu/" data-coord="syllabus.umt:214:215">Missing Semester</a></em>.[m
[31m-</p></li><li data-coord="syllabus.umt:219:0"><p data-coord="syllabus.umt:219:4">You must attend the lab sessions.  If you cannot complete a[m
[32m+[m[32m<em data-coord="syllabus.umt:220:215"><a href="https://missing.csail.mit.edu/" data-coord="syllabus.umt:220:215">Missing Semester</a></em>.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:225:0"><p data-coord="syllabus.umt:225:4">You must attend the lab sessions.  If you cannot complete a[m
 lab during the available time, you may complete it later and[m
 submit by Thu midnight.  Late days do not apply to labs.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:223:0"><h2 data-coord="syllabus.umt:223:0">Quizzes</h2><p data-coord="syllabus.umt:226:0">Pop quizzes will be held online during class.  [m
[31m-</p><ul data-coord="syllabus.umt:228:0"><li data-coord="syllabus.umt:228:0"><p data-coord="syllabus.umt:228:4">Each student will be given a personalized exam/quiz with[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:229:0"><h2 data-coord="syllabus.umt:229:0">Quizzes</h2><p data-coord="syllabus.umt:232:0">Pop quizzes will be held online during class.[m[41m  [m
[32m+[m[32m</p><ul data-coord="syllabus.umt:234:0"><li data-coord="syllabus.umt:234:0"><p data-coord="syllabus.umt:234:4">Each student will be given a personalized exam/quiz with[m
 random variations of questions in a random order.[m
[31m-</p></li><li data-coord="syllabus.umt:231:0"><p data-coord="syllabus.umt:231:4">Will be administered using a <em data-coord="syllabus.umt:231:33">personal home page</em> accessed[m
[31m-using the <strong data-coord="syllabus.umt:231:77">Login</strong> link on the course web site (access details[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:237:0"><p data-coord="syllabus.umt:237:4">Will be administered using a <em data-coord="syllabus.umt:237:33">personal home page</em> accessed[m
[32m+[m[32musing the <strong data-coord="syllabus.umt:237:77">Login</strong> link on the course web site (access details[m
 will be sent out shortly).[m
[31m-</p></li><li data-coord="syllabus.umt:235:0"><p data-coord="syllabus.umt:235:4">Quizzes will be multiple choice, usually based on[m
[31m-<a href="../../exercises" data-coord="syllabus.umt:235:77">Exercises.</a>[m
[31m-</p></li><li data-coord="syllabus.umt:238:0"><p data-coord="syllabus.umt:238:4">A quiz will usually have 5 questions with 2 points per question +[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:241:0"><p data-coord="syllabus.umt:241:4">Quizzes will be multiple choice, usually based on[m
[32m+[m[32m<a href="../../exercises" data-coord="syllabus.umt:241:77">Exercises.</a>[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:244:0"><p data-coord="syllabus.umt:244:4">A quiz will usually have 5 questions with 2 points per question +[m
 1 point for attempting the quiz.[m
[31m-</p></li><li data-coord="syllabus.umt:241:0"><p data-coord="syllabus.umt:241:4">If you anticipate that you will not have access to a laptop during[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:247:0"><p data-coord="syllabus.umt:247:4">If you anticipate that you will not have access to a laptop during[m
 class, please let me know ASAP.[m
[31m-</p></li><li data-coord="syllabus.umt:244:0"><p data-coord="syllabus.umt:244:4">Difficult but not impossible to cheat.[m
[31m-</p></li><li data-coord="syllabus.umt:246:0"><p data-coord="syllabus.umt:246:4">Basically on a honor system.[m
[31m-</p></li><li data-coord="syllabus.umt:248:0"><p data-coord="syllabus.umt:248:4">If you successfully cheat you will really be cheating yourself and[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:250:0"><p data-coord="syllabus.umt:250:4">Difficult but not impossible to cheat.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:252:0"><p data-coord="syllabus.umt:252:4">Basically on a honor system.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:254:0"><p data-coord="syllabus.umt:254:4">If you successfully cheat you will really be cheating yourself and[m
 damaging your self worth.[m
[31m-</p></li><li data-coord="syllabus.umt:251:0"><p data-coord="syllabus.umt:251:4">If cheating is detected, then action <strong data-coord="syllabus.umt:251:41">will be taken</strong>.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:253:0"><h2 data-coord="syllabus.umt:253:0">Projects</h2><p data-coord="syllabus.umt:257:0">Usually 5 projects.[m
[31m-</p><ol data-coord="syllabus.umt:259:0"><li data-coord="syllabus.umt:259:0"><p data-coord="syllabus.umt:259:4">Bit twiddling.[m
[31m-</p></li><li data-coord="syllabus.umt:261:0"><p data-coord="syllabus.umt:261:4">Data representation.[m
[31m-</p></li><li data-coord="syllabus.umt:263:0"><p data-coord="syllabus.umt:263:4">Hacking assembly code.[m
[31m-</p></li><li data-coord="syllabus.umt:265:0"><p data-coord="syllabus.umt:265:4">Computing statistics for assembly code.[m
[31m-</p></li><li data-coord="syllabus.umt:267:0"><p data-coord="syllabus.umt:267:4">Architecture simulator.[m
[31m-</p></li></ol></section><section class="umt-slide" data-coord="syllabus.umt:269:0"><h2 data-coord="syllabus.umt:269:0">Homework</h2><p data-coord="syllabus.umt:272:0">4 - 5 homework assignments:[m
[31m-</p><ul data-coord="syllabus.umt:274:0"><li data-coord="syllabus.umt:274:0"><p data-coord="syllabus.umt:274:4">Some questions will be simple exercises based on what was covered[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:257:0"><p data-coord="syllabus.umt:257:4">If cheating is detected, then action <strong data-coord="syllabus.umt:257:41">will be taken</strong>.[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:259:0"><h2 data-coord="syllabus.umt:259:0">Projects</h2><p data-coord="syllabus.umt:263:0">Usually 5 projects.[m
[32m+[m[32m</p><ol data-coord="syllabus.umt:265:0"><li data-coord="syllabus.umt:265:0"><p data-coord="syllabus.umt:265:4">Bit twiddling.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:267:0"><p data-coord="syllabus.umt:267:4">Data representation.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:269:0"><p data-coord="syllabus.umt:269:4">Hacking assembly code.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:271:0"><p data-coord="syllabus.umt:271:4">Computing statistics for assembly code.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:273:0"><p data-coord="syllabus.umt:273:4">Architecture simulator.[m
[32m+[m[32m</p></li></ol></section><section class="umt-slide" data-coord="syllabus.umt:275:0"><h2 data-coord="syllabus.umt:275:0">Homework</h2><p data-coord="syllabus.umt:278:0">4 - 5 homework assignments:[m
[32m+[m[32m</p><ul data-coord="syllabus.umt:280:0"><li data-coord="syllabus.umt:280:0"><p data-coord="syllabus.umt:280:4">Some questions will be simple exercises based on what was covered[m
 in class.[m
[31m-</p></li><li data-coord="syllabus.umt:277:0"><p data-coord="syllabus.umt:277:4">Some questions will require original thinking.[m
[31m-</p></li><li data-coord="syllabus.umt:279:0"><p data-coord="syllabus.umt:279:4">Some questions will require using external resources like the[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:283:0"><p data-coord="syllabus.umt:283:4">Some questions will require original thinking.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:285:0"><p data-coord="syllabus.umt:285:4">Some questions will require using external resources like the[m
 web.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:283:0"><h2 data-coord="syllabus.umt:283:0">Late Submission Policy</h2><ul data-coord="syllabus.umt:286:0"><li data-coord="syllabus.umt:286:0"><p data-coord="syllabus.umt:286:9">You are allowed to submit projects and homework late by up to[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:289:0"><h2 data-coord="syllabus.umt:289:0">Late Submission Policy</h2><ul data-coord="syllabus.umt:292:0"><li data-coord="syllabus.umt:292:0"><p data-coord="syllabus.umt:292:9">You are allowed to submit projects and homework late by up to[m
 3 days.[m
[31m-</p></li><li data-coord="syllabus.umt:289:0"><p data-coord="syllabus.umt:289:9">You may not use more than 7 late days over all assignments[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:295:0"><p data-coord="syllabus.umt:295:9">You may not use more than 7 late days over all assignments[m
 over the entire semester.[m
[31m-</p></li><li data-coord="syllabus.umt:292:0"><p data-coord="syllabus.umt:292:9">A day will count as 24 hours, irrespective of holidays or[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:298:0"><p data-coord="syllabus.umt:298:9">A day will count as 24 hours, irrespective of holidays or[m
 weekends.[m
[31m-</p></li><li data-coord="syllabus.umt:295:0"><p data-coord="syllabus.umt:295:9">Late submissions will not be accepted for some assignments,[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:301:0"><p data-coord="syllabus.umt:301:9">Late submissions will not be accepted for some assignments,[m
 especially before an exam or towards the end of the[m
 semester.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:309:0"><h2 data-coord="syllabus.umt:309:0">Course Web Site</h2><ul data-coord="syllabus.umt:313:0"><li data-coord="syllabus.umt:313:0"><p data-coord="syllabus.umt:313:6">All course material on course web site at  [m
[31m-<em data-coord="syllabus.umt:313:91"><a href="http://zdu.binghamton.edu/cs220" data-coord="syllabus.umt:313:91">&lt;http://zdu.binghamton.edu/cs220&gt;</a></em>.[m
[31m-</p></li><li data-coord="syllabus.umt:316:0"><p data-coord="syllabus.umt:316:6">Course web site mirrored at [m
[31m-<em data-coord="syllabus.umt:316:84"><a href="http://cs.binghamton.edu/~umrigar/cs220" data-coord="syllabus.umt:316:84">&lt;http://cs.binghamton.edu/~umrigar/cs220&gt;</a></em>.  Dynamic portions[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:315:0"><h2 data-coord="syllabus.umt:315:0">Course Web Site</h2><ul data-coord="syllabus.umt:319:0"><li data-coord="syllabus.umt:319:0"><p data-coord="syllabus.umt:319:6">All course material on course web site at[m[41m  [m
[32m+[m[32m<em data-coord="syllabus.umt:319:91"><a href="http://zdu.binghamton.edu/cs220" data-coord="syllabus.umt:319:91">&lt;http://zdu.binghamton.edu/cs220&gt;</a></em>.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:322:0"><p data-coord="syllabus.umt:322:6">Course web site mirrored at[m[41m [m
[32m+[m[32m<em data-coord="syllabus.umt:322:84"><a href="http://cs.binghamton.edu/~umrigar/cs220" data-coord="syllabus.umt:322:84">&lt;http://cs.binghamton.edu/~umrigar/cs220&gt;</a></em>.  Dynamic portions[m
 of the web site will not be mirror'd.[m
[31m-</p></li><li data-coord="syllabus.umt:320:0"><p data-coord="syllabus.umt:320:6">Slides usually available an hour before class.  PDF's look better[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:326:0"><p data-coord="syllabus.umt:326:6">Website password protected against bots.  You will be provided[m
[32m+[m[32mthe user-id and password in an email.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:329:0"><p data-coord="syllabus.umt:329:6">Slides usually available an hour before class.  PDF's look better[m
 and will be used in class until HTML slides made better, but links[m
 from PDF version of slides do not always work.  Slides may be updated[m
 up to one week after class to fix mistakes or make enhancements. [m
[31m-</p></li><li data-coord="syllabus.umt:325:0"><p data-coord="syllabus.umt:325:6">Entire course web site available via <samp data-coord="syllabus.umt:325:43">git</samp> repository at[m
[31m-<samp data-coord="syllabus.umt:325:69">ssh://</samp><em data-coord="syllabus.umt:325:77">user</em><samp data-coord="syllabus.umt:325:83">@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git</samp>.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:334:0"><p data-coord="syllabus.umt:334:6">Entire course web site available via <samp data-coord="syllabus.umt:334:43">git</samp> repository at[m
[32m+[m[32m<samp data-coord="syllabus.umt:334:69">ssh://</samp><em data-coord="syllabus.umt:334:77">user</em><samp data-coord="syllabus.umt:334:83">@remote.cs.binghamton.edu/~umrigar/git-repos/cs220.git</samp>.[m
 Useful for tracking changes.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:330:0"><h2 data-coord="syllabus.umt:330:0">Course Mailing List</h2><ul data-coord="syllabus.umt:333:0"><li data-coord="syllabus.umt:333:0"><p data-coord="syllabus.umt:333:6">All students registered for the course should have been[m
[31m-subscribed to the <a href="mailto:cs220@cs.binghamton.edu" data-coord="syllabus.umt:333:120">CS220</a>[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:339:0"><h2 data-coord="syllabus.umt:339:0">Course Mailing List</h2><ul data-coord="syllabus.umt:342:0"><li data-coord="syllabus.umt:342:0"><p data-coord="syllabus.umt:342:6">All students registered for the course should have been[m
[32m+[m[32msubscribed to the <a href="mailto:cs220@cs.binghamton.edu" data-coord="syllabus.umt:342:120">CS220</a>[m
 mailing list.[m
[31m-</p></li><li data-coord="syllabus.umt:337:0"><p data-coord="syllabus.umt:337:6">To change the email address via which you are subscribed to[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:346:0"><p data-coord="syllabus.umt:346:6">To change the email address via which you are subscribed to[m
 the list or would like to edit your subscription options, please[m
[31m-visit <em data-coord="syllabus.umt:337:205"><a href="https://www.cs.binghamton.edu/mailman/listinfo/cs220" data-coord="syllabus.umt:337:205">&lt;https://www.cs.binghamton.edu/mailman/listinfo/cs220&gt;</a></em>.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:344:0"><h2 data-coord="syllabus.umt:344:0">Catalog Description</h2><p data-coord="syllabus.umt:347:0"><em data-coord="syllabus.umt:347:0">The architecture and programming of computer systems. Data[m
[32m+[m[32mvisit <em data-coord="syllabus.umt:346:205"><a href="https://www.cs.binghamton.edu/mailman/listinfo/cs220" data-coord="syllabus.umt:346:205">&lt;https://www.cs.binghamton.edu/mailman/listinfo/cs220&gt;</a></em>.[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:353:0"><h2 data-coord="syllabus.umt:353:0">Catalog Description</h2><p data-coord="syllabus.umt:356:0"><em data-coord="syllabus.umt:356:0">The architecture and programming of computer systems. Data[m
 representation and computer arithmetic. Processor and memory[m
 organization. Assembly and machine language programming. Advanced C[m
 programming language constructs and their implementation in assembly[m
 language. Introduction to system software (assemblers, linkers,[m
 loaders, compilers). Supervised laboratory work involves programming[m
 and debugging using machine language, assembly language and C.</em>[m
[31m-</p><p data-coord="syllabus.umt:355:0"><strong data-coord="syllabus.umt:355:0">Credit Hours</strong>: 4 <br data-coord="syllabus.umt:355:18"/>[m
[31m-<strong data-coord="syllabus.umt:355:21">Contact Hours</strong>: 4.5 (3 + 1.5) <br data-coord="syllabus.umt:355:52"/>[m
[31m-<strong data-coord="syllabus.umt:355:55">Personal Hours</strong>: Expect at least 8 hours of work outside class. <br data-coord="syllabus.umt:355:120"/>[m
[31m-<strong data-coord="syllabus.umt:355:123">Prerequisites</strong>: CS 120 and CS 140; familiarity with at least one programming[m
[32m+[m[32m</p><p data-coord="syllabus.umt:364:0"><strong data-coord="syllabus.umt:364:0">Credit Hours</strong>: 4 <br data-coord="syllabus.umt:364:18"/>[m
[32m+[m[32m<strong data-coord="syllabus.umt:364:21">Contact Hours</strong>: 4.5 (3 + 1.5) <br data-coord="syllabus.umt:364:52"/>[m
[32m+[m[32m<strong data-coord="syllabus.umt:364:55">Personal Hours</strong>: Expect at least 8 hours of work outside class. <br data-coord="syllabus.umt:364:120"/>[m
[32m+[m[32m<strong data-coord="syllabus.umt:364:123">Prerequisites</strong>: CS 120 and CS 140; familiarity with at least one programming[m
 language.[m
[31m-</p></section><section class="umt-slide" data-coord="syllabus.umt:361:0"><h2 data-coord="syllabus.umt:361:0">Course Objective</h2><ul data-coord="syllabus.umt:364:0"><li data-coord="syllabus.umt:364:0"><p data-coord="syllabus.umt:364:4">To understand the details of a modern computer system.[m
[31m-</p></li><li data-coord="syllabus.umt:366:0"><p data-coord="syllabus.umt:366:4">To understand the interaction between hardware and software.[m
[31m-</p></li><li data-coord="syllabus.umt:368:0"><p data-coord="syllabus.umt:368:4">To develop expert proficiency in C.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:371:0"><h2 data-coord="syllabus.umt:371:0">Topics</h2><p data-coord="syllabus.umt:374:0">3 main topics:[m
[31m-</p><ol data-coord="syllabus.umt:376:0"><li data-coord="syllabus.umt:376:0"><p data-coord="syllabus.umt:376:4">C programming.[m
[31m-</p></li><li data-coord="syllabus.umt:378:0"><p data-coord="syllabus.umt:378:4">Understanding assembly language code.[m
[31m-</p></li><li data-coord="syllabus.umt:380:0"><p data-coord="syllabus.umt:380:4">Basics of computer architecture.[m
[31m-</p></li></ol></section><section class="umt-slide" data-coord="syllabus.umt:384:0"><h2 data-coord="syllabus.umt:384:0">Topic Details</h2><p data-coord="syllabus.umt:387:0">Will delve into the software and hardware architecture of a modern computer[m
[32m+[m[32m</p></section><section class="umt-slide" data-coord="syllabus.umt:370:0"><h2 data-coord="syllabus.umt:370:0">Course Objective</h2><ul data-coord="syllabus.umt:373:0"><li data-coord="syllabus.umt:373:0"><p data-coord="syllabus.umt:373:4">To understand the details of a modern computer system.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:375:0"><p data-coord="syllabus.umt:375:4">To understand the interaction between hardware and software.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:377:0"><p data-coord="syllabus.umt:377:4">To develop expert proficiency in C.[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:380:0"><h2 data-coord="syllabus.umt:380:0">Topics</h2><p data-coord="syllabus.umt:383:0">3 main topics:[m
[32m+[m[32m</p><ol data-coord="syllabus.umt:385:0"><li data-coord="syllabus.umt:385:0"><p data-coord="syllabus.umt:385:4">C programming.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:387:0"><p data-coord="syllabus.umt:387:4">Understanding assembly language code.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:389:0"><p data-coord="syllabus.umt:389:4">Basics of computer architecture.[m
[32m+[m[32m</p></li></ol></section><section class="umt-slide" data-coord="syllabus.umt:393:0"><h2 data-coord="syllabus.umt:393:0">Topic Details</h2><p data-coord="syllabus.umt:396:0">Will delve into the software and hardware architecture of a modern computer[m
 system (exemplified by Linux running on a x86 architecture).  Some of the[m
 topics covered will include (not chronological):[m
[31m-</p><ul data-coord="syllabus.umt:391:0"><li data-coord="syllabus.umt:391:0"><p data-coord="syllabus.umt:391:4">Overview of computer organization.[m
[31m-</p></li><li data-coord="syllabus.umt:393:0"><p data-coord="syllabus.umt:393:4">Data representation.[m
[31m-</p></li><li data-coord="syllabus.umt:395:0"><p data-coord="syllabus.umt:395:4">C programming constructs.[m
[31m-</p></li><li data-coord="syllabus.umt:397:0"><p data-coord="syllabus.umt:397:4">C libraries.[m
[31m-</p></li><li data-coord="syllabus.umt:399:0"><p data-coord="syllabus.umt:399:4">I/O devices.[m
[31m-</p></li><li data-coord="syllabus.umt:401:0"><p data-coord="syllabus.umt:401:4">Use of basic programming tools within a Unix environment.[m
[31m-</p></li><li data-coord="syllabus.umt:403:0"><p data-coord="syllabus.umt:403:4">Instruction-set architecture, assembly language.[m
[31m-</p></li><li data-coord="syllabus.umt:405:0"><p data-coord="syllabus.umt:405:4">Memory hierarchies.[m
[31m-</p></li><li data-coord="syllabus.umt:407:0"><p data-coord="syllabus.umt:407:4">Pipelining.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:410:0"><h2 data-coord="syllabus.umt:410:0">ABET Outcomes</h2><ul data-coord="syllabus.umt:414:0"><li data-coord="syllabus.umt:414:0"><p data-coord="syllabus.umt:414:4"><em data-coord="syllabus.umt:414:4">Analyze a complex computing problem, and to apply principles of[m
[32m+[m[32m</p><ul data-coord="syllabus.umt:400:0"><li data-coord="syllabus.umt:400:0"><p data-coord="syllabus.umt:400:4">Overview of computer organization.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:402:0"><p data-coord="syllabus.umt:402:4">Data representation.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:404:0"><p data-coord="syllabus.umt:404:4">C programming constructs.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:406:0"><p data-coord="syllabus.umt:406:4">C libraries.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:408:0"><p data-coord="syllabus.umt:408:4">Use of basic programming tools within a Unix environment.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:410:0"><p data-coord="syllabus.umt:410:4">Instruction-set architecture, assembly language.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:412:0"><p data-coord="syllabus.umt:412:4">Memory hierarchies.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:414:0"><p data-coord="syllabus.umt:414:4">Pipelining.[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:417:0"><h2 data-coord="syllabus.umt:417:0">ABET Outcomes</h2><ul data-coord="syllabus.umt:421:0"><li data-coord="syllabus.umt:421:0"><p data-coord="syllabus.umt:421:4"><em data-coord="syllabus.umt:421:4">Analyze a complex computing problem, and to apply principles of[m
      computing and other relevant disciplines to identify solutions.</em>[m
[31m-</p></li><li data-coord="syllabus.umt:417:0"><p data-coord="syllabus.umt:417:4"><em data-coord="syllabus.umt:417:4">Design, implement, and evaluate a computing-based solution to[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:424:0"><p data-coord="syllabus.umt:424:4"><em data-coord="syllabus.umt:424:4">Design, implement, and evaluate a computing-based solution to[m
      meet a given set of computing requirements in the context of the[m
      program's discipline.</em>[m
[31m-</p></li></ul><p data-coord="syllabus.umt:421:0">Both objectives will be evaluated using projects, homework and exams.[m
[31m-</p></section><section class="umt-slide" data-coord="syllabus.umt:423:0"><h2 data-coord="syllabus.umt:423:0">Problems</h2><ul data-coord="syllabus.umt:426:0"><li data-coord="syllabus.umt:426:0"><p data-coord="syllabus.umt:426:4">If you are having problems, please see me ASAP; <strong data-coord="syllabus.umt:426:52">do not wait till[m
[32m+[m[32m</p></li></ul><p data-coord="syllabus.umt:428:0">Both objectives will be evaluated using projects, homework and exams.[m
[32m+[m[32m</p></section><section class="umt-slide" data-coord="syllabus.umt:430:0"><h2 data-coord="syllabus.umt:430:0">Problems</h2><ul data-coord="syllabus.umt:433:0"><li data-coord="syllabus.umt:433:0"><p data-coord="syllabus.umt:433:4">If you are having problems, please see me ASAP; <strong data-coord="syllabus.umt:433:52">do not wait till[m
     the end of the semester</strong>.[m
[31m-</p></li><li data-coord="syllabus.umt:429:0"><p data-coord="syllabus.umt:429:4">Flexible regarding deadlines under exceptional circumstances.[m
[31m-</p></li><li data-coord="syllabus.umt:431:0"><p data-coord="syllabus.umt:431:4">If you are experiencing undue personal or academic stress at any[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:436:0"><p data-coord="syllabus.umt:436:4">Flexible regarding deadlines under exceptional circumstances.[m
[32m+[m[32m</p></li><li data-coord="syllabus.umt:438:0"><p data-coord="syllabus.umt:438:4">If you are experiencing undue personal or academic stress at any[m
  time during the semester or need to talk with someone about a[m
  personal problem or situation, I encourage you to seek support as[m
  soon as possible. I am available to talk with you about stresses[m
  related to your work in my class.[m
[31m-</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:437:0"><h2 data-coord="syllabus.umt:437:0">Contact Info for Help</h2><dl data-coord="syllabus.umt:441:0"><dt data-coord="syllabus.umt:441:0">Dean of Students Office</dt><dd data-coord="syllabus.umt:442:0"><p data-coord="syllabus.umt:442:2">607-777-2804[m
[31m-</p></dd><dt data-coord="syllabus.umt:444:0">Decker Student Health Services Center</dt><dd data-coord="syllabus.umt:445:0"><p data-coord="syllabus.umt:445:2">607-777-2221[m
[31m-</p></dd><dt data-coord="syllabus.umt:447:0">University Police</dt><dd data-coord="syllabus.umt:448:0"><p data-coord="syllabus.umt:448:2">On campus emergency, 911[m
[31m-</p></dd><dt data-coord="syllabus.umt:450:0">University Counseling Center</dt><dd data-coord="syllabus.umt:451:0"><p data-coord="syllabus.umt:451:2">607-777-2772[m
[31m-</p></dd><dt data-coord="syllabus.umt:453:0">Interpersonal Violence Prevention</dt><dd data-coord="syllabus.umt:454:0"><p data-coord="syllabus.umt:454:2">607-777-3062[m
[31m-</p></dd><dt data-coord="syllabus.umt:456:0">Harpur Advising</dt><dd data-coord="syllabus.umt:457:0"><p data-coord="syllabus.umt:457:2">607-777-6305[m
[31m-</p></dd><dt data-coord="syllabus.umt:459:0">Office of International Student &amp; Scholar Services</dt><dd data-coord="syllabus.umt:460:0"><p data-coord="syllabus.umt:460:2">607-777-2510[m
[31m-</p></dd><dt data-coord="syllabus.umt:462:0">University Ombudsman</dt><dd data-coord="syllabus.umt:463:0"><p data-coord="syllabus.umt:463:2">Main campus: 607-777-2388; University Downtown Center office 607-777-2388[m
[31m-</p></dd><dt data-coord="syllabus.umt:465:0">Services for Students with Disabilities</dt><dd data-coord="syllabus.umt:466:0"><p data-coord="syllabus.umt:466:2">607-777-2686 (Voice, TTY)[m
[32m+[m[32m</p></li></ul></section><section class="umt-slide" data-coord="syllabus.umt:444:0"><h2 data-coord="syllabus.umt:444:0">Contact Info for Help</h2><dl data-coord="syllabus.umt:448:0"><dt data-coord="syllabus.umt:448:0">Dean of Students Office</dt><dd data-coord="syllabus.umt:449:0"><p data-coord="syllabus.umt:449:2">607-777-2804[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:451:0">Decker Student Health Services Center</dt><dd data-coord="syllabus.umt:452:0"><p data-coord="syllabus.umt:452:2">607-777-2221[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:454:0">University Police</dt><dd data-coord="syllabus.umt:455:0"><p data-coord="syllabus.umt:455:2">On campus emergency, 911[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:457:0">University Counseling Center</dt><dd data-coord="syllabus.umt:458:0"><p data-coord="syllabus.umt:458:2">607-777-2772[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:460:0">Interpersonal Violence Prevention</dt><dd data-coord="syllabus.umt:461:0"><p data-coord="syllabus.umt:461:2">607-777-3062[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:463:0">Harpur Advising</dt><dd data-coord="syllabus.umt:464:0"><p data-coord="syllabus.umt:464:2">607-777-6305[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:466:0">Office of International Student &amp; Scholar Services</dt><dd data-coord="syllabus.umt:467:0"><p data-coord="syllabus.umt:467:2">607-777-2510[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:469:0">University Ombudsman</dt><dd data-coord="syllabus.umt:470:0"><p data-coord="syllabus.umt:470:2">Main campus: 607-777-2388; University Downtown Center office 607-777-2388[m
[32m+[m[32m</p></dd><dt data-coord="syllabus.umt:472:0">Services for Students with Disabilities</dt><dd data-coord="syllabus.umt:473:0"><p data-coord="syllabus.umt:473:2">607-777-2686 (Voice, TTY)[m
 </p></dd></dl></section></section>[m
 </div> <!-- #content -->[m
 <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>[m
[1mdiff --git a/slides/syllabus/syllabus.pdf b/slides/syllabus/syllabus.pdf[m
[1mindex f9cf693..7162cfd 100644[m
Binary files a/slides/syllabus/syllabus.pdf and b/slides/syllabus/syllabus.pdf differ
[1mdiff --git a/slides/syllabus/syllabus.umt b/slides/syllabus/syllabus.umt[m
[1mindex 73c4aeb..1388295 100644[m
[1m--- a/slides/syllabus/syllabus.umt[m
[1m+++ b/slides/syllabus/syllabus.umt[m
[36m@@ -20,12 +20,11 @@[m
                           Zoom Office Hours[m
                           =================[m
 [m
[31m-  + Office hours will be open; i.e. students can enter and leave[m
[31m-    the zoom meeting as they please.[m
[32m+[m[32m  + Office hours will be set up with a waiting room; i.e. students can[m
[32m+[m[32m    feel free to share their work with me.[m
 [m
[31m-  + If you need to talk over a possible answer to an assignment, show[m
[31m-    me some code or discuss a personal situation, please let me know;[m
[31m-    I will turn on zoom's waiting room feature.[m
[32m+[m[32m  + If I feel that what is being discussed is of general interest and[m
[32m+[m[32m    there are students in the waiting room, I may go ahead and let them in.[m
     [m
   + If there are no other students in the zoom meeting room, I may not[m
     notice your arrival right away.  Please say something to grab my[m
[36m@@ -127,7 +126,7 @@[m [mEdition, Prentice-Hall, 1988. Known as K&R2.  *Recommended*[m
 [m
   + 4-5 projects.[m
 [m
[31m-  + 4-5 homeworks.[m
[32m+[m[32m  + 4-5 homework assignments.[m
 [m
   + Midterm: During regular class time at a time to be announced,[m
 [m
[36m@@ -158,6 +157,13 @@[m [mEdition, Prentice-Hall, 1988. Known as K&R2.  *Recommended*[m
     + You will get an F only if you miss turning in a lot of work[m
       or submit consistently very poor quality work.[m
 [m
[32m+[m[32m    + If you have an issue with the grading of a particular[m
[32m+[m[32m      assignment, it is *imperative* that you see the TA responsible[m
[32m+[m[32m      for that assignment before the final exam.[m
[32m+[m
[32m+[m[32m    + All letter grades are final unless there is some kind of clerical[m
[32m+[m[32m      error.[m
[32m+[m
     + TA .<../../misc/grading-guidelines/grading-guidelines.pdf>[m
       "Grading Guidelines" are available.[m
 [m
[36m@@ -317,6 +323,9 @@[m [mUsually 5 projects.[m
       .<http://cs.binghamton.edu/~umrigar/cs220> "".  Dynamic portions[m
       of the web site will not be mirror'd.[m
 [m
[32m+[m[32m    + Website password protected against bots.  You will be provided[m
[32m+[m[32m      the user-id and password in an email.[m
[32m+[m
     + Slides usually available an hour before class.  PDF's look better[m
       and will be used in class until HTML slides made better, but links[m
       from PDF version of slides do not always work.  Slides may be updated[m
[36m@@ -396,8 +405,6 @@[m [mtopics covered will include (not chronological):[m
 [m
   + C libraries.[m
 [m
[31m-  + I/O devices.[m
[31m-[m
   + Use of basic programming tools within a Unix environment.[m
 [m
   + Instruction-set architecture, assembly language.[m
[7m(END)[27m[K[K[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K/[K[K[7mNo previous regular expression  (press RETURN)[27m[45;1H[K[K[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K [K^X^X[K[7m(END)[27m[K[K [K^X^X[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K [K^X^X[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K/[K[K[7mNo previous regular expression  (press RETURN)[27m[45;1H[K[K[K[7m(END)[27m[K[K[K[7m(END)[27m[K[K[?1l>
akozina2@remote00:~/projects/cs220$  ~/.profile
bash: /home/akozina2/.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ touch .profile
akozina2@remote00:~/projects/cs220$ .profile
bash: .profile: command not found
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ ~umrigar/cs220/bin/student.profile
bash: /home/umrigar/cs220/bin/student.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ en[Kmacs .profile
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lSetting up indent for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation variables are now local.[H
[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation setup for shell type sh[K[H[7mFile Edit Options Buffers Tools Sh-Script Help                                               [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m.profile    [0m[39;49m[27m[7m   All L1     (Shell-script[sh]) -----------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[?25lMark set[H
[?12l[?25h[?12;25h[?25l~umrigar/cs220/bin/student.profile[44;6H[7m**[0m[39;49m[27m[2;35H[?12l[?25h[?12;25h[45;1H[K[2;35H[45;1H[?25lSaving file /home/akozina2/projects/cs220/.profile...[2;35H[?12l[?25h[?12;25h[45;1H[?25lWrote /home/akozina2/projects/cs220/.profile[K[2;35H[?12l[?25h[?12;25h[44;6H[?25l[7m--[0m[39;49m[27m[2;35H[?12l[?25h[?12;25h[45;1H[K[2;35H[45;1H[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ ~umrigar/cs220/bin/student.profile
bash: /home/umrigar/cs220/bin/student.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ .profile
bash: .profile: command not found
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ emacs .profile
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lSetting up indent for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation variables are now local.[H
[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation setup for shell type sh[K[H[7mFile Edit Options Buffers Tools Sh-Script Help                                               [0m[39;49m[27m
[A
~umrigar/cs220/bin/student.profile[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.profile    [0m[39;49m[27m[7m   All L1     (Shell-script[sh]) -----------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[?25l(No changes need to be saved)[H
[?12l[?25h[?12;25h[45d[K[2d[45d[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ /.bashrc
bash: /.bashrc: No such file or directory
akozina2@remote00:~/projects/cs220$ emacs .bashrc
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25l(New file)[K[H
[?12l[?25h[?12;25h[45d[?25lSetting up indent for shell type bash[H
[?12l[?25h[?12;25h[45d[?25lIndentation variables are now local.[K[H
[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type bash[H
[?12l[?25h[?12;25h[45d[?25lIndentation setup for shell type bash[K[H[7mFile Edit Options Buffers Tools Sh-Script Help                                               [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m.bashrc     [0m[39;49m[27m[7m   All L1     (Shell-script[bash]) ---------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[?25lWrote /home/akozina2/projects/cs220/.bashrc[H
[?12l[?25h[?12;25h[45d[K[2d[45d[?25lMark set[H
[?12l[?25h[?12;25h[?25l~umrigar/cs220/bin/student.rc[44;6H[7m**[0m[39;49m[27m[2;30H[?12l[?25h[?12;25h[45;1H[K[2;30H[45;1H[?25lSaving file /home/akozina2/projects/cs220/.bashrc...[2;30H[?12l[?25h[?12;25h[45;1H[?25lWrote /home/akozina2/projects/cs220/.bashrc[K[2;30H[?12l[?25h[?12;25h[44;6H[?25l[7m--[0m[39;49m[27m[2;30H[?12l[?25h[?12;25h[45;1H[K[2;30H[45;1H[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ . ~umrigar/cs220/bin/student.profile
bash: /home/umrigar/cs220/bin/student.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ emacs .profile
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lSetting up indent for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation variables are now local.[H
[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation setup for shell type sh[K[H[7mFile Edit Options Buffers Tools Sh-Script Help                                               [0m[39;49m[27m
[A
~umrigar/cs220/bin/student.profile[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.profile    [0m[39;49m[27m[7m   All L1     (Shell-script[sh]) -----------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lBeginning of buffer[K[H
[?12l[?25h[?12;25h[45d[K[2d[45d[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ .prfo[K[Kofil[K[K[K[K[K[K[Ktouch .profile
akozina2@remote00:~/projects/cs220$ . ~umrigar/cs220/bin/student.profile
bash: /home/umrigar/cs220/bin/student.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	   README.md  umt.make
announce.umt   bin     exercises  index.html  labs	 projects  slides
akozina2@remote00:~/projects/cs220$ ~/.profile.[K
bash: /home/akozina2/.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ touch profile.txt
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	      index.umt  misc	      projects	 slides
announce.umt   bin     exercises  index.html  labs	 profile.txt  README.md  umt.make
akozina2@remote00:~/projects/cs220$ ~/.profile
bash: /home/akozina2/.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ .profile
bash: .profile: command not found
akozina2@remote00:~/projects/cs220$ emacs .profile
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lSetting up indent for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation variables are now local.[H
[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type sh[K[H
[?12l[?25h[?12;25h[45d[?25lIndentation setup for shell type sh[K[H[7mFile Edit Options Buffers Tools Sh-Script Help                                               [0m[39;49m[27m
[A
~umrigar/cs220/bin/student.profile[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.profile    [0m[39;49m[27m[7m   All L1     (Shell-script[sh]) -----------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ emacs profile.txt
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Text Help                                                    [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1mprofile.txt [0m[39;49m[27m[7m   All L1     (Text) -----------------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[?25lMark set[H
[?12l[?25h[?12;25h[?25l. ~umrigar/cs220/bin/student.profile[44;6H[7m**[0m[39;49m[27m[2;37H[?12l[?25h[?12;25h[45;1H[K[2;37H[45;1H[?25lSaving file /home/akozina2/projects/cs220/profile.txt...[2;37H[?12l[?25h[?12;25h[45;1H[?25lWrote /home/akozina2/projects/cs220/profile.txt[K[2;37H[?12l[?25h[?12;25h[44;6H[?25l[7m--[0m[39;49m[27m[2;37H[?12l[?25h[?12;25h[45;1H[K[2;37H[45;1H[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ ~/.profile.
bash: /home/akozina2/.profile.: No such file or directory
akozina2@remote00:~/projects/cs220$ ~/.profile.[K
bash: /home/akozina2/.profile: No such file or directory
akozina2@remote00:~/projects/cs220$ touch .profile
akozina2@remote00:~/projects/cs220$ ld [K[Ks -a
.	       assets	 docs	     hw		 misc	      profile.txt~  umt.make
..	       .bashrc	 exercises   index.html  .profile     projects
announce.html  .bashrc~  .git	     index.umt	 .profile~    README.md
announce.umt   bin	 .gitignore  labs	 profile.txt  slides
akozina2@remote00:~/projects/cs220$ cat .profile
~umrigar/cs220/bin/student.profile
akozina2@remote00:~/projects/cs220$ cat .profile[K[K[K[K[K[K[Kbashrc
~umrigar/cs220/bin/student.rc
akozina2@remote00:~/projects/cs220$ emcs
bash: emcs: command not found
akozina2@remote00:~/projects/cs220$ emacs
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
Welcome to GNU Emacs, one component of the GNU/Linux operating system.[K
[K
Get help           C-h  (Hold down CTRL and press h)[K
[4m[36mEmacs manual[0m[39;49m       C-h r        [4m[36mBrowse manuals[0m[39;49m     C-h i[K
[4m[36mEmacs tutorial[0m[39;49m     C-h t        Undo changes       C-x u[K
[4m[36mBuy manuals[0m[39;49m        C-h RET      Exit Emacs         C-x C-c[K
[4m[36mActivate menubar[0m[39;49m   M-`[K
(‘C-’ means use the CTRL key.  ‘M-’ means use the Meta (or Alt) key.[K
If you have no Meta key, you may instead type ESC followed by the character.)[K
Useful tasks:[K
[4m[36mVisit New File[0m[39;49m                  [4m[36mOpen Home Directory[0m[39;49m[K
[4m[36mCustomize Startup[0m[39;49m               [4m[36mOpen *scratch* buffer[0m[39;49m[K
[K
GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.5, cairo version 1.16.0)[K
 of 2021-02-09, modified by Debian[K
Copyright (C) 2020 Free Software Foundation, Inc.[K
[K
GNU Emacs comes with ABSOLUTELY NO WARRANTY; type C-h C-w for [4m[36mfull details[0m[39;49m.[K
Emacs is Free Software--Free as in Freedom--so you can redistribute copies[K
of Emacs and modify it; type C-h C-c to see [4m[36mthe conditions[0m[39;49m.[K
Type C-h C-o for information on [4m[36mgetting the latest version[0m[39;49m.[K
[K
If an Emacs session crashed recently, type M-x recover-session RET[K
to recover the files you were editing.[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:%%--F1  [0m[39;49m[27m[7m[1m*GNU Emacs* [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[?25l[36mFind file: [39;49m~/projects/cs220/[1;33H[7mMinibuf Help[0m[39;49m[27m[45;29H[?12l[?25h[?12;25h[K[H[?25l[7mFile Edit Options Buffers Tools Operate Mark Regexp Immediate Subdir Help                    [0m[39;49m[27m
[A
  [32m/home/akozina2/projects/cs220[39;49m:[K
  total used in directory 56 available 13.2 TiB[K
  drwxr-x--- 12 akozina2 akozina2 4096 Aug 26 16:09 [1m[34m.[0m[39;49m[K
  drwxr-x---  3 akozina2 akozina2   26 Aug 26 15:09 [1m[34m..[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2 1040 Aug 26 15:09 announce.html[K
  -rw-r-----  1 akozina2 akozina2   55 Aug 26 15:09 announce.umt[K
  drwxr-x---  6 akozina2 akozina2   76 Aug 26 15:09 [1m[34massets[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2   30 Aug 26 16:02 .bashrc[K
  -rw-r-----  1 akozina2 akozina2    0 Aug 26 16:02 [33m.bashrc~[39;49m[K
  drwxr-x---  2 akozina2 akozina2  154 Aug 26 15:09 [1m[34mbin[0m[39;49m[K
  drwxr-x---  2 akozina2 akozina2   70 Aug 26 15:09 [1m[34mdocs[0m[39;49m[K
  drwxr-x---  4 akozina2 akozina2 4096 Aug 26 15:09 [1m[34mexercises[0m[39;49m[K
  drwxr-x---  8 akozina2 akozina2 4096 Aug 26 15:15 [1m[34m.git[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2   13 Aug 26 15:09 .gitignore[K
  drwxr-x---  2 akozina2 akozina2   51 Aug 26 15:09 [1m[34mhw[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2 2033 Aug 26 15:09 index.html[K
  -rw-r-----  1 akozina2 akozina2  422 Aug 26 15:09 index.umt[K
  drwxr-x---  4 akozina2 akozina2   84 Aug 26 15:09 [1m[34mlabs[0m[39;49m[K
  drwxr-x---  6 akozina2 akozina2 4096 Aug 26 15:09 [1m[34mmisc[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2   35 Aug 26 16:11 .profile[K
  -rw-r-----  1 akozina2 akozina2    0 Aug 26 15:56 [33m.profile~[39;49m[K
  -rw-r-----  1 akozina2 akozina2   37 Aug 26 16:09 profile.txt[K
  -rw-r-----  1 akozina2 akozina2    0 Aug 26 16:08 [33mprofile.txt~[39;49m[K
  drwxr-x---  2 akozina2 akozina2   51 Aug 26 15:09 [1m[34mprojects[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2   19 Aug 26 15:09 README.md[K
  drwxr-x---  4 akozina2 akozina2  112 Aug 26 15:09 [1m[34mslides[0m[39;49m[K
  -rw-r-----  1 akozina2 akozina2 1204 Aug 26 15:09 umt.make[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:%%--F1  [0m[39;49m[27m[7m[1mcs220            [0m[39;49m[27m[7m   All L5     (Dired by name) ---------------------------------[0m[39;49m[27m
[A[6;53H[?12l[?25h[?12;25h[44;39H[?25l[7m6[0m[39;49m[27m[7;53H[?12l[?25h[?12;25h[44;39H[?25l[7m7[0m[39;49m[27m[8;53H[?12l[?25h[?12;25h[44;39H[?25l[7m8[0m[39;49m[27m[9;53H[?12l[?25h[?12;25h[45;1H[?25lSetting up indent for shell type bash[9;53H[?12l[?25h[?12;25h[45;1H[?25lIndentation variables are now local.[K[9;53H[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type bash[9;53H[?12l[?25h[?12;25h[45;1H[?25lIndentation setup for shell type bash[K[H[7mFile Edit Options Buffers Tools Sh-Script Help                                               [0m[39;49m[27m
[A
~umrigar/cs220/bin/student.rc[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.bashrc     [0m[39;49m[27m[7m   All L1     (Shell-script[bash]) ---------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m1[0m[39;49m[27m[H
[?12l[?25h[?12;25h[C[?25l[1@.[44;6H[7m**[0m[39;49m[27m[2;2H[?12l[?25h[?12;25h[?25l[1m[34m.[0m[39;49m[1@ [?12l[?25h[?12;25h[45;1H[?25lSaving file /home/akozina2/projects/cs220/.bashrc...[2;3H[?12l[?25h[?12;25h[45;1H[?25lWrote /home/akozina2/projects/cs220/.bashrc[K[2;3H[?12l[?25h[?12;25h[44;6H[?25l[7m--[0m[39;49m[27m[2;3H[?12l[?25h[?12;25h[45;1H[K[2;3H[45;1H[?25l[36mFind file: [39;49m~/projects/cs220/[1;33H[7mMinibuf Help  [0m[39;49m[27m[45;29H[?12l[?25h[?12;25h[?25lDirectory has changed on disk; type g to update Dired[2;3H[?12l[?25h[?12;25h[1;33H[?25l[7mOperate Mark Regexp Immediate Subdir Help[0m[39;49m[27m
  [32m/home/akozina2/projects/cs220[39;49m:[3;3Htotal used in directory 56 available 13.2 TiB[4;3Hdrwxr-x--- 12 akozina2 akozina2 4096 Aug 26 16:09 [1m[34m.[0m[39;49m[5;3Hdrwxr-x---  3 akozina2 akozina2   26 Aug 26 15:09 [1m[34m..[0m[39;49m[6;3H-rw-r-----  1 akozina2 akozina2 1040 Aug 26 15:09 announce.html[7;3H-rw-r-----  1 akozina2 akozina2   55 Aug 26 15:09 announce.umt[8;3Hdrwxr-x---  6 akozina2 akozina2   76 Aug 26 15:09 [1m[34massets[0m[39;49m[9;3H-rw-r-----  1 akozina2 akozina2   30 Aug 26 16:02 .bashrc[10;3H-rw-r-----  1 akozina2 akozina2    0 Aug 26 16:02 [33m.bashrc~[39;49m[11;3Hdrwxr-x---  2 akozina2 akozina2  154 Aug 26 15:09 [1m[34mbin[0m[39;49m[12;3Hdrwxr-x---  2 akozina2 akozina2   70 Aug 26 15:09 [1m[34mdocs[0m[39;49m[13;3Hdrwxr-x---  4 akozina2 akozina2 4096 Aug 26 15:09 [1m[34mexercises[0m[39;49m[14;3Hdrwxr-x---  8 akozina2 akozina2 4096 Aug 26 15:15 [1m[34m.git[0m[39;49m[15;3H-rw-r-----  1 akozina2 akozina2   13 Aug 26 15:09 .gitignore[16;3Hdrwxr-x---  2 akozina2 akozina2   51 Aug 26 15:09 [1m[34mhw[0m[39;49m[17;3H-rw-r-----  1 akozina2 akozina2 2033 Aug 26 15:09 index.html[18;3H-rw-r-----  1 akozina2 akozina2  422 Aug 26 15:09 index.umt[19;3Hdrwxr-x---  4 akozina2 akozina2   84 Aug 26 15:09 [1m[34mlabs[0m[39;49m[20;3Hdrwxr-x---  6 akozina2 akozina2 4096 Aug 26 15:09 [1m[34mmisc[0m[39;49m[21;3H-rw-r-----  1 akozina2 akozina2   35 Aug 26 16:11 .profile[22;3H-rw-r-----  1 akozina2 akozina2    0 Aug 26 15:56 [33m.profile~[39;49m[23;3H-rw-r-----  1 akozina2 akozina2   37 Aug 26 16:09 profile.txt[24;3H-rw-r-----  1 akozina2 akozina2    0 Aug 26 16:08 [33mprofile.txt~[39;49m[25;3Hdrwxr-x---  2 akozina2 akozina2   51 Aug 26 15:09 [1m[34mprojects[0m[39;49m[26;3H-rw-r-----  1 akozina2 akozina2   19 Aug 26 15:09 README.md[27;3Hdrwxr-x---  4 akozina2 akozina2  112 Aug 26 15:09 [1m[34mslides[0m[39;49m[28;3H-rw-r-----  1 akozina2 akozina2 1204 Aug 26 15:09 umt.make[44;4H[7mU:%%--F1  [0m[39;49m[27m[7m[1mcs220            [0m[39;49m[27m[7m   All L8     (Dired by name[0m[39;49m[27m[9;53H[?12l[?25h[?12;25h[45;1H[K[44;39H[?25l[7m9[0m[39;49m[27m[10;53H[?12l[?25h[?12;25h[44;39H[?25l[7m10[0m[39;49m[27m[11;53H[?12l[?25h[?12;25h[44;40H[?25l[7m1[0m[39;49m[27m[12;53H[?12l[?25h[?12;25h[44;40H[?25l[7m2[0m[39;49m[27m[13;53H[?12l[?25h[?12;25h[44;40H[?25l[7m3[0m[39;49m[27m[14;53H[?12l[?25h[?12;25h[44;40H[?25l[7m8[0m[39;49m[27m[19;53H[?12l[?25h[?12;25h[44;40H[?25l[7m9[0m[39;49m[27m[20;53H[?12l[?25h[?12;25h[44;39H[?25l[7m20[0m[39;49m[27m[21;53H[?12l[?25h[?12;25h[45;1H[?25lSetting up indent for shell type sh[21;53H[?12l[?25h[?12;25h[45;1H[?25lIndentation variables are now local.[21;53H[?12l[?25h[?12;25h[45;13H[?25lsetup for shell type sh[K[21;53H[?12l[?25h[?12;25h[1;33H[?25l[7mSh-Script Help                           [0m[39;49m[27m
~umrigar/cs220/bin/student.profile
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K[44;4H[7m-:----F1  [0m[39;49m[27m[7m[1m.profile    [0m[39;49m[27m[7m   All L1     (Shell-script[sh]) --[0m[39;49m[27m[H
[?12l[?25h[?12;25h[45d[K[2d[?25l[1@.[44;6H[7m**[0m[39;49m[27m[2;2H[?12l[?25h[?12;25h[K
[?25l~umrigar/cs220/bin/student.profile[44;34H[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[2;2H[?25l~umrigar/cs220/bin/student.profile
[K[44;34H[7m1[0m[39;49m[27m[2;2H[?12l[?25h[?12;25h[?25l[1@ [?12l[?25h[?12;25h[45;1H[?25lSaving file /home/akozina2/projects/cs220/.profile...[2;3H[?12l[?25h[?12;25h[45;1H[?25lWrote /home/akozina2/projects/cs220/.profile[K[2;3H[?12l[?25h[?12;25h[44;6H[?25l[7m--[0m[39;49m[27m[2;3H[?12l[?25h[?12;25h[45;1H[K[2;3H[45;1H[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC99PeDNtYnT/wU5/n13CtJD+DXMY4bt7yVb5R6uyeVFdIiFjp/efnPwHnIwHeSLYdPIJRy8DahZgfJvH3lA0QFKSMbgdnWwnJznnrurJOAoa/w0tMQRDLfVDUG9QIcj3zgZLBIBF6+Uy1b6xnBWynia1OT7NzAeWcQBQgVZAvtcyOrTjfSxN0SA/iw210sj6/Mn+lMhIpXSWAm+fZZD8ImPhPX9kiMLH1sSl52voFhOAAp80j5URpbHj10iDmTuOVooEVtURngeyhRziqsWaZlA/YpkgFKi2zDVdc3rQ7KqitLNfhbqcG//LWT1Xwo410b0TaFeJIZ+SR+NrWFcSRx/ZODF/NWbLELTld8O4xOcz4jCl7m+XltLeAYtzBLCbt7mrHniEI/PvYaechVMUzuZTrKnFp5DnYIFNq0r1PAwqApMVqItVYDBoFQKwcDkr+C1x7cp91LGeWCOJ8atvd3llrH++eFJ10NITY3cBzDR7dq3ZYFzcvjkVg4cbbtjKM= akozina2@remote01
akozina2@remote00:~/projects/cs220$ ^C
akozina2@remote00:~/projects/cs220$ mkdir -p ~/projects[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kgit clone git@github.com:annitusha/i220b.git
Cloning into 'i220b'...
The authenticity of host 'github.com (140.82.112.4)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'github.com,140.82.112.4' (RSA) to the list of known hosts.
remote: Enumerating objects: 4, done.[K
remote: Counting objects:  25% (1/4)[Kremote: Counting objects:  50% (2/4)[Kremote: Counting objects:  75% (3/4)[Kremote: Counting objects: 100% (4/4)[Kremote: Counting objects: 100% (4/4), done.[K
remote: Compressing objects:  33% (1/3)[Kremote: Compressing objects:  66% (2/3)[Kremote: Compressing objects: 100% (3/3)[Kremote: Compressing objects: 100% (3/3), done.[K
remote: Total 4 (delta 0), reused 0 (delta 0), pack-reused 0[K
Receiving objects:  25% (1/4)Receiving objects:  50% (2/4)Receiving objects:  75% (3/4)Receiving objects: 100% (4/4)Receiving objects: 100% (4/4), done.
akozina2@remote00:~/projects/cs220$ cd ~
akozina2@remote00:~$ ln -s ~/projects/i220? .
akozina2@remote00:~$ ls -a 
 .		 binarymult.c~	  input.txt	       output.txt   '#test.s#'
 ..		 binarymult.txt   input.txt~	       output.txt~   test.s
 ann		 .config	  lab13		       printhex.c    test.s~
'#anna.c#'	 cs220		  lab13.zip	       projects      tinyProc.s
 .#anna.c	 .emacs.d	  lastname.txt	       sort3.c	     tinyProc.s~
 anna.c		'#fahren.c#'	  .lesshst	       sort3.c~      tmp
 anna.c~	 fahren.c	  .lldb		      '#sort.c#'    '#total.c#'
 anna_cs	 fahren.c~	 '#multi.c#'	       sort.c	     tp3assembler
 annaexec	 firstname.txt	  multi.c	       sort.c~	     tp3assembler.c
 annasort	 .forward	  multi.c~	       .ssh	     uppercase.c
'#ann.c#'	 .gnupg		  multTable2.s	      '#test#'	     uppercase.c~
 ann.c		 hello		  multTable2.s~       '#test2.c#'    .viminfo
 ann.c~		 hello.c	  multTable.c	       test2.c	     .viminfo.tmp
 .ann.c.swp	 hello.c~	 '#multTable.s#'       test2.s	     xyz
 annitusha.c	 homework9.s	  multTable.s	       test2.s~      zipcode.txt
 average.c	 homework9.s~	  multTable.s~	       test3.c
 average.c~	 hw9QtSpim.c	 '#nameAsemmblyL.s#'   test3.c~
 .bash_history	'i220?'		  nameAssemblyL.s      test.c
 binarymult.c	 .input.txt	  nameAssemblyL.s~     test.c~
akozina2@remote00:~$ ls
 ann		  cs220		  lastname.txt	       projects     test.s
'#anna.c#'	 '#fahren.c#'	 '#multi.c#'	       sort3.c	    test.s~
 anna.c		  fahren.c	  multi.c	       sort3.c~     tinyProc.s
 anna.c~	  fahren.c~	  multi.c~	      '#sort.c#'    tinyProc.s~
 anna_cs	  firstname.txt   multTable2.s	       sort.c	    tmp
 annaexec	  hello		  multTable2.s~        sort.c~	   '#total.c#'
 annasort	  hello.c	  multTable.c	      '#test#'	    tp3assembler
'#ann.c#'	  hello.c~	 '#multTable.s#'      '#test2.c#'   tp3assembler.c
 ann.c		  homework9.s	  multTable.s	       test2.c	    uppercase.c
 ann.c~		  homework9.s~	  multTable.s~	       test2.s	    uppercase.c~
 annitusha.c	  hw9QtSpim.c	 '#nameAsemmblyL.s#'   test2.s~     xyz
 average.c	 'i220?'	  nameAssemblyL.s      test3.c	    zipcode.txt
 average.c~	  input.txt	  nameAssemblyL.s~     test3.c~
 binarymult.c	  input.txt~	  output.txt	       test.c
 binarymult.c~	  lab13		  output.txt~	       test.c~
 binarymult.txt   lab13.zip	  printhex.c	      '#test.s#'
akozina2@remote00:~$ cd [K[K[Kcd ~/projects
akozina2@remote00:~/projects$ ls
cs220
akozina2@remote00:~/projects$ cd 22[K[Kcs220
akozina2@remote00:~/projects/cs220$ ls
announce.html  assets  docs	  hw	 index.html  labs  profile.txt	 projects   slides
announce.umt   bin     exercises  i220b  index.umt   misc  profile.txt~  README.md  umt.make
akozina2@remote00:~/projects/cs220$ git pull
[33mhint: Pulling without specifying how to reconcile divergent branches is[m
[33mhint: discouraged. You can squelch this message by running one of the following[m
[33mhint: commands sometime before your next pull:[m
[33mhint: [m
[33mhint:   git config pull.rebase false  # merge (the default strategy)[m
[33mhint:   git config pull.rebase true   # rebase[m
[33mhint:   git config pull.ff only       # fast-forward only[m
[33mhint: [m
[33mhint: You can replace "git config" with "git config --global" to set a default[m
[33mhint: preference for all repositories. You can also pass --rebase, --no-rebase,[m
[33mhint: or --ff-only on the command line to override the configured default per[m
[33mhint: invocation.[m
Already up to date.
akozina2@remote00:~/projects/cs220$ ls -[K[K[K[Kls -a
.	       assets	 docs	     hw		 labs	    profile.txt   slides
..	       .bashrc	 exercises   i220b	 misc	    profile.txt~  umt.make
announce.html  .bashrc~  .git	     index.html  .profile   projects
announce.umt   bin	 .gitignore  index.umt	 .profile~  README.md
akozina2@remote00:~/projects/cs220$ .[Kcat .gitignot[Kre
*~
*.o
a.out
akozina2@remote00:~/projects/cs220$ emacs .gitignot[Kre
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
*~[K
*.o[K
a.out[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.gitignore  [0m[39;49m[27m[7m   All L1    [0m[39;49m[27m[7mGit-main[0m[39;49m[27m[7m  (Fundamental) -------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[2d[45d[?25l(No changes need to be saved)[H
[?12l[?25h[?12;25h[45d[K[2d[45d[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ emacs .gitignore
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
*~[K
*.o[K
a.out[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.gitignore  [0m[39;49m[27m[7m   All L1    [0m[39;49m[27m[7mGit-main[0m[39;49m[27m[7m  (Fundamental) -------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[K[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m3[0m[39;49m[27m[4;1H[?12l[?25h[?12;25h[44;34H[?25l[7m4[0m[39;49m[27m[5;1H[?12l[?25h[?12;25h[?25l*[44;6H[7m**[0m[39;49m[27m[5;2H[?12l[?25h[?12;25h[?25l~[?12l[?25h[?12;25h[44;34H[?25l[7m5[0m[39;49m[27m[6;1H[?12l[?25h[?12;25h[45d[?25lSaving file /home/akozina2/projects/cs220/.gitignore...[6;1H[?12l[?25h[?12;25h[45d[?25lWrote /home/akozina2/projects/cs220/.gitignore[K[6;1H[?12l[?25h[?12;25h[44;6H[?25l[7m----F1  [0m[39;49m[27m[7m[1m.gitignore  [0m[39;49m[27m[7m   All L5    [0m[39;49m[27m[7mGit:[0m[39;49m[27m[6;1H[?12l[?25h[?12;25h[45d[K[6d[45d[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/projects/cs220$ cd ~/i220X[KB[Kb
bash: cd: /home/akozina2/i220b: No such file or directory
akozina2@remote00:~/projects/cs220$ cd 1220[K[K[K[Ki220b
akozina2@remote00:~/projects/cs220/i220b$ ls -a
.  ..  .git  .gitignore  README.md
akozina2@remote00:~/projects/cs220/i220b$ cd ~/i220X[Kb
bash: cd: /home/akozina2/i220b: No such file or directory
akozina2@remote00:~/projects/cs220/i220b$ git status -s #see if there are changes you want to commit
akozina2@remote00:~/projects/cs220/i220b$ git commit -a -m 'SOME COMMIT MSG' #commit if necessary
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
akozina2@remote00:~/projects/cs220/i220b$ git push #push changes to github
Warning: Permanently added the RSA host key for IP address '140.82.114.4' to the list of known hosts.
Everything up-to-date
akozina2@remote00:~/projects/cs220/i220b$ ls -dl ~/cs220 ~/i220X
ls: cannot access '/home/akozina2/i220X': No such file or directory
lrwxrwxrwx 1 akozina2 akozina2 14 Aug 26 15:10 /home/akozina2/cs220 -> projects/cs220
akozina2@remote00:~/projects/cs220/i220b$ ls -dl ~/cs220 ~/i220X[Kb
ls: cannot access '/home/akozina2/i220b': No such file or directory
lrwxrwxrwx 1 akozina2 akozina2 14 Aug 26 15:10 /home/akozina2/cs220 -> projects/cs220
akozina2@remote00:~/projects/cs220/i220b$ ls -dl ~/cs220 ~/i220X[1P[C[C[C[C[C[C[C[C[1P/i220X[C[C[C[C[C[C[Kb
ls: cannot access '/cs220': No such file or directory
ls: cannot access '/i220b': No such file or directory
akozina2@remote00:~/projects/cs220/i220b$ ls -dl ~/cs220 ~/i220X[Kb
ls: cannot access '/home/akozina2/i220b': No such file or directory
lrwxrwxrwx 1 akozina2 akozina2 14 Aug 26 15:10 /home/akozina2/cs220 -> projects/cs220
akozina2@remote00:~/projects/cs220/i220b$ pwd
/home/akozina2/projects/cs220/i220b
akozina2@remote00:~/projects/cs220/i220b$ ls - dl[K[K[Kdl 
drwxr-x--- 3 akozina2 akozina2 66 Aug 26 16:32 .
akozina2@remote00:~/projects/cs220/i220b$ cd
akozina2@remote00:~$ ls
 ann		  cs220		  lastname.txt	       projects     test.s
'#anna.c#'	 '#fahren.c#'	 '#multi.c#'	       sort3.c	    test.s~
 anna.c		  fahren.c	  multi.c	       sort3.c~     tinyProc.s
 anna.c~	  fahren.c~	  multi.c~	      '#sort.c#'    tinyProc.s~
 anna_cs	  firstname.txt   multTable2.s	       sort.c	    tmp
 annaexec	  hello		  multTable2.s~        sort.c~	   '#total.c#'
 annasort	  hello.c	  multTable.c	      '#test#'	    tp3assembler
'#ann.c#'	  hello.c~	 '#multTable.s#'      '#test2.c#'   tp3assembler.c
 ann.c		  homework9.s	  multTable.s	       test2.c	    uppercase.c
 ann.c~		  homework9.s~	  multTable.s~	       test2.s	    uppercase.c~
 annitusha.c	  hw9QtSpim.c	 '#nameAsemmblyL.s#'   test2.s~     xyz
 average.c	 'i220?'	  nameAssemblyL.s      test3.c	    zipcode.txt
 average.c~	  input.txt	  nameAssemblyL.s~     test3.c~
 binarymult.c	  input.txt~	  output.txt	       test.c
 binarymult.c~	  lab13		  output.txt~	       test.c~
 binarymult.txt   lab13.zip	  printhex.c	      '#test.s#'
akozina2@remote00:~$ cd cs220
akozina2@remote00:~/cs220$ ls
announce.html  assets  docs	  hw	 index.html  labs  profile.txt	 projects   slides
announce.umt   bin     exercises  i220b  index.umt   misc  profile.txt~  README.md  umt.make
akozina2@remote00:~/cs220$ lscd cs220ls[Kcdls -dl [4Ppwdls -dl ~/cs220 ~/i220b[K[K[K[K[K[K[K
lrwxrwxrwx 1 akozina2 akozina2 14 Aug 26 15:10 /home/akozina2/cs220 -> projects/cs220
akozina2@remote00:~/cs220$ ls -dl ~/cs220 [Kcd cs220ls[Kcdls -dl [4Ppwdls -dl [4Ppwd[K[K[Kcd
akozina2@remote00:~$ ls
 ann		  cs220		  lastname.txt	       projects     test.s
'#anna.c#'	 '#fahren.c#'	 '#multi.c#'	       sort3.c	    test.s~
 anna.c		  fahren.c	  multi.c	       sort3.c~     tinyProc.s
 anna.c~	  fahren.c~	  multi.c~	      '#sort.c#'    tinyProc.s~
 anna_cs	  firstname.txt   multTable2.s	       sort.c	    tmp
 annaexec	  hello		  multTable2.s~        sort.c~	   '#total.c#'
 annasort	  hello.c	  multTable.c	      '#test#'	    tp3assembler
'#ann.c#'	  hello.c~	 '#multTable.s#'      '#test2.c#'   tp3assembler.c
 ann.c		  homework9.s	  multTable.s	       test2.c	    uppercase.c
 ann.c~		  homework9.s~	  multTable.s~	       test2.s	    uppercase.c~
 annitusha.c	  hw9QtSpim.c	 '#nameAsemmblyL.s#'   test2.s~     xyz
 average.c	 'i220?'	  nameAssemblyL.s      test3.c	    zipcode.txt
 average.c~	  input.txt	  nameAssemblyL.s~     test3.c~
 binarymult.c	  input.txt~	  output.txt	       test.c
 binarymult.c~	  lab13		  output.txt~	       test.c~
 binarymult.txt   lab13.zip	  printhex.c	      '#test.s#'
akozina2@remote00:~$ cd ~
akozina2@remote00:~$ ln -s ~/projects/i220? .
ln: failed to create symbolic link './i220?': File exists
akozina2@remote00:~$ cd 122[K[K[K[K[K[Kln -s ~/projects/i220? .[C[1P .b .
akozina2@remote00:~$ cd i220b
bash: cd: i220b: No such file or directory
akozina2@remote00:~$ cd cs220
akozina2@remote00:~/cs220$ cd i220b
akozina2@remote00:~/cs220/i220b$ ls -a
.  ..  .git  .gitignore  README.md
akozina2@remote00:~/cs220/i220b$ emacs .gitignore
[?1049h[22;0;0t[?12;25h[?1h=[H[2J[45d[K[?1l>[?12l[?25h[?1049l[23;0;0t[39;49m[?1049h[22;0;0t[?12;25h[?1h=[H[2J[44d[?25l[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lLoading /etc/emacs/site-start.d/00debian.el (source)...done[K[H
[?12l[?25h[?12;25h[45;33H[?25l50a2ps.el (source)...[K[H
[?12l[?25h[?12;25h[45;54H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lsymptote.el (source)...[H
[?12l[?25h[?12;25h[45;59H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lutoconf.el (source)...[K[H
[?12l[?25h[?12;25h[45;58H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lcmake-data.el (source)...[K[H
[?12l[?25h[?12;25h[45;60H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25ldevhelp.el (source)...[K[H
[?12l[?25h[?12;25h[45;57H[?25ldone[H
[?12l[?25h[?12;25h[45;36H[?25lictionaries-common.el (source)...[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-default.el (source)...[H
[?12l[?25h[?12;25h[45;77H[?25ldone[H
[?12l[?25h[?12;25h[45;9H[?25ldebian-ispell...done[K[H
[?12l[?25h[?12;25h[45;9H[?25l/var/cache/dictionaries-common/emacsen-ispell-dicts.el (source)...[H
[?12l[?25h[?12;25h[45;75H[?25ldone[H
[?12l[?25h[?12;25h[45;10H[?25letc/emacs/site-start.d/50dictionaries-common[6P[H
[?12l[?25h[?12;25h[45;35H[?25lerlang-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45;61H[?25ldone[H
[?12l[?25h[?12;25h[45;35H[?25lhaskell-mode.el (source)...[K[H
[?12l[?25h[?12;25h[45d[?25l...[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Fundamental) ----------------------------------------[0m[39;49m[27m
[A
Loading /usr/share/emacs/site-lisp/elpa/haskell-mode-16.1/haskell-mode-autoloads.el (source)\
[A[2d[?12l[?25h[?12;25h[45;4H[?25ldone[H
[?12l[?25h[?12;25h[45d[K[44;10H[?25letc/emacs/site-start.d/50haskell-mode.el (source)...done[K[H
[?12l[?25h[?12;25h[44;35H[?25llatex-cjk-common.el (source)...[H
[?12l[?25h[?12;25h[44;10H[?25lusr/share/emacs/site-lisp/latex-cjk-commo[9@n/cjk-enc[H
[?12l[?25h[?12;25h[44;75H[?25ldone[H
[?12l[?25h[?12;25h[44;10H[?25letc/emacs/site-start.d/50latex-cjk-common[9P[H
[?12l[?25h[?12;25h[44;45H[?25lthai.el (source)...[K[H
[?12l[?25h[?12;25h[44;64H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25lpsvn.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lython-docutils.el (source)...[H
[?12l[?25h[?12;25h[44;65H[?25ldone[H
[?12l[?25h[?12;25h[44;35H[?25ltcsh.el (source)...[K[H
[?12l[?25h[?12;25h[44;54H[?25ldone[H
[?12l[?25h[?12;25h[44;36H[?25lexlive-lang-english.el (source)...[H
[?12l[?25h[?12;25h[44;70H[?25ldone[H
[?12l[?25h[?12;25h[>0c]11;?\[>4;1m[?2004h[?1004h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Lisp-Interaction Help                                        [0m[39;49m[27m
[A
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[K
[7m-UUU:----F1  [0m[39;49m[27m[7m[1m*scratch*   [0m[39;49m[27m[7m   All L1     (Lisp Interaction ElDoc) -----------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lFor information about GNU Emacs and the GNU system, type C-h C-a.[K[H[7mFile Edit Options Buffers Tools Help                                                         [0m[39;49m[27m
[A
# Prerequisites[K
*.d[K
[K
# Object files[K
*.o[K
*.ko[K
*.obj[K
*.elf[K
[K
# Linker output[K
*.ilk[K
*.map[K
*.exp[K
[K
# Precompiled Headers[K
*.gch[K
*.pch[K
[K
# Libraries[K
*.lib[K
*.a[K
*.la[K
*.lo[K
[K
# Shared objects (inc. Windows DLLs)[K
*.dll[K
*.so[K
*.so.*[K
*.dylib[K
[K
# Executables[K
*.exe[K
*.out[K
*.app[K
*.i*86[K
*.x86_64[K
*.hex[K
[K
# Debug files[K
*.dSYM/[K
*.su[K
*.idb[K
[7m-UU-:----F1  [0m[39;49m[27m[7m[1m.gitignore  [0m[39;49m[27m[7m   Top L1    [0m[39;49m[27m[7mGit-main[0m[39;49m[27m[7m  (Fundamental) -------------------------------[0m[39;49m[27m
[A[2d[?12l[?25h[?12;25h[45d[?25lBeginning of buffer[K[H
[?12l[?25h[?12;25h[45d[K[44;34H[?25l[7m3[0m[39;49m[27m[4;1H[?12l[?25h[?12;25h[44;34H[?25l[7m4[0m[39;49m[27m[5;1H[?12l[?25h[?12;25h[44;34H[?25l[7m5[0m[39;49m[27m[6;1H[?12l[?25h[?12;25h[44;34H[?25l[7m7[0m[39;49m[27m[8;1H[?12l[?25h[?12;25h[44;34H[?25l[7m8[0m[39;49m[27m[9;1H[?12l[?25h[?12;25h[44;34H[?25l[7m10[0m[39;49m[27m[11;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[12;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[13;1H[?12l[?25h[?12;25h[44;35H[?25l[7m3[0m[39;49m[27m[14;1H[?12l[?25h[?12;25h[44;35H[?25l[7m4[0m[39;49m[27m[15;1H[?12l[?25h[?12;25h[44;35H[?25l[7m5[0m[39;49m[27m[16;1H[?12l[?25h[?12;25h[44;35H[?25l[7m6[0m[39;49m[27m[17;1H[?12l[?25h[?12;25h[44;35H[?25l[7m7[0m[39;49m[27m[18;1H[?12l[?25h[?12;25h[44;35H[?25l[7m6[0m[39;49m[27m[17;1H[?12l[?25h[?12;25h[44;35H[?25l[7m5[0m[39;49m[27m[16;1H[?12l[?25h[?12;25h[44;35H[?25l[7m4[0m[39;49m[27m[15;1H[?12l[?25h[?12;25h[44;35H[?25l[7m3[0m[39;49m[27m[14;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[13;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[12;1H[?12l[?25h[?12;25h[44;35H[?25l[7m0[0m[39;49m[27m[11;1H[?12l[?25h[?12;25h[44;34H[?25l[7m9 [0m[39;49m[27m[10;1H[?12l[?25h[?12;25h[44;34H[?25l[7m8[0m[39;49m[27m[9;1H[?12l[?25h[?12;25h[44;34H[?25l[7m7[0m[39;49m[27m[8;1H[?12l[?25h[?12;25h[44;34H[?25l[7m6[0m[39;49m[27m[7;1H[?12l[?25h[?12;25h[44;34H[?25l[7m5[0m[39;49m[27m[6;1H[?12l[?25h[?12;25h[44;34H[?25l[7m4[0m[39;49m[27m[5;1H[?12l[?25h[?12;25h[44;34H[?25l[7m3[0m[39;49m[27m[4;1H[?12l[?25h[?12;25h[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m1[0m[39;49m[27m[H
[?12l[?25h[?12;25h[45d[?25lBeginning of buffer[H
[?12l[?25h[?12;25h[45d[K[44;34H[?25l[7m2[0m[39;49m[27m[H

[?12l[?25h[?12;25h[44;34H[?25l[7m3[0m[39;49m[27m[4;1H[?12l[?25h[?12;25h[44;34H[?25l[7m4[0m[39;49m[27m[5;1H[?12l[?25h[?12;25h[44;34H[?25l[7m5[0m[39;49m[27m[6;1H[?12l[?25h[?12;25h[44;34H[?25l[7m6[0m[39;49m[27m[7;1H[?12l[?25h[?12;25h[44;34H[?25l[7m7[0m[39;49m[27m[8;1H[?12l[?25h[?12;25h[44;34H[?25l[7m8[0m[39;49m[27m[9;1H[?12l[?25h[?12;25h[44;34H[?25l[7m9[0m[39;49m[27m[10;1H[?12l[?25h[?12;25h[44;34H[?25l[7m10[0m[39;49m[27m[11;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[12;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[13;1H[?12l[?25h[?12;25h[44;35H[?25l[7m3[0m[39;49m[27m[14;1H[?12l[?25h[?12;25h[44;35H[?25l[7m4[0m[39;49m[27m[15;1H[?12l[?25h[?12;25h[44;35H[?25l[7m5[0m[39;49m[27m[16;1H[?12l[?25h[?12;25h[44;35H[?25l[7m6[0m[39;49m[27m[17;1H[?12l[?25h[?12;25h[44;35H[?25l[7m7[0m[39;49m[27m[18;1H[?12l[?25h[?12;25h[44;35H[?25l[7m8[0m[39;49m[27m[19;1H[?12l[?25h[?12;25h[44;35H[?25l[7m9[0m[39;49m[27m[20;1H[?12l[?25h[?12;25h[44;34H[?25l[7m20[0m[39;49m[27m[21;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[22;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[23;1H[?12l[?25h[?12;25h[44;35H[?25l[7m3[0m[39;49m[27m[24;1H[?12l[?25h[?12;25h[44;35H[?25l[7m4[0m[39;49m[27m[25;1H[?12l[?25h[?12;25h[44;35H[?25l[7m5[0m[39;49m[27m[26;1H[?12l[?25h[?12;25h[44;35H[?25l[7m6[0m[39;49m[27m[27;1H[?12l[?25h[?12;25h[44;35H[?25l[7m7[0m[39;49m[27m[28;1H[?12l[?25h[?12;25h[44;35H[?25l[7m8[0m[39;49m[27m[29;1H[?12l[?25h[?12;25h[44;35H[?25l[7m9[0m[39;49m[27m[30;1H[?12l[?25h[?12;25h[44;34H[?25l[7m30[0m[39;49m[27m[31;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[32;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[33;1H[?12l[?25h[?12;25h[44;35H[?25l[7m3[0m[39;49m[27m[34;1H[?12l[?25h[?12;25h[44;35H[?25l[7m4[0m[39;49m[27m[35;1H[?12l[?25h[?12;25h[44;35H[?25l[7m5[0m[39;49m[27m[36;1H[?12l[?25h[?12;25h[44;35H[?25l[7m6[0m[39;49m[27m[37;1H[?12l[?25h[?12;25h[44;35H[?25l[7m7[0m[39;49m[27m[38;1H[?12l[?25h[?12;25h[44;35H[?25l[7m8[0m[39;49m[27m[39;1H[?12l[?25h[?12;25h[44;35H[?25l[7m9[0m[39;49m[27m[40;1H[?12l[?25h[?12;25h[44;34H[?25l[7m40[0m[39;49m[27m[41;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[42;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[A[?12l[?25h[?12;25h[2d[?25l*.la[K
lo

Shared objects (inc. Windows DLLs)[6;3Hdll
s
so.*
dylib[11;3HExecutables[K[12;3Hexe
out
ap
*.i*86
*.x86_64[K[17;3Hhex
[K
# Debug files
*.dSYM/[K
su[K
idb
pdb
[K
# Kernel Module Compile Results
*.mod*[K
cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf[K
[K
[K
[K
[K
[K
[K

[K
[K
[K
[K[44;29H[7mBot L43[0m[39;49m[27m[23;1H[?12l[?25h[?12;25h[44;35H[?25l[7m4[0m[39;49m[27m[24;1H[?12l[?25h[?12;25h[44;35H[?25l[7m5[0m[39;49m[27m[25;1H[?12l[?25h[?12;25h[44;35H[?25l[7m6[0m[39;49m[27m[26;1H[?12l[?25h[?12;25h[44;35H[?25l[7m7[0m[39;49m[27m[27;1H[?12l[?25h[?12;25h[44;35H[?25l[7m8[0m[39;49m[27m[28;1H[?12l[?25h[?12;25h[44;35H[?25l[7m9[0m[39;49m[27m[29;1H[?12l[?25h[?12;25h[44;34H[?25l[7m50[0m[39;49m[27m[30;1H[?12l[?25h[?12;25h[44;35H[?25l[7m1[0m[39;49m[27m[31;1H[?12l[?25h[?12;25h[44;35H[?25l[7m2[0m[39;49m[27m[32;1H[?12l[?25h[?12;25h[44;35H[?25l[7m3[0m[39;49m[27m[33;1H[?12l[?25h[?12;25h[?25l*[44;6H[7m**[0m[39;49m[27m[33;2H[?12l[?25h[?12;25h[?25l`[?12l[?25h[?12;25h[K[?25l~[?12l[?25h[?12;25h[45;1H[?25lSaving file /home/akozina2/cs220/i220b/.gitignore...[33;3H[?12l[?25h[?12;25h[45;1H[?25lWrote /home/akozina2/cs220/i220b/.gitignore[K[33;3H[?12l[?25h[?12;25h[44;6H[?25l[7m----F1  [0m[39;49m[27m[7m[1m.gitignore  [0m[39;49m[27m[7m   Bot L53   [0m[39;49m[27m[7mGit:[0m[39;49m[27m[33;3H[?12l[?25h[?12;25h[45;1H[K[33;3H[45;1H[K[?1004l[?2004l[>4m[?1l>[?12l[?25h[?1049l[23;0;0t[39;49makozina2@remote00:~/cs220/i220b$ git status -s #see if there are changes you want to commit
 [31mM[m .gitignore
akozina2@remote00:~/cs220/i220b$ git commit -a -m 'SOME COMMIT MSG' #commit if necessary
[main 52040dd] SOME COMMIT MSG
 Committer: Anna Kozina <akozina2@cs.binghamton.edu>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
akozina2@remote00:~/cs220/i220b$ git push #push changes to github
Warning: Permanently added the RSA host key for IP address '140.82.113.4' to the list of known hosts.
Enumerating objects: 5, done.
Counting objects:  20% (1/5)Counting objects:  40% (2/5)Counting objects:  60% (3/5)Counting objects:  80% (4/5)Counting objects: 100% (5/5)Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects:  33% (1/3)Compressing objects:  66% (2/3)Compressing objects: 100% (3/3)Compressing objects: 100% (3/3), done.
Writing objects:  33% (1/3)Writing objects:  66% (2/3)Writing objects: 100% (3/3)Writing objects: 100% (3/3), 323 bytes | 323.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas:   0% (0/1)[Kremote: Resolving deltas: 100% (1/1)[Kremote: Resolving deltas: 100% (1/1), completed with 1 local object.[K
To github.com:annitusha/i220b.git
   fc53206..52040dd  main -> main
akozina2@remote00:~/cs220/i220b$ ls -dl ~/cs220 ~/i220X[Kb
lrwxrwxrwx 1 akozina2 akozina2 14 Aug 26 15:10 /home/akozina2/cs220 -> projects/cs220
lrwxrwxrwx 1 akozina2 akozina2 29 Aug 26 16:54 /home/akozina2/i220b -> /home/akozina2/projects/i220b
akozina2@remote00:~/cs220/i220b$ ls -l ~/.ssh ~/cs220 ~/i220X [K[Kb
lrwxrwxrwx 1 akozina2 akozina2 14 Aug 26 15:10 /home/akozina2/cs220 -> projects/cs220
lrwxrwxrwx 1 akozina2 akozina2 29 Aug 26 16:54 /home/akozina2/i220b -> /home/akozina2/projects/i220b

/home/akozina2/.ssh:
total 16
-rw------- 1 akozina2 akozina2  571 Aug 25 21:44 authorized_keys
-rw------- 1 akozina2 akozina2 2602 Aug 25 21:41 id_rsa
-rw-r----- 1 akozina2 akozina2  571 Aug 25 21:41 id_rsa.pub
-rw-r--r-- 1 akozina2 akozina2 2656 Aug 26 16:57 known_hosts
akozina2@remote00:~/cs220/i220b$ git checkout -b lab0 #create a new branch
Switched to a new branch 'lab0'
akozina2@remote00:~/cs220/i220b$ mkdir -p submit #create a dir for submitting work to be graded
akozina2@remote00:~/cs220/i220b$ ls
README.md  submit
akozina2@remote00:~/cs220/i220b$ exit

Script done on 2021-08-26 17:10:32-04:00 [COMMAND_EXIT_CODE="0"]
