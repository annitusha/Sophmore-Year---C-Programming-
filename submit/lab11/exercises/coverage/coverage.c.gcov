        -:    0:Source:coverage.c
        -:    0:Graph:coverage.gcno
        -:    0:Data:coverage.gcda
        -:    0:Runs:11
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:
        -:    3:static int v[] = {
        -:    4:  211,  333, 319, 411, 911, 1001,
        -:    5:};
        -:    6:
       48:    7:static int compute(int a, int b, int c) {
       48:    8:  int s = v[2];
       48:    9:  if (v[0] < a && a < v[1]) {
       20:   10:    if (b < v[2]) { 
        5:   11:      s += v[2];
        5:   12:      if (c < v[3]) {
        3:   13:	s += v[4];
        -:   14:      }
        -:   15:      else {
        2:   16:	s += v[3];
        -:   17:      }
        -:   18:    }
        -:   19:    else {
        5:   20:      s += v[1];
        5:   21:      if (c < v[1]) {
        3:   22:	s += v[4];
        -:   23:      }
        -:   24:      else {
        2:   25:	s += v[2];
        -:   26:      }
        -:   27:    }
        -:   28:  }
        -:   29:  else {
       38:   30:    if (b < v[3]) {
        8:   31:      if (c < v[4]) {
        3:   32:	s += v[5];
        -:   33:      }
        -:   34:      else {
        5:   35:	s += v[1];
        -:   36:      }
        -:   37:    }
        -:   38:    else {
       30:   39:      if (c < v[2]) {
        2:   40:	s += v[1];
        -:   41:      }
        -:   42:      else {
       28:   43:	s += v[3];
        -:   44:      }
        -:   45:    }
        -:   46:  }
       48:   47:  return s;
        -:   48:}
        -:   49:
        -:   50:int 
       11:   51:main()
        -:   52:{
        -:   53:  int a, b, c;
       59:   54:  while (scanf("%d %d %d", &a, &b, &c) == 3) {
       48:   55:    printf("compute(%d, %d, %d) = %d\n", a, b, c, compute(a, b, c));
        -:   56:  }
       11:   57:  return 0;
        -:   58:}
